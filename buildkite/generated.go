// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package buildkite

import (
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// ClusterAgentTokenValues includes the GraphQL fields of ClusterToken requested by the fragment ClusterAgentTokenValues.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type ClusterAgentTokenValues struct {
	Cluster ClusterAgentTokenValuesCluster `json:"cluster"`
	// A description about what this cluster agent token is used for
	Description string `json:"description"`
	Id          string `json:"id"`
	// The public UUID for this cluster token
	Uuid string `json:"uuid"`
}

// GetCluster returns ClusterAgentTokenValues.Cluster, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValues) GetCluster() ClusterAgentTokenValuesCluster { return v.Cluster }

// GetDescription returns ClusterAgentTokenValues.Description, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValues) GetDescription() string { return v.Description }

// GetId returns ClusterAgentTokenValues.Id, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValues) GetId() string { return v.Id }

// GetUuid returns ClusterAgentTokenValues.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValues) GetUuid() string { return v.Uuid }

// ClusterAgentTokenValuesCluster includes the requested fields of the GraphQL type Cluster.
type ClusterAgentTokenValuesCluster struct {
	Id string `json:"id"`
	// The public UUID for this cluster
	Uuid string `json:"uuid"`
}

// GetId returns ClusterAgentTokenValuesCluster.Id, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValuesCluster) GetId() string { return v.Id }

// GetUuid returns ClusterAgentTokenValuesCluster.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValuesCluster) GetUuid() string { return v.Uuid }

// ClusterFields includes the GraphQL fields of Cluster requested by the fragment ClusterFields.
type ClusterFields struct {
	Id string `json:"id"`
	// The public UUID for this cluster
	Uuid string `json:"uuid"`
	// Name of the cluster
	Name string `json:"name"`
	// Description of the cluster
	Description *string `json:"description"`
	// Emoji for the cluster using Buildkite emoji syntax
	Emoji *string `json:"emoji"`
	// Color hex code for the cluster
	Color *string `json:"color"`
}

// GetId returns ClusterFields.Id, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetId() string { return v.Id }

// GetUuid returns ClusterFields.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetUuid() string { return v.Uuid }

// GetName returns ClusterFields.Name, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetName() string { return v.Name }

// GetDescription returns ClusterFields.Description, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetDescription() *string { return v.Description }

// GetEmoji returns ClusterFields.Emoji, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetEmoji() *string { return v.Emoji }

// GetColor returns ClusterFields.Color, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetColor() *string { return v.Color }

// ClusterQueueValues includes the GraphQL fields of ClusterQueue requested by the fragment ClusterQueueValues.
type ClusterQueueValues struct {
	Id string `json:"id"`
	// The public UUID for this cluster queue
	Uuid        string                    `json:"uuid"`
	Key         string                    `json:"key"`
	Description *string                   `json:"description"`
	Cluster     ClusterQueueValuesCluster `json:"cluster"`
}

// GetId returns ClusterQueueValues.Id, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetId() string { return v.Id }

// GetUuid returns ClusterQueueValues.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetUuid() string { return v.Uuid }

// GetKey returns ClusterQueueValues.Key, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetKey() string { return v.Key }

// GetDescription returns ClusterQueueValues.Description, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetDescription() *string { return v.Description }

// GetCluster returns ClusterQueueValues.Cluster, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetCluster() ClusterQueueValuesCluster { return v.Cluster }

// ClusterQueueValuesCluster includes the requested fields of the GraphQL type Cluster.
type ClusterQueueValuesCluster struct {
	Id string `json:"id"`
	// The public UUID for this cluster
	Uuid string `json:"uuid"`
}

// GetId returns ClusterQueueValuesCluster.Id, and is useful for accessing the field via an interface.
func (v *ClusterQueueValuesCluster) GetId() string { return v.Id }

// GetUuid returns ClusterQueueValuesCluster.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterQueueValuesCluster) GetUuid() string { return v.Uuid }

// The roles a user can be within a team
type GTeamMemberRole string

const (
	// The user is a regular member of the team
	GTeamMemberRoleMember GTeamMemberRole = "MEMBER"
	// The user can manage pipelines and users within the team
	GTeamMemberRoleMaintainer GTeamMemberRole = "MAINTAINER"
)

// Whether a team is visible or secret within an organization
type GenqlientTeamPrivacy string

const (
	// Visible to all members of the organization
	GenqlientTeamPrivacyVisible GenqlientTeamPrivacy = "VISIBLE"
	// Visible to organization administrators and members
	GenqlientTeamPrivacySecret GenqlientTeamPrivacy = "SECRET"
)

// The access levels that can be assigned to a pipeline
type PipelineAccessLevels string

const (
	// Allows edits, builds and reads
	PipelineAccessLevelsManageBuildAndRead PipelineAccessLevels = "MANAGE_BUILD_AND_READ"
	// Allows builds and read only
	PipelineAccessLevelsBuildAndRead PipelineAccessLevels = "BUILD_AND_READ"
	// Read only - no builds or edits
	PipelineAccessLevelsReadOnly PipelineAccessLevels = "READ_ONLY"
)

// Repository information for a pipeline
type PipelineRepositoryInput struct {
	// Repository information for a pipeline
	Url string `json:"url"`
}

// GetUrl returns PipelineRepositoryInput.Url, and is useful for accessing the field via an interface.
func (v *PipelineRepositoryInput) GetUrl() string { return v.Url }

// Autogenerated input type of PipelineScheduleUpdate
type PipelineScheduleUpdateInput struct {
	// Autogenerated input type of PipelineScheduleUpdate
	ClientMutationId string `json:"clientMutationId"`
	// Autogenerated input type of PipelineScheduleUpdate
	Id string `json:"id"`
	// Autogenerated input type of PipelineScheduleUpdate
	Label *string `json:"label"`
	// Autogenerated input type of PipelineScheduleUpdate
	Cronline *string `json:"cronline"`
	// Autogenerated input type of PipelineScheduleUpdate
	Message *string `json:"message"`
	// Autogenerated input type of PipelineScheduleUpdate
	Commit *string `json:"commit"`
	// Autogenerated input type of PipelineScheduleUpdate
	Branch *string `json:"branch"`
	// Autogenerated input type of PipelineScheduleUpdate
	Env *string `json:"env"`
	// Autogenerated input type of PipelineScheduleUpdate
	Enabled bool `json:"enabled,omitempty"`
}

// GetClientMutationId returns PipelineScheduleUpdateInput.ClientMutationId, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetClientMutationId() string { return v.ClientMutationId }

// GetId returns PipelineScheduleUpdateInput.Id, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetId() string { return v.Id }

// GetLabel returns PipelineScheduleUpdateInput.Label, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetLabel() *string { return v.Label }

// GetCronline returns PipelineScheduleUpdateInput.Cronline, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetCronline() *string { return v.Cronline }

// GetMessage returns PipelineScheduleUpdateInput.Message, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetMessage() *string { return v.Message }

// GetCommit returns PipelineScheduleUpdateInput.Commit, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetCommit() *string { return v.Commit }

// GetBranch returns PipelineScheduleUpdateInput.Branch, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetBranch() *string { return v.Branch }

// GetEnv returns PipelineScheduleUpdateInput.Env, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetEnv() *string { return v.Env }

// GetEnabled returns PipelineScheduleUpdateInput.Enabled, and is useful for accessing the field via an interface.
func (v *PipelineScheduleUpdateInput) GetEnabled() bool { return v.Enabled }

// PipelineScheduleValues includes the GraphQL fields of PipelineSchedule requested by the fragment PipelineScheduleValues.
// The GraphQL type's documentation follows.
//
// A schedule of when a build should automatically triggered for a Pipeline
type PipelineScheduleValues struct {
	Id string `json:"id"`
	// The UUID of the Pipeline schedule
	Uuid string `json:"uuid"`
	// A short description of the Pipeline schedule
	Label *string `json:"label"`
	// A definition of the trigger build schedule in cron syntax
	Cronline *string `json:"cronline"`
	// The message to use for builds that this schedule triggers
	Message *string `json:"message"`
	// The commit to use for builds that this schedule triggers. Defaults to `HEAD`
	Commit *string `json:"commit"`
	// The branch to use for builds that this schedule triggers. Defaults to to the default branch in the Pipeline
	Branch *string `json:"branch"`
	// Environment variables passed to any triggered builds
	Env []*string `json:"env"`
	// If this Pipeline schedule is currently enabled
	Enabled  bool                           `json:"enabled"`
	Pipeline PipelineScheduleValuesPipeline `json:"pipeline"`
}

// GetId returns PipelineScheduleValues.Id, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetId() string { return v.Id }

// GetUuid returns PipelineScheduleValues.Uuid, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetUuid() string { return v.Uuid }

// GetLabel returns PipelineScheduleValues.Label, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetLabel() *string { return v.Label }

// GetCronline returns PipelineScheduleValues.Cronline, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetCronline() *string { return v.Cronline }

// GetMessage returns PipelineScheduleValues.Message, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetMessage() *string { return v.Message }

// GetCommit returns PipelineScheduleValues.Commit, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetCommit() *string { return v.Commit }

// GetBranch returns PipelineScheduleValues.Branch, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetBranch() *string { return v.Branch }

// GetEnv returns PipelineScheduleValues.Env, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetEnv() []*string { return v.Env }

// GetEnabled returns PipelineScheduleValues.Enabled, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetEnabled() bool { return v.Enabled }

// GetPipeline returns PipelineScheduleValues.Pipeline, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValues) GetPipeline() PipelineScheduleValuesPipeline { return v.Pipeline }

// PipelineScheduleValuesPipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type PipelineScheduleValuesPipeline struct {
	Id string `json:"id"`
}

// GetId returns PipelineScheduleValuesPipeline.Id, and is useful for accessing the field via an interface.
func (v *PipelineScheduleValuesPipeline) GetId() string { return v.Id }

// Step definition for a pipeline
type PipelineStepsInput struct {
	// Step definition for a pipeline
	Yaml string `json:"yaml"`
}

// GetYaml returns PipelineStepsInput.Yaml, and is useful for accessing the field via an interface.
func (v *PipelineStepsInput) GetYaml() string { return v.Yaml }

// Tag associated with a pipeline
type PipelineTagInput struct {
	// Tag associated with a pipeline
	Label string `json:"label"`
}

// GetLabel returns PipelineTagInput.Label, and is useful for accessing the field via an interface.
func (v *PipelineTagInput) GetLabel() string { return v.Label }

// Autogenerated input type of PipelineUpdate
type PipelineUpdateInput struct {
	// Autogenerated input type of PipelineUpdate
	ClientMutationId string `json:"clientMutationId"`
	// Autogenerated input type of PipelineUpdate
	Id string `json:"id"`
	// Autogenerated input type of PipelineUpdate
	Name string `json:"name"`
	// Autogenerated input type of PipelineUpdate
	Description string `json:"description"`
	// Autogenerated input type of PipelineUpdate
	Emoji string `json:"emoji"`
	// Autogenerated input type of PipelineUpdate
	Color string `json:"color"`
	// Autogenerated input type of PipelineUpdate
	Visibility PipelineVisibility `json:"visibility,omitempty"`
	// Autogenerated input type of PipelineUpdate
	Repository PipelineRepositoryInput `json:"repository"`
	// Autogenerated input type of PipelineUpdate
	Steps PipelineStepsInput `json:"steps"`
	// Autogenerated input type of PipelineUpdate
	DefaultBranch string `json:"defaultBranch"`
	// Autogenerated input type of PipelineUpdate
	NextBuildNumber int `json:"nextBuildNumber,omitempty"`
	// Autogenerated input type of PipelineUpdate
	SkipIntermediateBuilds bool `json:"skipIntermediateBuilds"`
	// Autogenerated input type of PipelineUpdate
	SkipIntermediateBuildsBranchFilter string `json:"skipIntermediateBuildsBranchFilter"`
	// Autogenerated input type of PipelineUpdate
	CancelIntermediateBuilds bool `json:"cancelIntermediateBuilds"`
	// Autogenerated input type of PipelineUpdate
	CancelIntermediateBuildsBranchFilter string `json:"cancelIntermediateBuildsBranchFilter"`
	// Autogenerated input type of PipelineUpdate
	AllowRebuilds bool `json:"allowRebuilds"`
	// Autogenerated input type of PipelineUpdate
	DefaultTimeoutInMinutes int `json:"defaultTimeoutInMinutes"`
	// Autogenerated input type of PipelineUpdate
	MaximumTimeoutInMinutes int `json:"maximumTimeoutInMinutes"`
	// Autogenerated input type of PipelineUpdate
	ClusterId *string `json:"clusterId"`
	// Autogenerated input type of PipelineUpdate
	PipelineTemplateId string `json:"pipelineTemplateId,omitempty"`
	// Autogenerated input type of PipelineUpdate
	Archived bool `json:"archived,omitempty"`
	// Autogenerated input type of PipelineUpdate
	Tags []PipelineTagInput `json:"tags"`
	// Autogenerated input type of PipelineUpdate
	BranchConfiguration *string `json:"branchConfiguration"`
}

// GetClientMutationId returns PipelineUpdateInput.ClientMutationId, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetClientMutationId() string { return v.ClientMutationId }

// GetId returns PipelineUpdateInput.Id, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetId() string { return v.Id }

// GetName returns PipelineUpdateInput.Name, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetName() string { return v.Name }

// GetDescription returns PipelineUpdateInput.Description, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDescription() string { return v.Description }

// GetEmoji returns PipelineUpdateInput.Emoji, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetEmoji() string { return v.Emoji }

// GetColor returns PipelineUpdateInput.Color, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetColor() string { return v.Color }

// GetVisibility returns PipelineUpdateInput.Visibility, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetVisibility() PipelineVisibility { return v.Visibility }

// GetRepository returns PipelineUpdateInput.Repository, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetRepository() PipelineRepositoryInput { return v.Repository }

// GetSteps returns PipelineUpdateInput.Steps, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSteps() PipelineStepsInput { return v.Steps }

// GetDefaultBranch returns PipelineUpdateInput.DefaultBranch, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDefaultBranch() string { return v.DefaultBranch }

// GetNextBuildNumber returns PipelineUpdateInput.NextBuildNumber, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetNextBuildNumber() int { return v.NextBuildNumber }

// GetSkipIntermediateBuilds returns PipelineUpdateInput.SkipIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSkipIntermediateBuilds() bool { return v.SkipIntermediateBuilds }

// GetSkipIntermediateBuildsBranchFilter returns PipelineUpdateInput.SkipIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSkipIntermediateBuildsBranchFilter() string {
	return v.SkipIntermediateBuildsBranchFilter
}

// GetCancelIntermediateBuilds returns PipelineUpdateInput.CancelIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetCancelIntermediateBuilds() bool { return v.CancelIntermediateBuilds }

// GetCancelIntermediateBuildsBranchFilter returns PipelineUpdateInput.CancelIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetCancelIntermediateBuildsBranchFilter() string {
	return v.CancelIntermediateBuildsBranchFilter
}

// GetAllowRebuilds returns PipelineUpdateInput.AllowRebuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetAllowRebuilds() bool { return v.AllowRebuilds }

// GetDefaultTimeoutInMinutes returns PipelineUpdateInput.DefaultTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDefaultTimeoutInMinutes() int { return v.DefaultTimeoutInMinutes }

// GetMaximumTimeoutInMinutes returns PipelineUpdateInput.MaximumTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetMaximumTimeoutInMinutes() int { return v.MaximumTimeoutInMinutes }

// GetClusterId returns PipelineUpdateInput.ClusterId, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetClusterId() *string { return v.ClusterId }

// GetPipelineTemplateId returns PipelineUpdateInput.PipelineTemplateId, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetPipelineTemplateId() string { return v.PipelineTemplateId }

// GetArchived returns PipelineUpdateInput.Archived, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetArchived() bool { return v.Archived }

// GetTags returns PipelineUpdateInput.Tags, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetTags() []PipelineTagInput { return v.Tags }

// GetBranchConfiguration returns PipelineUpdateInput.BranchConfiguration, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBranchConfiguration() *string { return v.BranchConfiguration }

// The visibility of the pipeline
type PipelineVisibility string

const (
	// The pipeline is public
	PipelineVisibilityPublic PipelineVisibility = "PUBLIC"
	// The pipeline is private
	PipelineVisibilityPrivate PipelineVisibility = "PRIVATE"
)

// The roles a user can be within a team
type TeamMemberRole string

const (
	// The user is a regular member of the team
	TeamMemberRoleMember TeamMemberRole = "MEMBER"
	// The user can manage pipelines and users within the team
	TeamMemberRoleMaintainer TeamMemberRole = "MAINTAINER"
)

// TeamMemberValues includes the GraphQL fields of TeamMember requested by the fragment TeamMemberValues.
// The GraphQL type's documentation follows.
//
// An member of a team
type TeamMemberValues struct {
	Id string `json:"id"`
	// The public UUID for this team member
	Uuid string `json:"uuid"`
	// The team associated with this team member
	Team TeamMemberValuesTeam `json:"team"`
	// The user associated with this team member
	User TeamMemberValuesUser `json:"user"`
	// The users role within the team
	Role TeamMemberRole `json:"role"`
}

// GetId returns TeamMemberValues.Id, and is useful for accessing the field via an interface.
func (v *TeamMemberValues) GetId() string { return v.Id }

// GetUuid returns TeamMemberValues.Uuid, and is useful for accessing the field via an interface.
func (v *TeamMemberValues) GetUuid() string { return v.Uuid }

// GetTeam returns TeamMemberValues.Team, and is useful for accessing the field via an interface.
func (v *TeamMemberValues) GetTeam() TeamMemberValuesTeam { return v.Team }

// GetUser returns TeamMemberValues.User, and is useful for accessing the field via an interface.
func (v *TeamMemberValues) GetUser() TeamMemberValuesUser { return v.User }

// GetRole returns TeamMemberValues.Role, and is useful for accessing the field via an interface.
func (v *TeamMemberValues) GetRole() TeamMemberRole { return v.Role }

// TeamMemberValuesTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type TeamMemberValuesTeam struct {
	Id string `json:"id"`
}

// GetId returns TeamMemberValuesTeam.Id, and is useful for accessing the field via an interface.
func (v *TeamMemberValuesTeam) GetId() string { return v.Id }

// TeamMemberValuesUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user
type TeamMemberValuesUser struct {
	Id string `json:"id"`
}

// GetId returns TeamMemberValuesUser.Id, and is useful for accessing the field via an interface.
func (v *TeamMemberValuesUser) GetId() string { return v.Id }

// Whether a team is visible or secret within an organization
type TeamPrivacy string

const (
	// Visible to all members of the organization
	TeamPrivacyVisible TeamPrivacy = "VISIBLE"
	// Visible to organization administrators and members
	TeamPrivacySecret TeamPrivacy = "SECRET"
)

// __archivePipelineInput is used internally by genqlient
type __archivePipelineInput struct {
	Id string `json:"id"`
}

// GetId returns __archivePipelineInput.Id, and is useful for accessing the field via an interface.
func (v *__archivePipelineInput) GetId() string { return v.Id }

// __createAgentTokenInput is used internally by genqlient
type __createAgentTokenInput struct {
	OrganizationId string  `json:"organizationId"`
	Description    *string `json:"description"`
}

// GetOrganizationId returns __createAgentTokenInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__createAgentTokenInput) GetOrganizationId() string { return v.OrganizationId }

// GetDescription returns __createAgentTokenInput.Description, and is useful for accessing the field via an interface.
func (v *__createAgentTokenInput) GetDescription() *string { return v.Description }

// __createClusterAgentTokenInput is used internally by genqlient
type __createClusterAgentTokenInput struct {
	OrganizationId string `json:"organizationId"`
	ClusterId      string `json:"clusterId"`
	Description    string `json:"description"`
}

// GetOrganizationId returns __createClusterAgentTokenInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__createClusterAgentTokenInput) GetOrganizationId() string { return v.OrganizationId }

// GetClusterId returns __createClusterAgentTokenInput.ClusterId, and is useful for accessing the field via an interface.
func (v *__createClusterAgentTokenInput) GetClusterId() string { return v.ClusterId }

// GetDescription returns __createClusterAgentTokenInput.Description, and is useful for accessing the field via an interface.
func (v *__createClusterAgentTokenInput) GetDescription() string { return v.Description }

// __createClusterInput is used internally by genqlient
type __createClusterInput struct {
	OrganizationId string  `json:"organizationId"`
	Name           string  `json:"name"`
	Description    *string `json:"description"`
	Emoji          *string `json:"emoji"`
	Color          *string `json:"color"`
}

// GetOrganizationId returns __createClusterInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetOrganizationId() string { return v.OrganizationId }

// GetName returns __createClusterInput.Name, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetName() string { return v.Name }

// GetDescription returns __createClusterInput.Description, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetDescription() *string { return v.Description }

// GetEmoji returns __createClusterInput.Emoji, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetEmoji() *string { return v.Emoji }

// GetColor returns __createClusterInput.Color, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetColor() *string { return v.Color }

// __createClusterQueueInput is used internally by genqlient
type __createClusterQueueInput struct {
	OrganizationId string  `json:"organizationId"`
	ClusterId      string  `json:"clusterId"`
	Key            string  `json:"key"`
	Description    *string `json:"description"`
}

// GetOrganizationId returns __createClusterQueueInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__createClusterQueueInput) GetOrganizationId() string { return v.OrganizationId }

// GetClusterId returns __createClusterQueueInput.ClusterId, and is useful for accessing the field via an interface.
func (v *__createClusterQueueInput) GetClusterId() string { return v.ClusterId }

// GetKey returns __createClusterQueueInput.Key, and is useful for accessing the field via an interface.
func (v *__createClusterQueueInput) GetKey() string { return v.Key }

// GetDescription returns __createClusterQueueInput.Description, and is useful for accessing the field via an interface.
func (v *__createClusterQueueInput) GetDescription() *string { return v.Description }

// __createPipelineScheduleInput is used internally by genqlient
type __createPipelineScheduleInput struct {
	PipelineId string  `json:"pipelineId"`
	Label      *string `json:"label"`
	Cronline   *string `json:"cronline"`
	Message    *string `json:"message"`
	Commit     *string `json:"commit"`
	Branch     *string `json:"branch"`
	Env        *string `json:"env"`
	Enabled    bool    `json:"enabled"`
}

// GetPipelineId returns __createPipelineScheduleInput.PipelineId, and is useful for accessing the field via an interface.
func (v *__createPipelineScheduleInput) GetPipelineId() string { return v.PipelineId }

// GetLabel returns __createPipelineScheduleInput.Label, and is useful for accessing the field via an interface.
func (v *__createPipelineScheduleInput) GetLabel() *string { return v.Label }

// GetCronline returns __createPipelineScheduleInput.Cronline, and is useful for accessing the field via an interface.
func (v *__createPipelineScheduleInput) GetCronline() *string { return v.Cronline }

// GetMessage returns __createPipelineScheduleInput.Message, and is useful for accessing the field via an interface.
func (v *__createPipelineScheduleInput) GetMessage() *string { return v.Message }

// GetCommit returns __createPipelineScheduleInput.Commit, and is useful for accessing the field via an interface.
func (v *__createPipelineScheduleInput) GetCommit() *string { return v.Commit }

// GetBranch returns __createPipelineScheduleInput.Branch, and is useful for accessing the field via an interface.
func (v *__createPipelineScheduleInput) GetBranch() *string { return v.Branch }

// GetEnv returns __createPipelineScheduleInput.Env, and is useful for accessing the field via an interface.
func (v *__createPipelineScheduleInput) GetEnv() *string { return v.Env }

// GetEnabled returns __createPipelineScheduleInput.Enabled, and is useful for accessing the field via an interface.
func (v *__createPipelineScheduleInput) GetEnabled() bool { return v.Enabled }

// __createTeamMemberInput is used internally by genqlient
type __createTeamMemberInput struct {
	TeamID string         `json:"teamID"`
	UserID string         `json:"userID"`
	Role   TeamMemberRole `json:"role,omitempty"`
}

// GetTeamID returns __createTeamMemberInput.TeamID, and is useful for accessing the field via an interface.
func (v *__createTeamMemberInput) GetTeamID() string { return v.TeamID }

// GetUserID returns __createTeamMemberInput.UserID, and is useful for accessing the field via an interface.
func (v *__createTeamMemberInput) GetUserID() string { return v.UserID }

// GetRole returns __createTeamMemberInput.Role, and is useful for accessing the field via an interface.
func (v *__createTeamMemberInput) GetRole() TeamMemberRole { return v.Role }

// __deleteClusterInput is used internally by genqlient
type __deleteClusterInput struct {
	OrganizationId string `json:"organizationId"`
	Id             string `json:"id"`
}

// GetOrganizationId returns __deleteClusterInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__deleteClusterInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __deleteClusterInput.Id, and is useful for accessing the field via an interface.
func (v *__deleteClusterInput) GetId() string { return v.Id }

// __deleteClusterQueueInput is used internally by genqlient
type __deleteClusterQueueInput struct {
	OrganizationId string `json:"organizationId"`
	Id             string `json:"id"`
}

// GetOrganizationId returns __deleteClusterQueueInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__deleteClusterQueueInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __deleteClusterQueueInput.Id, and is useful for accessing the field via an interface.
func (v *__deleteClusterQueueInput) GetId() string { return v.Id }

// __deletePipelineScheduleInput is used internally by genqlient
type __deletePipelineScheduleInput struct {
	Id string `json:"id"`
}

// GetId returns __deletePipelineScheduleInput.Id, and is useful for accessing the field via an interface.
func (v *__deletePipelineScheduleInput) GetId() string { return v.Id }

// __deletePipelineInput is used internally by genqlient
type __deletePipelineInput struct {
	Id string `json:"id"`
}

// GetId returns __deletePipelineInput.Id, and is useful for accessing the field via an interface.
func (v *__deletePipelineInput) GetId() string { return v.Id }

// __deleteTeamMemberInput is used internally by genqlient
type __deleteTeamMemberInput struct {
	Id string `json:"id"`
}

// GetId returns __deleteTeamMemberInput.Id, and is useful for accessing the field via an interface.
func (v *__deleteTeamMemberInput) GetId() string { return v.Id }

// __getAgentTokenInput is used internally by genqlient
type __getAgentTokenInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getAgentTokenInput.Slug, and is useful for accessing the field via an interface.
func (v *__getAgentTokenInput) GetSlug() string { return v.Slug }

// __getClusterAgentTokensInput is used internally by genqlient
type __getClusterAgentTokensInput struct {
	OrgSlug string `json:"orgSlug"`
	Id      string `json:"id"`
}

// GetOrgSlug returns __getClusterAgentTokensInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__getClusterAgentTokensInput) GetOrgSlug() string { return v.OrgSlug }

// GetId returns __getClusterAgentTokensInput.Id, and is useful for accessing the field via an interface.
func (v *__getClusterAgentTokensInput) GetId() string { return v.Id }

// __getClusterByNameInput is used internally by genqlient
type __getClusterByNameInput struct {
	OrgSlug string  `json:"orgSlug"`
	Cursor  *string `json:"cursor"`
}

// GetOrgSlug returns __getClusterByNameInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__getClusterByNameInput) GetOrgSlug() string { return v.OrgSlug }

// GetCursor returns __getClusterByNameInput.Cursor, and is useful for accessing the field via an interface.
func (v *__getClusterByNameInput) GetCursor() *string { return v.Cursor }

// __getClusterInput is used internally by genqlient
type __getClusterInput struct {
	OrgSlug string `json:"orgSlug"`
	Id      string `json:"id"`
}

// GetOrgSlug returns __getClusterInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__getClusterInput) GetOrgSlug() string { return v.OrgSlug }

// GetId returns __getClusterInput.Id, and is useful for accessing the field via an interface.
func (v *__getClusterInput) GetId() string { return v.Id }

// __getClusterQueuesInput is used internally by genqlient
type __getClusterQueuesInput struct {
	OrgSlug string `json:"orgSlug"`
	Id      string `json:"id"`
}

// GetOrgSlug returns __getClusterQueuesInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__getClusterQueuesInput) GetOrgSlug() string { return v.OrgSlug }

// GetId returns __getClusterQueuesInput.Id, and is useful for accessing the field via an interface.
func (v *__getClusterQueuesInput) GetId() string { return v.Id }

// __getNodeInput is used internally by genqlient
type __getNodeInput struct {
	Id string `json:"id"`
}

// GetId returns __getNodeInput.Id, and is useful for accessing the field via an interface.
func (v *__getNodeInput) GetId() string { return v.Id }

// __getOrganizationInput is used internally by genqlient
type __getOrganizationInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getOrganizationInput.Slug, and is useful for accessing the field via an interface.
func (v *__getOrganizationInput) GetSlug() string { return v.Slug }

// __getPipelineInput is used internally by genqlient
type __getPipelineInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getPipelineInput.Slug, and is useful for accessing the field via an interface.
func (v *__getPipelineInput) GetSlug() string { return v.Slug }

// __getPipelineScheduleBySlugInput is used internally by genqlient
type __getPipelineScheduleBySlugInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getPipelineScheduleBySlugInput.Slug, and is useful for accessing the field via an interface.
func (v *__getPipelineScheduleBySlugInput) GetSlug() string { return v.Slug }

// __getPipelineScheduleInput is used internally by genqlient
type __getPipelineScheduleInput struct {
	Id string `json:"id"`
}

// GetId returns __getPipelineScheduleInput.Id, and is useful for accessing the field via an interface.
func (v *__getPipelineScheduleInput) GetId() string { return v.Id }

// __getTeamInput is used internally by genqlient
type __getTeamInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getTeamInput.Slug, and is useful for accessing the field via an interface.
func (v *__getTeamInput) GetSlug() string { return v.Slug }

// __revokeAgentTokenInput is used internally by genqlient
type __revokeAgentTokenInput struct {
	Id     string `json:"id"`
	Reason string `json:"reason"`
}

// GetId returns __revokeAgentTokenInput.Id, and is useful for accessing the field via an interface.
func (v *__revokeAgentTokenInput) GetId() string { return v.Id }

// GetReason returns __revokeAgentTokenInput.Reason, and is useful for accessing the field via an interface.
func (v *__revokeAgentTokenInput) GetReason() string { return v.Reason }

// __revokeClusterAgentTokenInput is used internally by genqlient
type __revokeClusterAgentTokenInput struct {
	OrganizationId string `json:"organizationId"`
	Id             string `json:"id"`
}

// GetOrganizationId returns __revokeClusterAgentTokenInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__revokeClusterAgentTokenInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __revokeClusterAgentTokenInput.Id, and is useful for accessing the field via an interface.
func (v *__revokeClusterAgentTokenInput) GetId() string { return v.Id }

// __setApiIpAddressesInput is used internally by genqlient
type __setApiIpAddressesInput struct {
	OrganizationID string `json:"organizationID"`
	IpAddresses    string `json:"ipAddresses"`
}

// GetOrganizationID returns __setApiIpAddressesInput.OrganizationID, and is useful for accessing the field via an interface.
func (v *__setApiIpAddressesInput) GetOrganizationID() string { return v.OrganizationID }

// GetIpAddresses returns __setApiIpAddressesInput.IpAddresses, and is useful for accessing the field via an interface.
func (v *__setApiIpAddressesInput) GetIpAddresses() string { return v.IpAddresses }

// __updateClusterAgentTokenInput is used internally by genqlient
type __updateClusterAgentTokenInput struct {
	OrganizationId string `json:"organizationId"`
	Id             string `json:"id"`
	Description    string `json:"description"`
}

// GetOrganizationId returns __updateClusterAgentTokenInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__updateClusterAgentTokenInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __updateClusterAgentTokenInput.Id, and is useful for accessing the field via an interface.
func (v *__updateClusterAgentTokenInput) GetId() string { return v.Id }

// GetDescription returns __updateClusterAgentTokenInput.Description, and is useful for accessing the field via an interface.
func (v *__updateClusterAgentTokenInput) GetDescription() string { return v.Description }

// __updateClusterInput is used internally by genqlient
type __updateClusterInput struct {
	OrganizationId string  `json:"organizationId"`
	Id             string  `json:"id"`
	Name           string  `json:"name"`
	Description    *string `json:"description"`
	Emoji          *string `json:"emoji"`
	Color          *string `json:"color"`
}

// GetOrganizationId returns __updateClusterInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __updateClusterInput.Id, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetId() string { return v.Id }

// GetName returns __updateClusterInput.Name, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetName() string { return v.Name }

// GetDescription returns __updateClusterInput.Description, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetDescription() *string { return v.Description }

// GetEmoji returns __updateClusterInput.Emoji, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetEmoji() *string { return v.Emoji }

// GetColor returns __updateClusterInput.Color, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetColor() *string { return v.Color }

// __updateClusterQueueInput is used internally by genqlient
type __updateClusterQueueInput struct {
	OrganizationId string  `json:"organizationId"`
	Id             string  `json:"id"`
	Description    *string `json:"description"`
}

// GetOrganizationId returns __updateClusterQueueInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__updateClusterQueueInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __updateClusterQueueInput.Id, and is useful for accessing the field via an interface.
func (v *__updateClusterQueueInput) GetId() string { return v.Id }

// GetDescription returns __updateClusterQueueInput.Description, and is useful for accessing the field via an interface.
func (v *__updateClusterQueueInput) GetDescription() *string { return v.Description }

// __updatePipelineInput is used internally by genqlient
type __updatePipelineInput struct {
	Input PipelineUpdateInput `json:"input"`
}

// GetInput returns __updatePipelineInput.Input, and is useful for accessing the field via an interface.
func (v *__updatePipelineInput) GetInput() PipelineUpdateInput { return v.Input }

// __updatePipelineScheduleInput is used internally by genqlient
type __updatePipelineScheduleInput struct {
	Input PipelineScheduleUpdateInput `json:"input"`
}

// GetInput returns __updatePipelineScheduleInput.Input, and is useful for accessing the field via an interface.
func (v *__updatePipelineScheduleInput) GetInput() PipelineScheduleUpdateInput { return v.Input }

// __updateTeamMemberInput is used internally by genqlient
type __updateTeamMemberInput struct {
	Id   string         `json:"id"`
	Role TeamMemberRole `json:"role"`
}

// GetId returns __updateTeamMemberInput.Id, and is useful for accessing the field via an interface.
func (v *__updateTeamMemberInput) GetId() string { return v.Id }

// GetRole returns __updateTeamMemberInput.Role, and is useful for accessing the field via an interface.
func (v *__updateTeamMemberInput) GetRole() TeamMemberRole { return v.Role }

// archivePipelinePipelineArchivePipelineArchivePayload includes the requested fields of the GraphQL type PipelineArchivePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineArchive.
type archivePipelinePipelineArchivePipelineArchivePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId"`
}

// GetClientMutationId returns archivePipelinePipelineArchivePipelineArchivePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *archivePipelinePipelineArchivePipelineArchivePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// archivePipelineResponse is returned by archivePipeline on success.
type archivePipelineResponse struct {
	// Archive a pipeline.
	PipelineArchive archivePipelinePipelineArchivePipelineArchivePayload `json:"pipelineArchive"`
}

// GetPipelineArchive returns archivePipelineResponse.PipelineArchive, and is useful for accessing the field via an interface.
func (v *archivePipelineResponse) GetPipelineArchive() archivePipelinePipelineArchivePipelineArchivePayload {
	return v.PipelineArchive
}

// createAgentTokenAgentTokenCreateAgentTokenCreatePayload includes the requested fields of the GraphQL type AgentTokenCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of AgentTokenCreate.
type createAgentTokenAgentTokenCreateAgentTokenCreatePayload struct {
	// The token value used to register a new agent. Please ensure to securely copy this value immediately upon generation as it will not be displayed again.
	TokenValue     string                                                                `json:"tokenValue"`
	AgentTokenEdge createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge `json:"agentTokenEdge"`
}

// GetTokenValue returns createAgentTokenAgentTokenCreateAgentTokenCreatePayload.TokenValue, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayload) GetTokenValue() string {
	return v.TokenValue
}

// GetAgentTokenEdge returns createAgentTokenAgentTokenCreateAgentTokenCreatePayload.AgentTokenEdge, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayload) GetAgentTokenEdge() createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge {
	return v.AgentTokenEdge
}

// createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge includes the requested fields of the GraphQL type AgentTokenEdge.
type createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge struct {
	Node createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken `json:"node"`
}

// GetNode returns createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge.Node, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge) GetNode() createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken {
	return v.Node
}

// createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken struct {
	Id string `json:"id"`
	// A description about what this agent token is used for
	Description *string `json:"description"`
	// The public UUID for the agent
	Uuid string `json:"uuid"`
}

// GetId returns createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken.Id, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken) GetId() string {
	return v.Id
}

// GetDescription returns createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken.Description, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken) GetDescription() *string {
	return v.Description
}

// GetUuid returns createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken.Uuid, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken) GetUuid() string {
	return v.Uuid
}

// createAgentTokenResponse is returned by createAgentToken on success.
type createAgentTokenResponse struct {
	// Create a new agent registration token.
	AgentTokenCreate createAgentTokenAgentTokenCreateAgentTokenCreatePayload `json:"agentTokenCreate"`
}

// GetAgentTokenCreate returns createAgentTokenResponse.AgentTokenCreate, and is useful for accessing the field via an interface.
func (v *createAgentTokenResponse) GetAgentTokenCreate() createAgentTokenAgentTokenCreateAgentTokenCreatePayload {
	return v.AgentTokenCreate
}

// createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload includes the requested fields of the GraphQL type ClusterAgentTokenCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterAgentTokenCreate.
type createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload struct {
	ClusterAgentToken createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken `json:"clusterAgentToken"`
	// The token value used to register a new agent to this tokens cluster. Please ensure to securely copy this value immediately upon generation as it will not be displayed again.
	TokenValue string `json:"tokenValue"`
}

// GetClusterAgentToken returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload.ClusterAgentToken, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload) GetClusterAgentToken() createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken {
	return v.ClusterAgentToken
}

// GetTokenValue returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload.TokenValue, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload) GetTokenValue() string {
	return v.TokenValue
}

// createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken struct {
	ClusterAgentTokenValues `json:"-"`
}

// GetCluster returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken.Cluster, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) GetCluster() ClusterAgentTokenValuesCluster {
	return v.ClusterAgentTokenValues.Cluster
}

// GetDescription returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken.Description, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) GetDescription() string {
	return v.ClusterAgentTokenValues.Description
}

// GetId returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken.Id, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) GetId() string {
	return v.ClusterAgentTokenValues.Id
}

// GetUuid returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken.Uuid, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) GetUuid() string {
	return v.ClusterAgentTokenValues.Uuid
}

func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken
		graphql.NoUnmarshalJSON
	}
	firstPass.createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterAgentTokenValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalcreateClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken struct {
	Cluster ClusterAgentTokenValuesCluster `json:"cluster"`

	Description string `json:"description"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`
}

func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) __premarshalJSON() (*__premarshalcreateClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken, error) {
	var retval __premarshalcreateClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken

	retval.Cluster = v.ClusterAgentTokenValues.Cluster
	retval.Description = v.ClusterAgentTokenValues.Description
	retval.Id = v.ClusterAgentTokenValues.Id
	retval.Uuid = v.ClusterAgentTokenValues.Uuid
	return &retval, nil
}

// createClusterAgentTokenResponse is returned by createClusterAgentToken on success.
type createClusterAgentTokenResponse struct {
	// Create a new cluster agent token
	ClusterAgentTokenCreate createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload `json:"clusterAgentTokenCreate"`
}

// GetClusterAgentTokenCreate returns createClusterAgentTokenResponse.ClusterAgentTokenCreate, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenResponse) GetClusterAgentTokenCreate() createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload {
	return v.ClusterAgentTokenCreate
}

// createClusterClusterCreateClusterCreatePayload includes the requested fields of the GraphQL type ClusterCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterCreate.
type createClusterClusterCreateClusterCreatePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string                                                `json:"clientMutationId"`
	Cluster          createClusterClusterCreateClusterCreatePayloadCluster `json:"cluster"`
}

// GetClientMutationId returns createClusterClusterCreateClusterCreatePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// GetCluster returns createClusterClusterCreateClusterCreatePayload.Cluster, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayload) GetCluster() createClusterClusterCreateClusterCreatePayloadCluster {
	return v.Cluster
}

// createClusterClusterCreateClusterCreatePayloadCluster includes the requested fields of the GraphQL type Cluster.
type createClusterClusterCreateClusterCreatePayloadCluster struct {
	ClusterFields `json:"-"`
}

// GetId returns createClusterClusterCreateClusterCreatePayloadCluster.Id, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetId() string {
	return v.ClusterFields.Id
}

// GetUuid returns createClusterClusterCreateClusterCreatePayloadCluster.Uuid, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetUuid() string {
	return v.ClusterFields.Uuid
}

// GetName returns createClusterClusterCreateClusterCreatePayloadCluster.Name, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetName() string {
	return v.ClusterFields.Name
}

// GetDescription returns createClusterClusterCreateClusterCreatePayloadCluster.Description, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetDescription() *string {
	return v.ClusterFields.Description
}

// GetEmoji returns createClusterClusterCreateClusterCreatePayloadCluster.Emoji, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetEmoji() *string {
	return v.ClusterFields.Emoji
}

// GetColor returns createClusterClusterCreateClusterCreatePayloadCluster.Color, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetColor() *string {
	return v.ClusterFields.Color
}

func (v *createClusterClusterCreateClusterCreatePayloadCluster) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createClusterClusterCreateClusterCreatePayloadCluster
		graphql.NoUnmarshalJSON
	}
	firstPass.createClusterClusterCreateClusterCreatePayloadCluster = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalcreateClusterClusterCreateClusterCreatePayloadCluster struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description *string `json:"description"`

	Emoji *string `json:"emoji"`

	Color *string `json:"color"`
}

func (v *createClusterClusterCreateClusterCreatePayloadCluster) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createClusterClusterCreateClusterCreatePayloadCluster) __premarshalJSON() (*__premarshalcreateClusterClusterCreateClusterCreatePayloadCluster, error) {
	var retval __premarshalcreateClusterClusterCreateClusterCreatePayloadCluster

	retval.Id = v.ClusterFields.Id
	retval.Uuid = v.ClusterFields.Uuid
	retval.Name = v.ClusterFields.Name
	retval.Description = v.ClusterFields.Description
	retval.Emoji = v.ClusterFields.Emoji
	retval.Color = v.ClusterFields.Color
	return &retval, nil
}

// createClusterQueueClusterQueueCreateClusterQueueCreatePayload includes the requested fields of the GraphQL type ClusterQueueCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterQueueCreate.
type createClusterQueueClusterQueueCreateClusterQueueCreatePayload struct {
	ClusterQueue createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue `json:"clusterQueue"`
}

// GetClusterQueue returns createClusterQueueClusterQueueCreateClusterQueueCreatePayload.ClusterQueue, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayload) GetClusterQueue() createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue {
	return v.ClusterQueue
}

// createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue struct {
	ClusterQueueValues `json:"-"`
}

// GetId returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Id, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetId() string {
	return v.ClusterQueueValues.Id
}

// GetUuid returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Uuid, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetUuid() string {
	return v.ClusterQueueValues.Uuid
}

// GetKey returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Key, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetKey() string {
	return v.ClusterQueueValues.Key
}

// GetDescription returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Description, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetDescription() *string {
	return v.ClusterQueueValues.Description
}

// GetCluster returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Cluster, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetCluster() ClusterQueueValuesCluster {
	return v.ClusterQueueValues.Cluster
}

func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue
		graphql.NoUnmarshalJSON
	}
	firstPass.createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterQueueValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalcreateClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Key string `json:"key"`

	Description *string `json:"description"`

	Cluster ClusterQueueValuesCluster `json:"cluster"`
}

func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) __premarshalJSON() (*__premarshalcreateClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue, error) {
	var retval __premarshalcreateClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue

	retval.Id = v.ClusterQueueValues.Id
	retval.Uuid = v.ClusterQueueValues.Uuid
	retval.Key = v.ClusterQueueValues.Key
	retval.Description = v.ClusterQueueValues.Description
	retval.Cluster = v.ClusterQueueValues.Cluster
	return &retval, nil
}

// createClusterQueueResponse is returned by createClusterQueue on success.
type createClusterQueueResponse struct {
	// Create a cluster queue.
	ClusterQueueCreate createClusterQueueClusterQueueCreateClusterQueueCreatePayload `json:"clusterQueueCreate"`
}

// GetClusterQueueCreate returns createClusterQueueResponse.ClusterQueueCreate, and is useful for accessing the field via an interface.
func (v *createClusterQueueResponse) GetClusterQueueCreate() createClusterQueueClusterQueueCreateClusterQueueCreatePayload {
	return v.ClusterQueueCreate
}

// createClusterResponse is returned by createCluster on success.
type createClusterResponse struct {
	// Create a cluster.
	ClusterCreate createClusterClusterCreateClusterCreatePayload `json:"clusterCreate"`
}

// GetClusterCreate returns createClusterResponse.ClusterCreate, and is useful for accessing the field via an interface.
func (v *createClusterResponse) GetClusterCreate() createClusterClusterCreateClusterCreatePayload {
	return v.ClusterCreate
}

// createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayload includes the requested fields of the GraphQL type PipelineScheduleCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineScheduleCreate.
type createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayload struct {
	Pipeline             createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipeline             `json:"pipeline"`
	PipelineScheduleEdge createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdge `json:"pipelineScheduleEdge"`
}

// GetPipeline returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayload.Pipeline, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayload) GetPipeline() createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipeline {
	return v.Pipeline
}

// GetPipelineScheduleEdge returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayload.PipelineScheduleEdge, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayload) GetPipelineScheduleEdge() createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdge {
	return v.PipelineScheduleEdge
}

// createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipeline struct {
	Id string `json:"id"`
}

// GetId returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipeline.Id, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipeline) GetId() string {
	return v.Id
}

// createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdge includes the requested fields of the GraphQL type PipelineScheduleEdge.
type createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdge struct {
	Node createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule `json:"node"`
}

// GetNode returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdge.Node, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdge) GetNode() createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule {
	return v.Node
}

// createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule includes the requested fields of the GraphQL type PipelineSchedule.
// The GraphQL type's documentation follows.
//
// A schedule of when a build should automatically triggered for a Pipeline
type createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule struct {
	PipelineScheduleValues `json:"-"`
}

// GetId returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Id, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetId() string {
	return v.PipelineScheduleValues.Id
}

// GetUuid returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Uuid, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetUuid() string {
	return v.PipelineScheduleValues.Uuid
}

// GetLabel returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Label, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetLabel() *string {
	return v.PipelineScheduleValues.Label
}

// GetCronline returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Cronline, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetCronline() *string {
	return v.PipelineScheduleValues.Cronline
}

// GetMessage returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Message, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetMessage() *string {
	return v.PipelineScheduleValues.Message
}

// GetCommit returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Commit, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetCommit() *string {
	return v.PipelineScheduleValues.Commit
}

// GetBranch returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Branch, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetBranch() *string {
	return v.PipelineScheduleValues.Branch
}

// GetEnv returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Env, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetEnv() []*string {
	return v.PipelineScheduleValues.Env
}

// GetEnabled returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Enabled, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetEnabled() bool {
	return v.PipelineScheduleValues.Enabled
}

// GetPipeline returns createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule.Pipeline, and is useful for accessing the field via an interface.
func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) GetPipeline() PipelineScheduleValuesPipeline {
	return v.PipelineScheduleValues.Pipeline
}

func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule
		graphql.NoUnmarshalJSON
	}
	firstPass.createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PipelineScheduleValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalcreatePipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Label *string `json:"label"`

	Cronline *string `json:"cronline"`

	Message *string `json:"message"`

	Commit *string `json:"commit"`

	Branch *string `json:"branch"`

	Env []*string `json:"env"`

	Enabled bool `json:"enabled"`

	Pipeline PipelineScheduleValuesPipeline `json:"pipeline"`
}

func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule) __premarshalJSON() (*__premarshalcreatePipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule, error) {
	var retval __premarshalcreatePipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayloadPipelineScheduleEdgeNodePipelineSchedule

	retval.Id = v.PipelineScheduleValues.Id
	retval.Uuid = v.PipelineScheduleValues.Uuid
	retval.Label = v.PipelineScheduleValues.Label
	retval.Cronline = v.PipelineScheduleValues.Cronline
	retval.Message = v.PipelineScheduleValues.Message
	retval.Commit = v.PipelineScheduleValues.Commit
	retval.Branch = v.PipelineScheduleValues.Branch
	retval.Env = v.PipelineScheduleValues.Env
	retval.Enabled = v.PipelineScheduleValues.Enabled
	retval.Pipeline = v.PipelineScheduleValues.Pipeline
	return &retval, nil
}

// createPipelineScheduleResponse is returned by createPipelineSchedule on success.
type createPipelineScheduleResponse struct {
	// Create a scheduled build on pipeline.
	PipelineScheduleCreate createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayload `json:"pipelineScheduleCreate"`
}

// GetPipelineScheduleCreate returns createPipelineScheduleResponse.PipelineScheduleCreate, and is useful for accessing the field via an interface.
func (v *createPipelineScheduleResponse) GetPipelineScheduleCreate() createPipelineSchedulePipelineScheduleCreatePipelineScheduleCreatePayload {
	return v.PipelineScheduleCreate
}

// createTeamMemberResponse is returned by createTeamMember on success.
type createTeamMemberResponse struct {
	// Add a user to a team.
	TeamMemberCreate createTeamMemberTeamMemberCreateTeamMemberCreatePayload `json:"teamMemberCreate"`
}

// GetTeamMemberCreate returns createTeamMemberResponse.TeamMemberCreate, and is useful for accessing the field via an interface.
func (v *createTeamMemberResponse) GetTeamMemberCreate() createTeamMemberTeamMemberCreateTeamMemberCreatePayload {
	return v.TeamMemberCreate
}

// createTeamMemberTeamMemberCreateTeamMemberCreatePayload includes the requested fields of the GraphQL type TeamMemberCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of TeamMemberCreate.
type createTeamMemberTeamMemberCreateTeamMemberCreatePayload struct {
	TeamMemberEdge createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdge `json:"teamMemberEdge"`
}

// GetTeamMemberEdge returns createTeamMemberTeamMemberCreateTeamMemberCreatePayload.TeamMemberEdge, and is useful for accessing the field via an interface.
func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayload) GetTeamMemberEdge() createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdge {
	return v.TeamMemberEdge
}

// createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdge includes the requested fields of the GraphQL type TeamMemberEdge.
type createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdge struct {
	Node createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember `json:"node"`
}

// GetNode returns createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdge.Node, and is useful for accessing the field via an interface.
func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdge) GetNode() createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember {
	return v.Node
}

// createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember includes the requested fields of the GraphQL type TeamMember.
// The GraphQL type's documentation follows.
//
// An member of a team
type createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember struct {
	TeamMemberValues `json:"-"`
}

// GetId returns createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember.Id, and is useful for accessing the field via an interface.
func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember) GetId() string {
	return v.TeamMemberValues.Id
}

// GetUuid returns createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember.Uuid, and is useful for accessing the field via an interface.
func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember) GetUuid() string {
	return v.TeamMemberValues.Uuid
}

// GetTeam returns createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember.Team, and is useful for accessing the field via an interface.
func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember) GetTeam() TeamMemberValuesTeam {
	return v.TeamMemberValues.Team
}

// GetUser returns createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember.User, and is useful for accessing the field via an interface.
func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember) GetUser() TeamMemberValuesUser {
	return v.TeamMemberValues.User
}

// GetRole returns createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember.Role, and is useful for accessing the field via an interface.
func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember) GetRole() TeamMemberRole {
	return v.TeamMemberValues.Role
}

func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember
		graphql.NoUnmarshalJSON
	}
	firstPass.createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.TeamMemberValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalcreateTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Team TeamMemberValuesTeam `json:"team"`

	User TeamMemberValuesUser `json:"user"`

	Role TeamMemberRole `json:"role"`
}

func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember) __premarshalJSON() (*__premarshalcreateTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember, error) {
	var retval __premarshalcreateTeamMemberTeamMemberCreateTeamMemberCreatePayloadTeamMemberEdgeNodeTeamMember

	retval.Id = v.TeamMemberValues.Id
	retval.Uuid = v.TeamMemberValues.Uuid
	retval.Team = v.TeamMemberValues.Team
	retval.User = v.TeamMemberValues.User
	retval.Role = v.TeamMemberValues.Role
	return &retval, nil
}

// deleteClusterClusterDeleteClusterDeletePayload includes the requested fields of the GraphQL type ClusterDeletePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterDelete.
type deleteClusterClusterDeleteClusterDeletePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId"`
}

// GetClientMutationId returns deleteClusterClusterDeleteClusterDeletePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *deleteClusterClusterDeleteClusterDeletePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload includes the requested fields of the GraphQL type ClusterQueueDeletePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterQueueDelete.
type deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId"`
}

// GetClientMutationId returns deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// deleteClusterQueueResponse is returned by deleteClusterQueue on success.
type deleteClusterQueueResponse struct {
	// Delete a cluster queue.
	ClusterQueueDelete deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload `json:"clusterQueueDelete"`
}

// GetClusterQueueDelete returns deleteClusterQueueResponse.ClusterQueueDelete, and is useful for accessing the field via an interface.
func (v *deleteClusterQueueResponse) GetClusterQueueDelete() deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload {
	return v.ClusterQueueDelete
}

// deleteClusterResponse is returned by deleteCluster on success.
type deleteClusterResponse struct {
	// Delete a cluster.
	ClusterDelete deleteClusterClusterDeleteClusterDeletePayload `json:"clusterDelete"`
}

// GetClusterDelete returns deleteClusterResponse.ClusterDelete, and is useful for accessing the field via an interface.
func (v *deleteClusterResponse) GetClusterDelete() deleteClusterClusterDeleteClusterDeletePayload {
	return v.ClusterDelete
}

// deletePipelineSchedulePipelineScheduleDeletePipelineScheduleDeletePayload includes the requested fields of the GraphQL type PipelineScheduleDeletePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineScheduleDelete.
type deletePipelineSchedulePipelineScheduleDeletePipelineScheduleDeletePayload struct {
	DeletedPipelineScheduleID string `json:"deletedPipelineScheduleID"`
}

// GetDeletedPipelineScheduleID returns deletePipelineSchedulePipelineScheduleDeletePipelineScheduleDeletePayload.DeletedPipelineScheduleID, and is useful for accessing the field via an interface.
func (v *deletePipelineSchedulePipelineScheduleDeletePipelineScheduleDeletePayload) GetDeletedPipelineScheduleID() string {
	return v.DeletedPipelineScheduleID
}

// deletePipelineScheduleResponse is returned by deletePipelineSchedule on success.
type deletePipelineScheduleResponse struct {
	// Delete a scheduled build on pipeline.
	PipelineScheduleDelete deletePipelineSchedulePipelineScheduleDeletePipelineScheduleDeletePayload `json:"pipelineScheduleDelete"`
}

// GetPipelineScheduleDelete returns deletePipelineScheduleResponse.PipelineScheduleDelete, and is useful for accessing the field via an interface.
func (v *deletePipelineScheduleResponse) GetPipelineScheduleDelete() deletePipelineSchedulePipelineScheduleDeletePipelineScheduleDeletePayload {
	return v.PipelineScheduleDelete
}

// deletePipelinePipelineDeletePipelineDeletePayload includes the requested fields of the GraphQL type PipelineDeletePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineDelete.
type deletePipelinePipelineDeletePipelineDeletePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId"`
}

// GetClientMutationId returns deletePipelinePipelineDeletePipelineDeletePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *deletePipelinePipelineDeletePipelineDeletePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// deletePipelineResponse is returned by deletePipeline on success.
type deletePipelineResponse struct {
	// Delete a pipeline.
	PipelineDelete deletePipelinePipelineDeletePipelineDeletePayload `json:"pipelineDelete"`
}

// GetPipelineDelete returns deletePipelineResponse.PipelineDelete, and is useful for accessing the field via an interface.
func (v *deletePipelineResponse) GetPipelineDelete() deletePipelinePipelineDeletePipelineDeletePayload {
	return v.PipelineDelete
}

// deleteTeamMemberResponse is returned by deleteTeamMember on success.
type deleteTeamMemberResponse struct {
	// Remove a user from a team.
	TeamMemberDelete deleteTeamMemberTeamMemberDeleteTeamMemberDeletePayload `json:"teamMemberDelete"`
}

// GetTeamMemberDelete returns deleteTeamMemberResponse.TeamMemberDelete, and is useful for accessing the field via an interface.
func (v *deleteTeamMemberResponse) GetTeamMemberDelete() deleteTeamMemberTeamMemberDeleteTeamMemberDeletePayload {
	return v.TeamMemberDelete
}

// deleteTeamMemberTeamMemberDeleteTeamMemberDeletePayload includes the requested fields of the GraphQL type TeamMemberDeletePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of TeamMemberDelete.
type deleteTeamMemberTeamMemberDeleteTeamMemberDeletePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId"`
}

// GetClientMutationId returns deleteTeamMemberTeamMemberDeleteTeamMemberDeletePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *deleteTeamMemberTeamMemberDeleteTeamMemberDeletePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// getAgentTokenAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type getAgentTokenAgentToken struct {
	Id string `json:"id"`
	// A description about what this agent token is used for
	Description *string `json:"description"`
	// The public UUID for the agent
	Uuid string `json:"uuid"`
}

// GetId returns getAgentTokenAgentToken.Id, and is useful for accessing the field via an interface.
func (v *getAgentTokenAgentToken) GetId() string { return v.Id }

// GetDescription returns getAgentTokenAgentToken.Description, and is useful for accessing the field via an interface.
func (v *getAgentTokenAgentToken) GetDescription() *string { return v.Description }

// GetUuid returns getAgentTokenAgentToken.Uuid, and is useful for accessing the field via an interface.
func (v *getAgentTokenAgentToken) GetUuid() string { return v.Uuid }

// getAgentTokenResponse is returned by getAgentToken on success.
type getAgentTokenResponse struct {
	// Find an agent token by its slug
	AgentToken getAgentTokenAgentToken `json:"agentToken"`
}

// GetAgentToken returns getAgentTokenResponse.AgentToken, and is useful for accessing the field via an interface.
func (v *getAgentTokenResponse) GetAgentToken() getAgentTokenAgentToken { return v.AgentToken }

// getClusterAgentTokensOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getClusterAgentTokensOrganization struct {
	// Return cluster in the Organization by UUID
	Cluster getClusterAgentTokensOrganizationCluster `json:"cluster"`
}

// GetCluster returns getClusterAgentTokensOrganization.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganization) GetCluster() getClusterAgentTokensOrganizationCluster {
	return v.Cluster
}

// getClusterAgentTokensOrganizationCluster includes the requested fields of the GraphQL type Cluster.
type getClusterAgentTokensOrganizationCluster struct {
	// Returns agent tokens for the Cluster
	AgentTokens getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection `json:"agentTokens"`
}

// GetAgentTokens returns getClusterAgentTokensOrganizationCluster.AgentTokens, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationCluster) GetAgentTokens() getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection {
	return v.AgentTokens
}

// getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection includes the requested fields of the GraphQL type ClusterAgentTokenConnection.
type getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection struct {
	Edges []getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge `json:"edges"`
}

// GetEdges returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection.Edges, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection) GetEdges() []getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge {
	return v.Edges
}

// getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge includes the requested fields of the GraphQL type ClusterAgentTokenEdge.
type getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge struct {
	Node getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken `json:"node"`
}

// GetNode returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge.Node, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge) GetNode() getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken {
	return v.Node
}

// getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken struct {
	ClusterAgentTokenValues `json:"-"`
}

// GetCluster returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) GetCluster() ClusterAgentTokenValuesCluster {
	return v.ClusterAgentTokenValues.Cluster
}

// GetDescription returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken.Description, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) GetDescription() string {
	return v.ClusterAgentTokenValues.Description
}

// GetId returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken.Id, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) GetId() string {
	return v.ClusterAgentTokenValues.Id
}

// GetUuid returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken.Uuid, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) GetUuid() string {
	return v.ClusterAgentTokenValues.Uuid
}

func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken
		graphql.NoUnmarshalJSON
	}
	firstPass.getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterAgentTokenValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken struct {
	Cluster ClusterAgentTokenValuesCluster `json:"cluster"`

	Description string `json:"description"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`
}

func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) __premarshalJSON() (*__premarshalgetClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken, error) {
	var retval __premarshalgetClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken

	retval.Cluster = v.ClusterAgentTokenValues.Cluster
	retval.Description = v.ClusterAgentTokenValues.Description
	retval.Id = v.ClusterAgentTokenValues.Id
	retval.Uuid = v.ClusterAgentTokenValues.Uuid
	return &retval, nil
}

// getClusterAgentTokensResponse is returned by getClusterAgentTokens on success.
type getClusterAgentTokensResponse struct {
	// Find an organization
	Organization getClusterAgentTokensOrganization `json:"organization"`
}

// GetOrganization returns getClusterAgentTokensResponse.Organization, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensResponse) GetOrganization() getClusterAgentTokensOrganization {
	return v.Organization
}

// getClusterByNameOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getClusterByNameOrganization struct {
	// Returns clusters for an Organization
	Clusters getClusterByNameOrganizationClustersClusterConnection `json:"clusters"`
}

// GetClusters returns getClusterByNameOrganization.Clusters, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganization) GetClusters() getClusterByNameOrganizationClustersClusterConnection {
	return v.Clusters
}

// getClusterByNameOrganizationClustersClusterConnection includes the requested fields of the GraphQL type ClusterConnection.
type getClusterByNameOrganizationClustersClusterConnection struct {
	PageInfo getClusterByNameOrganizationClustersClusterConnectionPageInfo           `json:"pageInfo"`
	Edges    []getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge `json:"edges"`
}

// GetPageInfo returns getClusterByNameOrganizationClustersClusterConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnection) GetPageInfo() getClusterByNameOrganizationClustersClusterConnectionPageInfo {
	return v.PageInfo
}

// GetEdges returns getClusterByNameOrganizationClustersClusterConnection.Edges, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnection) GetEdges() []getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge {
	return v.Edges
}

// getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge includes the requested fields of the GraphQL type ClusterEdge.
type getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge struct {
	Node getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster `json:"node"`
}

// GetNode returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge.Node, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge) GetNode() getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster {
	return v.Node
}

// getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster includes the requested fields of the GraphQL type Cluster.
type getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster struct {
	ClusterFields `json:"-"`
}

// GetId returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Id, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetId() string {
	return v.ClusterFields.Id
}

// GetUuid returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Uuid, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetUuid() string {
	return v.ClusterFields.Uuid
}

// GetName returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Name, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetName() string {
	return v.ClusterFields.Name
}

// GetDescription returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Description, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetDescription() *string {
	return v.ClusterFields.Description
}

// GetEmoji returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Emoji, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetEmoji() *string {
	return v.ClusterFields.Emoji
}

// GetColor returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Color, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetColor() *string {
	return v.ClusterFields.Color
}

func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster
		graphql.NoUnmarshalJSON
	}
	firstPass.getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description *string `json:"description"`

	Emoji *string `json:"emoji"`

	Color *string `json:"color"`
}

func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) __premarshalJSON() (*__premarshalgetClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster, error) {
	var retval __premarshalgetClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster

	retval.Id = v.ClusterFields.Id
	retval.Uuid = v.ClusterFields.Uuid
	retval.Name = v.ClusterFields.Name
	retval.Description = v.ClusterFields.Description
	retval.Emoji = v.ClusterFields.Emoji
	retval.Color = v.ClusterFields.Color
	return &retval, nil
}

// getClusterByNameOrganizationClustersClusterConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
// The GraphQL type's documentation follows.
//
// Information about pagination in a connection.
type getClusterByNameOrganizationClustersClusterConnectionPageInfo struct {
	// When paginating forwards, the cursor to continue.
	EndCursor string `json:"endCursor"`
	// When paginating forwards, are there more items?
	HasNextPage bool `json:"hasNextPage"`
}

// GetEndCursor returns getClusterByNameOrganizationClustersClusterConnectionPageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionPageInfo) GetEndCursor() string {
	return v.EndCursor
}

// GetHasNextPage returns getClusterByNameOrganizationClustersClusterConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// getClusterByNameResponse is returned by getClusterByName on success.
type getClusterByNameResponse struct {
	// Find an organization
	Organization getClusterByNameOrganization `json:"organization"`
}

// GetOrganization returns getClusterByNameResponse.Organization, and is useful for accessing the field via an interface.
func (v *getClusterByNameResponse) GetOrganization() getClusterByNameOrganization {
	return v.Organization
}

// getClusterOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getClusterOrganization struct {
	// Return cluster in the Organization by UUID
	Cluster getClusterOrganizationCluster `json:"cluster"`
}

// GetCluster returns getClusterOrganization.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterOrganization) GetCluster() getClusterOrganizationCluster { return v.Cluster }

// getClusterOrganizationCluster includes the requested fields of the GraphQL type Cluster.
type getClusterOrganizationCluster struct {
	ClusterFields `json:"-"`
}

// GetId returns getClusterOrganizationCluster.Id, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetId() string { return v.ClusterFields.Id }

// GetUuid returns getClusterOrganizationCluster.Uuid, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetUuid() string { return v.ClusterFields.Uuid }

// GetName returns getClusterOrganizationCluster.Name, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetName() string { return v.ClusterFields.Name }

// GetDescription returns getClusterOrganizationCluster.Description, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetDescription() *string { return v.ClusterFields.Description }

// GetEmoji returns getClusterOrganizationCluster.Emoji, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetEmoji() *string { return v.ClusterFields.Emoji }

// GetColor returns getClusterOrganizationCluster.Color, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetColor() *string { return v.ClusterFields.Color }

func (v *getClusterOrganizationCluster) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getClusterOrganizationCluster
		graphql.NoUnmarshalJSON
	}
	firstPass.getClusterOrganizationCluster = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetClusterOrganizationCluster struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description *string `json:"description"`

	Emoji *string `json:"emoji"`

	Color *string `json:"color"`
}

func (v *getClusterOrganizationCluster) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getClusterOrganizationCluster) __premarshalJSON() (*__premarshalgetClusterOrganizationCluster, error) {
	var retval __premarshalgetClusterOrganizationCluster

	retval.Id = v.ClusterFields.Id
	retval.Uuid = v.ClusterFields.Uuid
	retval.Name = v.ClusterFields.Name
	retval.Description = v.ClusterFields.Description
	retval.Emoji = v.ClusterFields.Emoji
	retval.Color = v.ClusterFields.Color
	return &retval, nil
}

// getClusterQueuesOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getClusterQueuesOrganization struct {
	// Return cluster in the Organization by UUID
	Cluster getClusterQueuesOrganizationCluster `json:"cluster"`
}

// GetCluster returns getClusterQueuesOrganization.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganization) GetCluster() getClusterQueuesOrganizationCluster {
	return v.Cluster
}

// getClusterQueuesOrganizationCluster includes the requested fields of the GraphQL type Cluster.
type getClusterQueuesOrganizationCluster struct {
	Queues getClusterQueuesOrganizationClusterQueuesClusterQueueConnection `json:"queues"`
}

// GetQueues returns getClusterQueuesOrganizationCluster.Queues, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationCluster) GetQueues() getClusterQueuesOrganizationClusterQueuesClusterQueueConnection {
	return v.Queues
}

// getClusterQueuesOrganizationClusterQueuesClusterQueueConnection includes the requested fields of the GraphQL type ClusterQueueConnection.
type getClusterQueuesOrganizationClusterQueuesClusterQueueConnection struct {
	Edges []getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge `json:"edges"`
}

// GetEdges returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnection.Edges, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnection) GetEdges() []getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge {
	return v.Edges
}

// getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge includes the requested fields of the GraphQL type ClusterQueueEdge.
type getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge struct {
	Node getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue `json:"node"`
}

// GetNode returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge.Node, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge) GetNode() getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue {
	return v.Node
}

// getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue struct {
	ClusterQueueValues `json:"-"`
}

// GetId returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Id, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetId() string {
	return v.ClusterQueueValues.Id
}

// GetUuid returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Uuid, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetUuid() string {
	return v.ClusterQueueValues.Uuid
}

// GetKey returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Key, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetKey() string {
	return v.ClusterQueueValues.Key
}

// GetDescription returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Description, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetDescription() *string {
	return v.ClusterQueueValues.Description
}

// GetCluster returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetCluster() ClusterQueueValuesCluster {
	return v.ClusterQueueValues.Cluster
}

func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue
		graphql.NoUnmarshalJSON
	}
	firstPass.getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterQueueValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Key string `json:"key"`

	Description *string `json:"description"`

	Cluster ClusterQueueValuesCluster `json:"cluster"`
}

func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) __premarshalJSON() (*__premarshalgetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue, error) {
	var retval __premarshalgetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue

	retval.Id = v.ClusterQueueValues.Id
	retval.Uuid = v.ClusterQueueValues.Uuid
	retval.Key = v.ClusterQueueValues.Key
	retval.Description = v.ClusterQueueValues.Description
	retval.Cluster = v.ClusterQueueValues.Cluster
	return &retval, nil
}

// getClusterQueuesResponse is returned by getClusterQueues on success.
type getClusterQueuesResponse struct {
	// Find an organization
	Organization getClusterQueuesOrganization `json:"organization"`
}

// GetOrganization returns getClusterQueuesResponse.Organization, and is useful for accessing the field via an interface.
func (v *getClusterQueuesResponse) GetOrganization() getClusterQueuesOrganization {
	return v.Organization
}

// getClusterResponse is returned by getCluster on success.
type getClusterResponse struct {
	// Find an organization
	Organization getClusterOrganization `json:"organization"`
}

// GetOrganization returns getClusterResponse.Organization, and is useful for accessing the field via an interface.
func (v *getClusterResponse) GetOrganization() getClusterOrganization { return v.Organization }

// getNodeNode includes the requested fields of the GraphQL interface Node.
//
// getNodeNode is implemented by the following types:
// getNodeNodeAPIAccessToken
// getNodeNodeAPIAccessTokenCode
// getNodeNodeAPIApplication
// getNodeNodeAgent
// getNodeNodeAgentToken
// getNodeNodeAnnotation
// getNodeNodeArtifact
// getNodeNodeAuditEvent
// getNodeNodeAuthorizationBitbucket
// getNodeNodeAuthorizationGitHub
// getNodeNodeAuthorizationGitHubApp
// getNodeNodeAuthorizationGitHubEnterprise
// getNodeNodeAuthorizationGoogle
// getNodeNodeAuthorizationSAML
// getNodeNodeBuild
// getNodeNodeChangelog
// getNodeNodeCluster
// getNodeNodeClusterQueue
// getNodeNodeClusterToken
// getNodeNodeEmail
// getNodeNodeJobEventAssigned
// getNodeNodeJobEventBuildStepUploadCreated
// getNodeNodeJobEventCanceled
// getNodeNodeJobEventFinished
// getNodeNodeJobEventGeneric
// getNodeNodeJobEventRetried
// getNodeNodeJobEventTimedOut
// getNodeNodeJobTypeBlock
// getNodeNodeJobTypeCommand
// getNodeNodeJobTypeTrigger
// getNodeNodeJobTypeWait
// getNodeNodeNotificationServiceSlack
// getNodeNodeOrganization
// getNodeNodeOrganizationInvitation
// getNodeNodeOrganizationMember
// getNodeNodePipeline
// getNodeNodePipelineMetric
// getNodeNodePipelineSchedule
// getNodeNodePipelineTemplate
// getNodeNodeSSOProviderGitHubApp
// getNodeNodeSSOProviderGoogleGSuite
// getNodeNodeSSOProviderSAML
// getNodeNodeSuite
// getNodeNodeTeam
// getNodeNodeTeamMember
// getNodeNodeTeamPipeline
// getNodeNodeTeamSuite
// getNodeNodeUser
// getNodeNodeViewer
// The GraphQL type's documentation follows.
//
// An object with an ID.
type getNodeNode interface {
	implementsGraphQLInterfacegetNodeNode()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *getNodeNodeAPIAccessToken) implementsGraphQLInterfacegetNodeNode()                 {}
func (v *getNodeNodeAPIAccessTokenCode) implementsGraphQLInterfacegetNodeNode()             {}
func (v *getNodeNodeAPIApplication) implementsGraphQLInterfacegetNodeNode()                 {}
func (v *getNodeNodeAgent) implementsGraphQLInterfacegetNodeNode()                          {}
func (v *getNodeNodeAgentToken) implementsGraphQLInterfacegetNodeNode()                     {}
func (v *getNodeNodeAnnotation) implementsGraphQLInterfacegetNodeNode()                     {}
func (v *getNodeNodeArtifact) implementsGraphQLInterfacegetNodeNode()                       {}
func (v *getNodeNodeAuditEvent) implementsGraphQLInterfacegetNodeNode()                     {}
func (v *getNodeNodeAuthorizationBitbucket) implementsGraphQLInterfacegetNodeNode()         {}
func (v *getNodeNodeAuthorizationGitHub) implementsGraphQLInterfacegetNodeNode()            {}
func (v *getNodeNodeAuthorizationGitHubApp) implementsGraphQLInterfacegetNodeNode()         {}
func (v *getNodeNodeAuthorizationGitHubEnterprise) implementsGraphQLInterfacegetNodeNode()  {}
func (v *getNodeNodeAuthorizationGoogle) implementsGraphQLInterfacegetNodeNode()            {}
func (v *getNodeNodeAuthorizationSAML) implementsGraphQLInterfacegetNodeNode()              {}
func (v *getNodeNodeBuild) implementsGraphQLInterfacegetNodeNode()                          {}
func (v *getNodeNodeChangelog) implementsGraphQLInterfacegetNodeNode()                      {}
func (v *getNodeNodeCluster) implementsGraphQLInterfacegetNodeNode()                        {}
func (v *getNodeNodeClusterQueue) implementsGraphQLInterfacegetNodeNode()                   {}
func (v *getNodeNodeClusterToken) implementsGraphQLInterfacegetNodeNode()                   {}
func (v *getNodeNodeEmail) implementsGraphQLInterfacegetNodeNode()                          {}
func (v *getNodeNodeJobEventAssigned) implementsGraphQLInterfacegetNodeNode()               {}
func (v *getNodeNodeJobEventBuildStepUploadCreated) implementsGraphQLInterfacegetNodeNode() {}
func (v *getNodeNodeJobEventCanceled) implementsGraphQLInterfacegetNodeNode()               {}
func (v *getNodeNodeJobEventFinished) implementsGraphQLInterfacegetNodeNode()               {}
func (v *getNodeNodeJobEventGeneric) implementsGraphQLInterfacegetNodeNode()                {}
func (v *getNodeNodeJobEventRetried) implementsGraphQLInterfacegetNodeNode()                {}
func (v *getNodeNodeJobEventTimedOut) implementsGraphQLInterfacegetNodeNode()               {}
func (v *getNodeNodeJobTypeBlock) implementsGraphQLInterfacegetNodeNode()                   {}
func (v *getNodeNodeJobTypeCommand) implementsGraphQLInterfacegetNodeNode()                 {}
func (v *getNodeNodeJobTypeTrigger) implementsGraphQLInterfacegetNodeNode()                 {}
func (v *getNodeNodeJobTypeWait) implementsGraphQLInterfacegetNodeNode()                    {}
func (v *getNodeNodeNotificationServiceSlack) implementsGraphQLInterfacegetNodeNode()       {}
func (v *getNodeNodeOrganization) implementsGraphQLInterfacegetNodeNode()                   {}
func (v *getNodeNodeOrganizationInvitation) implementsGraphQLInterfacegetNodeNode()         {}
func (v *getNodeNodeOrganizationMember) implementsGraphQLInterfacegetNodeNode()             {}
func (v *getNodeNodePipeline) implementsGraphQLInterfacegetNodeNode()                       {}
func (v *getNodeNodePipelineMetric) implementsGraphQLInterfacegetNodeNode()                 {}
func (v *getNodeNodePipelineSchedule) implementsGraphQLInterfacegetNodeNode()               {}
func (v *getNodeNodePipelineTemplate) implementsGraphQLInterfacegetNodeNode()               {}
func (v *getNodeNodeSSOProviderGitHubApp) implementsGraphQLInterfacegetNodeNode()           {}
func (v *getNodeNodeSSOProviderGoogleGSuite) implementsGraphQLInterfacegetNodeNode()        {}
func (v *getNodeNodeSSOProviderSAML) implementsGraphQLInterfacegetNodeNode()                {}
func (v *getNodeNodeSuite) implementsGraphQLInterfacegetNodeNode()                          {}
func (v *getNodeNodeTeam) implementsGraphQLInterfacegetNodeNode()                           {}
func (v *getNodeNodeTeamMember) implementsGraphQLInterfacegetNodeNode()                     {}
func (v *getNodeNodeTeamPipeline) implementsGraphQLInterfacegetNodeNode()                   {}
func (v *getNodeNodeTeamSuite) implementsGraphQLInterfacegetNodeNode()                      {}
func (v *getNodeNodeUser) implementsGraphQLInterfacegetNodeNode()                           {}
func (v *getNodeNodeViewer) implementsGraphQLInterfacegetNodeNode()                         {}

func __unmarshalgetNodeNode(b []byte, v *getNodeNode) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "APIAccessToken":
		*v = new(getNodeNodeAPIAccessToken)
		return json.Unmarshal(b, *v)
	case "APIAccessTokenCode":
		*v = new(getNodeNodeAPIAccessTokenCode)
		return json.Unmarshal(b, *v)
	case "APIApplication":
		*v = new(getNodeNodeAPIApplication)
		return json.Unmarshal(b, *v)
	case "Agent":
		*v = new(getNodeNodeAgent)
		return json.Unmarshal(b, *v)
	case "AgentToken":
		*v = new(getNodeNodeAgentToken)
		return json.Unmarshal(b, *v)
	case "Annotation":
		*v = new(getNodeNodeAnnotation)
		return json.Unmarshal(b, *v)
	case "Artifact":
		*v = new(getNodeNodeArtifact)
		return json.Unmarshal(b, *v)
	case "AuditEvent":
		*v = new(getNodeNodeAuditEvent)
		return json.Unmarshal(b, *v)
	case "AuthorizationBitbucket":
		*v = new(getNodeNodeAuthorizationBitbucket)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHub":
		*v = new(getNodeNodeAuthorizationGitHub)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHubApp":
		*v = new(getNodeNodeAuthorizationGitHubApp)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHubEnterprise":
		*v = new(getNodeNodeAuthorizationGitHubEnterprise)
		return json.Unmarshal(b, *v)
	case "AuthorizationGoogle":
		*v = new(getNodeNodeAuthorizationGoogle)
		return json.Unmarshal(b, *v)
	case "AuthorizationSAML":
		*v = new(getNodeNodeAuthorizationSAML)
		return json.Unmarshal(b, *v)
	case "Build":
		*v = new(getNodeNodeBuild)
		return json.Unmarshal(b, *v)
	case "Changelog":
		*v = new(getNodeNodeChangelog)
		return json.Unmarshal(b, *v)
	case "Cluster":
		*v = new(getNodeNodeCluster)
		return json.Unmarshal(b, *v)
	case "ClusterQueue":
		*v = new(getNodeNodeClusterQueue)
		return json.Unmarshal(b, *v)
	case "ClusterToken":
		*v = new(getNodeNodeClusterToken)
		return json.Unmarshal(b, *v)
	case "Email":
		*v = new(getNodeNodeEmail)
		return json.Unmarshal(b, *v)
	case "JobEventAssigned":
		*v = new(getNodeNodeJobEventAssigned)
		return json.Unmarshal(b, *v)
	case "JobEventBuildStepUploadCreated":
		*v = new(getNodeNodeJobEventBuildStepUploadCreated)
		return json.Unmarshal(b, *v)
	case "JobEventCanceled":
		*v = new(getNodeNodeJobEventCanceled)
		return json.Unmarshal(b, *v)
	case "JobEventFinished":
		*v = new(getNodeNodeJobEventFinished)
		return json.Unmarshal(b, *v)
	case "JobEventGeneric":
		*v = new(getNodeNodeJobEventGeneric)
		return json.Unmarshal(b, *v)
	case "JobEventRetried":
		*v = new(getNodeNodeJobEventRetried)
		return json.Unmarshal(b, *v)
	case "JobEventTimedOut":
		*v = new(getNodeNodeJobEventTimedOut)
		return json.Unmarshal(b, *v)
	case "JobTypeBlock":
		*v = new(getNodeNodeJobTypeBlock)
		return json.Unmarshal(b, *v)
	case "JobTypeCommand":
		*v = new(getNodeNodeJobTypeCommand)
		return json.Unmarshal(b, *v)
	case "JobTypeTrigger":
		*v = new(getNodeNodeJobTypeTrigger)
		return json.Unmarshal(b, *v)
	case "JobTypeWait":
		*v = new(getNodeNodeJobTypeWait)
		return json.Unmarshal(b, *v)
	case "NotificationServiceSlack":
		*v = new(getNodeNodeNotificationServiceSlack)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(getNodeNodeOrganization)
		return json.Unmarshal(b, *v)
	case "OrganizationInvitation":
		*v = new(getNodeNodeOrganizationInvitation)
		return json.Unmarshal(b, *v)
	case "OrganizationMember":
		*v = new(getNodeNodeOrganizationMember)
		return json.Unmarshal(b, *v)
	case "Pipeline":
		*v = new(getNodeNodePipeline)
		return json.Unmarshal(b, *v)
	case "PipelineMetric":
		*v = new(getNodeNodePipelineMetric)
		return json.Unmarshal(b, *v)
	case "PipelineSchedule":
		*v = new(getNodeNodePipelineSchedule)
		return json.Unmarshal(b, *v)
	case "PipelineTemplate":
		*v = new(getNodeNodePipelineTemplate)
		return json.Unmarshal(b, *v)
	case "SSOProviderGitHubApp":
		*v = new(getNodeNodeSSOProviderGitHubApp)
		return json.Unmarshal(b, *v)
	case "SSOProviderGoogleGSuite":
		*v = new(getNodeNodeSSOProviderGoogleGSuite)
		return json.Unmarshal(b, *v)
	case "SSOProviderSAML":
		*v = new(getNodeNodeSSOProviderSAML)
		return json.Unmarshal(b, *v)
	case "Suite":
		*v = new(getNodeNodeSuite)
		return json.Unmarshal(b, *v)
	case "Team":
		*v = new(getNodeNodeTeam)
		return json.Unmarshal(b, *v)
	case "TeamMember":
		*v = new(getNodeNodeTeamMember)
		return json.Unmarshal(b, *v)
	case "TeamPipeline":
		*v = new(getNodeNodeTeamPipeline)
		return json.Unmarshal(b, *v)
	case "TeamSuite":
		*v = new(getNodeNodeTeamSuite)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(getNodeNodeUser)
		return json.Unmarshal(b, *v)
	case "Viewer":
		*v = new(getNodeNodeViewer)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Node.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for getNodeNode: "%v"`, tn.TypeName)
	}
}

func __marshalgetNodeNode(v *getNodeNode) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getNodeNodeAPIAccessToken:
		typename = "APIAccessToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAPIAccessToken
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAPIAccessTokenCode:
		typename = "APIAccessTokenCode"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAPIAccessTokenCode
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAPIApplication:
		typename = "APIApplication"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAPIApplication
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAgent:
		typename = "Agent"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAgent
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAgentToken:
		typename = "AgentToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAgentToken
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAnnotation:
		typename = "Annotation"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAnnotation
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeArtifact:
		typename = "Artifact"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeArtifact
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAuditEvent:
		typename = "AuditEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAuditEvent
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAuthorizationBitbucket:
		typename = "AuthorizationBitbucket"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAuthorizationBitbucket
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAuthorizationGitHub:
		typename = "AuthorizationGitHub"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAuthorizationGitHub
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAuthorizationGitHubApp:
		typename = "AuthorizationGitHubApp"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAuthorizationGitHubApp
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAuthorizationGitHubEnterprise:
		typename = "AuthorizationGitHubEnterprise"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAuthorizationGitHubEnterprise
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAuthorizationGoogle:
		typename = "AuthorizationGoogle"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAuthorizationGoogle
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeAuthorizationSAML:
		typename = "AuthorizationSAML"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeAuthorizationSAML
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeBuild:
		typename = "Build"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeBuild
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeChangelog:
		typename = "Changelog"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeChangelog
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeCluster:
		typename = "Cluster"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeCluster
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeClusterQueue:
		typename = "ClusterQueue"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeClusterQueue
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeClusterToken:
		typename = "ClusterToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeClusterToken
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeEmail:
		typename = "Email"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeEmail
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobEventAssigned:
		typename = "JobEventAssigned"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobEventAssigned
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobEventBuildStepUploadCreated:
		typename = "JobEventBuildStepUploadCreated"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobEventBuildStepUploadCreated
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobEventCanceled:
		typename = "JobEventCanceled"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobEventCanceled
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobEventFinished:
		typename = "JobEventFinished"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobEventFinished
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobEventGeneric:
		typename = "JobEventGeneric"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobEventGeneric
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobEventRetried:
		typename = "JobEventRetried"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobEventRetried
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobEventTimedOut:
		typename = "JobEventTimedOut"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobEventTimedOut
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobTypeBlock:
		typename = "JobTypeBlock"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobTypeBlock
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobTypeCommand:
		typename = "JobTypeCommand"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobTypeCommand
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobTypeTrigger:
		typename = "JobTypeTrigger"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobTypeTrigger
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeJobTypeWait:
		typename = "JobTypeWait"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeJobTypeWait
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeNotificationServiceSlack:
		typename = "NotificationServiceSlack"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeNotificationServiceSlack
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeOrganization
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeOrganizationInvitation:
		typename = "OrganizationInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeOrganizationInvitation
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeOrganizationMember:
		typename = "OrganizationMember"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeOrganizationMember
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodePipeline:
		typename = "Pipeline"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodePipeline
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodePipelineMetric:
		typename = "PipelineMetric"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodePipelineMetric
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodePipelineSchedule:
		typename = "PipelineSchedule"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodePipelineSchedule
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodePipelineTemplate:
		typename = "PipelineTemplate"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodePipelineTemplate
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeSSOProviderGitHubApp:
		typename = "SSOProviderGitHubApp"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeSSOProviderGitHubApp
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeSSOProviderGoogleGSuite:
		typename = "SSOProviderGoogleGSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeSSOProviderGoogleGSuite
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeSSOProviderSAML:
		typename = "SSOProviderSAML"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeSSOProviderSAML
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeSuite:
		typename = "Suite"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeSuite
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeTeam:
		typename = "Team"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeTeam
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeTeamMember:
		typename = "TeamMember"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalgetNodeNodeTeamMember
		}{typename, premarshaled}
		return json.Marshal(result)
	case *getNodeNodeTeamPipeline:
		typename = "TeamPipeline"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeTeamPipeline
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeTeamSuite:
		typename = "TeamSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeTeamSuite
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeUser
		}{typename, v}
		return json.Marshal(result)
	case *getNodeNodeViewer:
		typename = "Viewer"

		result := struct {
			TypeName string `json:"__typename"`
			*getNodeNodeViewer
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for getNodeNode: "%T"`, v)
	}
}

// getNodeNodeAPIAccessToken includes the requested fields of the GraphQL type APIAccessToken.
// The GraphQL type's documentation follows.
//
// API access tokens for authentication with the Buildkite API
type getNodeNodeAPIAccessToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAPIAccessToken.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAPIAccessToken) GetTypename() string { return v.Typename }

// getNodeNodeAPIAccessTokenCode includes the requested fields of the GraphQL type APIAccessTokenCode.
// The GraphQL type's documentation follows.
//
// A code that is used by an API Application to request an API Access Token
type getNodeNodeAPIAccessTokenCode struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAPIAccessTokenCode.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAPIAccessTokenCode) GetTypename() string { return v.Typename }

// getNodeNodeAPIApplication includes the requested fields of the GraphQL type APIApplication.
// The GraphQL type's documentation follows.
//
// An API Application
type getNodeNodeAPIApplication struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAPIApplication.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAPIApplication) GetTypename() string { return v.Typename }

// getNodeNodeAgent includes the requested fields of the GraphQL type Agent.
// The GraphQL type's documentation follows.
//
// An agent
type getNodeNodeAgent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAgent.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAgent) GetTypename() string { return v.Typename }

// getNodeNodeAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type getNodeNodeAgentToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAgentToken.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAgentToken) GetTypename() string { return v.Typename }

// getNodeNodeAnnotation includes the requested fields of the GraphQL type Annotation.
// The GraphQL type's documentation follows.
//
// An annotation allows you to add arbitrary content to the top of a build page in the Buildkite UI
type getNodeNodeAnnotation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAnnotation.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAnnotation) GetTypename() string { return v.Typename }

// getNodeNodeArtifact includes the requested fields of the GraphQL type Artifact.
// The GraphQL type's documentation follows.
//
// A file uploaded from the agent whilst running a job
type getNodeNodeArtifact struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeArtifact.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeArtifact) GetTypename() string { return v.Typename }

// getNodeNodeAuditEvent includes the requested fields of the GraphQL type AuditEvent.
// The GraphQL type's documentation follows.
//
// Audit record of an event which occurred in the system
type getNodeNodeAuditEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAuditEvent.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAuditEvent) GetTypename() string { return v.Typename }

// getNodeNodeAuthorizationBitbucket includes the requested fields of the GraphQL type AuthorizationBitbucket.
// The GraphQL type's documentation follows.
//
// A Bitbucket account authorized with a Buildkite account
type getNodeNodeAuthorizationBitbucket struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAuthorizationBitbucket.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAuthorizationBitbucket) GetTypename() string { return v.Typename }

// getNodeNodeAuthorizationGitHub includes the requested fields of the GraphQL type AuthorizationGitHub.
// The GraphQL type's documentation follows.
//
// A GitHub account authorized with a Buildkite account
type getNodeNodeAuthorizationGitHub struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAuthorizationGitHub.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAuthorizationGitHub) GetTypename() string { return v.Typename }

// getNodeNodeAuthorizationGitHubApp includes the requested fields of the GraphQL type AuthorizationGitHubApp.
// The GraphQL type's documentation follows.
//
// A GitHub app authorized with a Buildkite account
type getNodeNodeAuthorizationGitHubApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAuthorizationGitHubApp.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAuthorizationGitHubApp) GetTypename() string { return v.Typename }

// getNodeNodeAuthorizationGitHubEnterprise includes the requested fields of the GraphQL type AuthorizationGitHubEnterprise.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise account authorized with a Buildkite account
type getNodeNodeAuthorizationGitHubEnterprise struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAuthorizationGitHubEnterprise.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAuthorizationGitHubEnterprise) GetTypename() string { return v.Typename }

// getNodeNodeAuthorizationGoogle includes the requested fields of the GraphQL type AuthorizationGoogle.
// The GraphQL type's documentation follows.
//
// A Google account authorized with a Buildkite account
type getNodeNodeAuthorizationGoogle struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAuthorizationGoogle.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAuthorizationGoogle) GetTypename() string { return v.Typename }

// getNodeNodeAuthorizationSAML includes the requested fields of the GraphQL type AuthorizationSAML.
// The GraphQL type's documentation follows.
//
// A SAML account authorized with a Buildkite account
type getNodeNodeAuthorizationSAML struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeAuthorizationSAML.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeAuthorizationSAML) GetTypename() string { return v.Typename }

// getNodeNodeBuild includes the requested fields of the GraphQL type Build.
// The GraphQL type's documentation follows.
//
// A build from a pipeline
type getNodeNodeBuild struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeBuild.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeBuild) GetTypename() string { return v.Typename }

// getNodeNodeChangelog includes the requested fields of the GraphQL type Changelog.
// The GraphQL type's documentation follows.
//
// A changelog
type getNodeNodeChangelog struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeChangelog.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeChangelog) GetTypename() string { return v.Typename }

// getNodeNodeCluster includes the requested fields of the GraphQL type Cluster.
type getNodeNodeCluster struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeCluster.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeCluster) GetTypename() string { return v.Typename }

// getNodeNodeClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type getNodeNodeClusterQueue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeClusterQueue.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeClusterQueue) GetTypename() string { return v.Typename }

// getNodeNodeClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type getNodeNodeClusterToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeClusterToken.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeClusterToken) GetTypename() string { return v.Typename }

// getNodeNodeEmail includes the requested fields of the GraphQL type Email.
// The GraphQL type's documentation follows.
//
// An email address
type getNodeNodeEmail struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeEmail.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeEmail) GetTypename() string { return v.Typename }

// getNodeNodeJobEventAssigned includes the requested fields of the GraphQL type JobEventAssigned.
// The GraphQL type's documentation follows.
//
// An event created when the dispatcher assigns the job to an agent
type getNodeNodeJobEventAssigned struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobEventAssigned.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobEventAssigned) GetTypename() string { return v.Typename }

// getNodeNodeJobEventBuildStepUploadCreated includes the requested fields of the GraphQL type JobEventBuildStepUploadCreated.
// The GraphQL type's documentation follows.
//
// An event created when the job creates new build steps via pipeline upload
type getNodeNodeJobEventBuildStepUploadCreated struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobEventBuildStepUploadCreated.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobEventBuildStepUploadCreated) GetTypename() string { return v.Typename }

// getNodeNodeJobEventCanceled includes the requested fields of the GraphQL type JobEventCanceled.
// The GraphQL type's documentation follows.
//
// An event created when the job is canceled
type getNodeNodeJobEventCanceled struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobEventCanceled.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobEventCanceled) GetTypename() string { return v.Typename }

// getNodeNodeJobEventFinished includes the requested fields of the GraphQL type JobEventFinished.
// The GraphQL type's documentation follows.
//
// An event created when the job is finished
type getNodeNodeJobEventFinished struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobEventFinished.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobEventFinished) GetTypename() string { return v.Typename }

// getNodeNodeJobEventGeneric includes the requested fields of the GraphQL type JobEventGeneric.
// The GraphQL type's documentation follows.
//
// A generic event type that doesn't have any additional meta-information associated with the event
type getNodeNodeJobEventGeneric struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobEventGeneric.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobEventGeneric) GetTypename() string { return v.Typename }

// getNodeNodeJobEventRetried includes the requested fields of the GraphQL type JobEventRetried.
// The GraphQL type's documentation follows.
//
// An event created when the job is retried
type getNodeNodeJobEventRetried struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobEventRetried.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobEventRetried) GetTypename() string { return v.Typename }

// getNodeNodeJobEventTimedOut includes the requested fields of the GraphQL type JobEventTimedOut.
// The GraphQL type's documentation follows.
//
// An event created when the job is timed out
type getNodeNodeJobEventTimedOut struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobEventTimedOut.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobEventTimedOut) GetTypename() string { return v.Typename }

// getNodeNodeJobTypeBlock includes the requested fields of the GraphQL type JobTypeBlock.
// The GraphQL type's documentation follows.
//
// A type of job that requires a user to unblock it before proceeding in a build pipeline
type getNodeNodeJobTypeBlock struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobTypeBlock.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobTypeBlock) GetTypename() string { return v.Typename }

// getNodeNodeJobTypeCommand includes the requested fields of the GraphQL type JobTypeCommand.
// The GraphQL type's documentation follows.
//
// A type of job that runs a command on an agent
type getNodeNodeJobTypeCommand struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobTypeCommand.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobTypeCommand) GetTypename() string { return v.Typename }

// getNodeNodeJobTypeTrigger includes the requested fields of the GraphQL type JobTypeTrigger.
// The GraphQL type's documentation follows.
//
// A type of job that triggers another build on a pipeline
type getNodeNodeJobTypeTrigger struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobTypeTrigger.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobTypeTrigger) GetTypename() string { return v.Typename }

// getNodeNodeJobTypeWait includes the requested fields of the GraphQL type JobTypeWait.
// The GraphQL type's documentation follows.
//
// A type of job that waits for all previous jobs to pass before proceeding the build pipeline
type getNodeNodeJobTypeWait struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeJobTypeWait.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeJobTypeWait) GetTypename() string { return v.Typename }

// getNodeNodeNotificationServiceSlack includes the requested fields of the GraphQL type NotificationServiceSlack.
// The GraphQL type's documentation follows.
//
// Deliver notifications to Slack
type getNodeNodeNotificationServiceSlack struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeNotificationServiceSlack.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeNotificationServiceSlack) GetTypename() string { return v.Typename }

// getNodeNodeOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getNodeNodeOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeOrganization.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeOrganization) GetTypename() string { return v.Typename }

// getNodeNodeOrganizationInvitation includes the requested fields of the GraphQL type OrganizationInvitation.
// The GraphQL type's documentation follows.
//
// A pending invitation to a user to join this organization
type getNodeNodeOrganizationInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeOrganizationInvitation.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeOrganizationInvitation) GetTypename() string { return v.Typename }

// getNodeNodeOrganizationMember includes the requested fields of the GraphQL type OrganizationMember.
// The GraphQL type's documentation follows.
//
// A member of an organization
type getNodeNodeOrganizationMember struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeOrganizationMember.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeOrganizationMember) GetTypename() string { return v.Typename }

// getNodeNodePipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type getNodeNodePipeline struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodePipeline.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodePipeline) GetTypename() string { return v.Typename }

// getNodeNodePipelineMetric includes the requested fields of the GraphQL type PipelineMetric.
// The GraphQL type's documentation follows.
//
// A metric for a pipeline
type getNodeNodePipelineMetric struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodePipelineMetric.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodePipelineMetric) GetTypename() string { return v.Typename }

// getNodeNodePipelineSchedule includes the requested fields of the GraphQL type PipelineSchedule.
// The GraphQL type's documentation follows.
//
// A schedule of when a build should automatically triggered for a Pipeline
type getNodeNodePipelineSchedule struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodePipelineSchedule.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodePipelineSchedule) GetTypename() string { return v.Typename }

// getNodeNodePipelineTemplate includes the requested fields of the GraphQL type PipelineTemplate.
// The GraphQL type's documentation follows.
//
// A template defining a fixed step configuration for a pipeline
type getNodeNodePipelineTemplate struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodePipelineTemplate.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodePipelineTemplate) GetTypename() string { return v.Typename }

// getNodeNodeSSOProviderGitHubApp includes the requested fields of the GraphQL type SSOProviderGitHubApp.
// The GraphQL type's documentation follows.
//
// Single sign-on provided by GitHub
type getNodeNodeSSOProviderGitHubApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeSSOProviderGitHubApp.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeSSOProviderGitHubApp) GetTypename() string { return v.Typename }

// getNodeNodeSSOProviderGoogleGSuite includes the requested fields of the GraphQL type SSOProviderGoogleGSuite.
// The GraphQL type's documentation follows.
//
// Single sign-on provided by Google
type getNodeNodeSSOProviderGoogleGSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeSSOProviderGoogleGSuite.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeSSOProviderGoogleGSuite) GetTypename() string { return v.Typename }

// getNodeNodeSSOProviderSAML includes the requested fields of the GraphQL type SSOProviderSAML.
// The GraphQL type's documentation follows.
//
// Single sign-on provided via SAML
type getNodeNodeSSOProviderSAML struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeSSOProviderSAML.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeSSOProviderSAML) GetTypename() string { return v.Typename }

// getNodeNodeSuite includes the requested fields of the GraphQL type Suite.
// The GraphQL type's documentation follows.
//
// A suite
type getNodeNodeSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeSuite.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeSuite) GetTypename() string { return v.Typename }

// getNodeNodeTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type getNodeNodeTeam struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeTeam.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeam) GetTypename() string { return v.Typename }

// getNodeNodeTeamMember includes the requested fields of the GraphQL type TeamMember.
// The GraphQL type's documentation follows.
//
// An member of a team
type getNodeNodeTeamMember struct {
	Typename         string `json:"__typename"`
	TeamMemberValues `json:"-"`
}

// GetTypename returns getNodeNodeTeamMember.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeamMember) GetTypename() string { return v.Typename }

// GetId returns getNodeNodeTeamMember.Id, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeamMember) GetId() string { return v.TeamMemberValues.Id }

// GetUuid returns getNodeNodeTeamMember.Uuid, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeamMember) GetUuid() string { return v.TeamMemberValues.Uuid }

// GetTeam returns getNodeNodeTeamMember.Team, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeamMember) GetTeam() TeamMemberValuesTeam { return v.TeamMemberValues.Team }

// GetUser returns getNodeNodeTeamMember.User, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeamMember) GetUser() TeamMemberValuesUser { return v.TeamMemberValues.User }

// GetRole returns getNodeNodeTeamMember.Role, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeamMember) GetRole() TeamMemberRole { return v.TeamMemberValues.Role }

func (v *getNodeNodeTeamMember) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getNodeNodeTeamMember
		graphql.NoUnmarshalJSON
	}
	firstPass.getNodeNodeTeamMember = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.TeamMemberValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetNodeNodeTeamMember struct {
	Typename string `json:"__typename"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Team TeamMemberValuesTeam `json:"team"`

	User TeamMemberValuesUser `json:"user"`

	Role TeamMemberRole `json:"role"`
}

func (v *getNodeNodeTeamMember) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getNodeNodeTeamMember) __premarshalJSON() (*__premarshalgetNodeNodeTeamMember, error) {
	var retval __premarshalgetNodeNodeTeamMember

	retval.Typename = v.Typename
	retval.Id = v.TeamMemberValues.Id
	retval.Uuid = v.TeamMemberValues.Uuid
	retval.Team = v.TeamMemberValues.Team
	retval.User = v.TeamMemberValues.User
	retval.Role = v.TeamMemberValues.Role
	return &retval, nil
}

// getNodeNodeTeamPipeline includes the requested fields of the GraphQL type TeamPipeline.
// The GraphQL type's documentation follows.
//
// An pipeline that's been assigned to a team
type getNodeNodeTeamPipeline struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeTeamPipeline.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeamPipeline) GetTypename() string { return v.Typename }

// getNodeNodeTeamSuite includes the requested fields of the GraphQL type TeamSuite.
// The GraphQL type's documentation follows.
//
// A suite that's been assigned to a team
type getNodeNodeTeamSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeTeamSuite.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeTeamSuite) GetTypename() string { return v.Typename }

// getNodeNodeUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user
type getNodeNodeUser struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeUser.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeUser) GetTypename() string { return v.Typename }

// getNodeNodeViewer includes the requested fields of the GraphQL type Viewer.
// The GraphQL type's documentation follows.
//
// Represents the current user session
type getNodeNodeViewer struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getNodeNodeViewer.Typename, and is useful for accessing the field via an interface.
func (v *getNodeNodeViewer) GetTypename() string { return v.Typename }

// getNodeResponse is returned by getNode on success.
type getNodeResponse struct {
	// Fetches an object given its ID.
	Node getNodeNode `json:"-"`
}

// GetNode returns getNodeResponse.Node, and is useful for accessing the field via an interface.
func (v *getNodeResponse) GetNode() getNodeNode { return v.Node }

func (v *getNodeResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getNodeResponse
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getNodeResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalgetNodeNode(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal getNodeResponse.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetNodeResponse struct {
	Node json.RawMessage `json:"node"`
}

func (v *getNodeResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getNodeResponse) __premarshalJSON() (*__premarshalgetNodeResponse, error) {
	var retval __premarshalgetNodeResponse

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalgetNodeNode(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal getNodeResponse.Node: %w", err)
		}
	}
	return &retval, nil
}

// getOrganizationOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getOrganizationOrganization struct {
	// A space-separated allowlist of IP addresses that can access the organization via the GraphQL or REST API
	AllowedApiIpAddresses string `json:"allowedApiIpAddresses"`
	Id                    string `json:"id"`
	// The public UUID for this organization
	Uuid string `json:"uuid"`
}

// GetAllowedApiIpAddresses returns getOrganizationOrganization.AllowedApiIpAddresses, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetAllowedApiIpAddresses() string {
	return v.AllowedApiIpAddresses
}

// GetId returns getOrganizationOrganization.Id, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetId() string { return v.Id }

// GetUuid returns getOrganizationOrganization.Uuid, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetUuid() string { return v.Uuid }

// getOrganizationResponse is returned by getOrganization on success.
type getOrganizationResponse struct {
	// Find an organization
	Organization getOrganizationOrganization `json:"organization"`
}

// GetOrganization returns getOrganizationResponse.Organization, and is useful for accessing the field via an interface.
func (v *getOrganizationResponse) GetOrganization() getOrganizationOrganization {
	return v.Organization
}

// getPipelinePipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type getPipelinePipeline struct {
	Id string `json:"id"`
	// The default branch for this pipeline
	DefaultBranch string `json:"defaultBranch"`
	// The short description of the pipeline
	Description string `json:"description"`
	// The name of the pipeline
	Name string `json:"name"`
	// The repository for this pipeline
	Repository getPipelinePipelineRepository `json:"repository"`
	// The slug of the pipeline
	Slug string `json:"slug"`
	// The URL to use in your repository settings for commit webhooks
	WebhookURL string `json:"webhookURL"`
}

// GetId returns getPipelinePipeline.Id, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetId() string { return v.Id }

// GetDefaultBranch returns getPipelinePipeline.DefaultBranch, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetDefaultBranch() string { return v.DefaultBranch }

// GetDescription returns getPipelinePipeline.Description, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetDescription() string { return v.Description }

// GetName returns getPipelinePipeline.Name, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetName() string { return v.Name }

// GetRepository returns getPipelinePipeline.Repository, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetRepository() getPipelinePipelineRepository { return v.Repository }

// GetSlug returns getPipelinePipeline.Slug, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetSlug() string { return v.Slug }

// GetWebhookURL returns getPipelinePipeline.WebhookURL, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetWebhookURL() string { return v.WebhookURL }

// getPipelinePipelineRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository associated with a pipeline
type getPipelinePipelineRepository struct {
	// The git URL for this repository
	Url string `json:"url"`
}

// GetUrl returns getPipelinePipelineRepository.Url, and is useful for accessing the field via an interface.
func (v *getPipelinePipelineRepository) GetUrl() string { return v.Url }

// getPipelineResponse is returned by getPipeline on success.
type getPipelineResponse struct {
	// Find a pipeline
	Pipeline getPipelinePipeline `json:"pipeline"`
}

// GetPipeline returns getPipelineResponse.Pipeline, and is useful for accessing the field via an interface.
func (v *getPipelineResponse) GetPipeline() getPipelinePipeline { return v.Pipeline }

// getPipelineScheduleBySlugPipelineSchedule includes the requested fields of the GraphQL type PipelineSchedule.
// The GraphQL type's documentation follows.
//
// A schedule of when a build should automatically triggered for a Pipeline
type getPipelineScheduleBySlugPipelineSchedule struct {
	PipelineScheduleValues `json:"-"`
}

// GetId returns getPipelineScheduleBySlugPipelineSchedule.Id, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetId() string {
	return v.PipelineScheduleValues.Id
}

// GetUuid returns getPipelineScheduleBySlugPipelineSchedule.Uuid, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetUuid() string {
	return v.PipelineScheduleValues.Uuid
}

// GetLabel returns getPipelineScheduleBySlugPipelineSchedule.Label, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetLabel() *string {
	return v.PipelineScheduleValues.Label
}

// GetCronline returns getPipelineScheduleBySlugPipelineSchedule.Cronline, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetCronline() *string {
	return v.PipelineScheduleValues.Cronline
}

// GetMessage returns getPipelineScheduleBySlugPipelineSchedule.Message, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetMessage() *string {
	return v.PipelineScheduleValues.Message
}

// GetCommit returns getPipelineScheduleBySlugPipelineSchedule.Commit, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetCommit() *string {
	return v.PipelineScheduleValues.Commit
}

// GetBranch returns getPipelineScheduleBySlugPipelineSchedule.Branch, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetBranch() *string {
	return v.PipelineScheduleValues.Branch
}

// GetEnv returns getPipelineScheduleBySlugPipelineSchedule.Env, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetEnv() []*string {
	return v.PipelineScheduleValues.Env
}

// GetEnabled returns getPipelineScheduleBySlugPipelineSchedule.Enabled, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetEnabled() bool {
	return v.PipelineScheduleValues.Enabled
}

// GetPipeline returns getPipelineScheduleBySlugPipelineSchedule.Pipeline, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugPipelineSchedule) GetPipeline() PipelineScheduleValuesPipeline {
	return v.PipelineScheduleValues.Pipeline
}

func (v *getPipelineScheduleBySlugPipelineSchedule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getPipelineScheduleBySlugPipelineSchedule
		graphql.NoUnmarshalJSON
	}
	firstPass.getPipelineScheduleBySlugPipelineSchedule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PipelineScheduleValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetPipelineScheduleBySlugPipelineSchedule struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Label *string `json:"label"`

	Cronline *string `json:"cronline"`

	Message *string `json:"message"`

	Commit *string `json:"commit"`

	Branch *string `json:"branch"`

	Env []*string `json:"env"`

	Enabled bool `json:"enabled"`

	Pipeline PipelineScheduleValuesPipeline `json:"pipeline"`
}

func (v *getPipelineScheduleBySlugPipelineSchedule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getPipelineScheduleBySlugPipelineSchedule) __premarshalJSON() (*__premarshalgetPipelineScheduleBySlugPipelineSchedule, error) {
	var retval __premarshalgetPipelineScheduleBySlugPipelineSchedule

	retval.Id = v.PipelineScheduleValues.Id
	retval.Uuid = v.PipelineScheduleValues.Uuid
	retval.Label = v.PipelineScheduleValues.Label
	retval.Cronline = v.PipelineScheduleValues.Cronline
	retval.Message = v.PipelineScheduleValues.Message
	retval.Commit = v.PipelineScheduleValues.Commit
	retval.Branch = v.PipelineScheduleValues.Branch
	retval.Env = v.PipelineScheduleValues.Env
	retval.Enabled = v.PipelineScheduleValues.Enabled
	retval.Pipeline = v.PipelineScheduleValues.Pipeline
	return &retval, nil
}

// getPipelineScheduleBySlugResponse is returned by getPipelineScheduleBySlug on success.
type getPipelineScheduleBySlugResponse struct {
	// Find a pipeline schedule by its slug
	PipelineSchedule getPipelineScheduleBySlugPipelineSchedule `json:"pipelineSchedule"`
}

// GetPipelineSchedule returns getPipelineScheduleBySlugResponse.PipelineSchedule, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleBySlugResponse) GetPipelineSchedule() getPipelineScheduleBySlugPipelineSchedule {
	return v.PipelineSchedule
}

// getPipelineScheduleNode includes the requested fields of the GraphQL interface Node.
//
// getPipelineScheduleNode is implemented by the following types:
// getPipelineScheduleNodeAPIAccessToken
// getPipelineScheduleNodeAPIAccessTokenCode
// getPipelineScheduleNodeAPIApplication
// getPipelineScheduleNodeAgent
// getPipelineScheduleNodeAgentToken
// getPipelineScheduleNodeAnnotation
// getPipelineScheduleNodeArtifact
// getPipelineScheduleNodeAuditEvent
// getPipelineScheduleNodeAuthorizationBitbucket
// getPipelineScheduleNodeAuthorizationGitHub
// getPipelineScheduleNodeAuthorizationGitHubApp
// getPipelineScheduleNodeAuthorizationGitHubEnterprise
// getPipelineScheduleNodeAuthorizationGoogle
// getPipelineScheduleNodeAuthorizationSAML
// getPipelineScheduleNodeBuild
// getPipelineScheduleNodeChangelog
// getPipelineScheduleNodeCluster
// getPipelineScheduleNodeClusterQueue
// getPipelineScheduleNodeClusterToken
// getPipelineScheduleNodeEmail
// getPipelineScheduleNodeJobEventAssigned
// getPipelineScheduleNodeJobEventBuildStepUploadCreated
// getPipelineScheduleNodeJobEventCanceled
// getPipelineScheduleNodeJobEventFinished
// getPipelineScheduleNodeJobEventGeneric
// getPipelineScheduleNodeJobEventRetried
// getPipelineScheduleNodeJobEventTimedOut
// getPipelineScheduleNodeJobTypeBlock
// getPipelineScheduleNodeJobTypeCommand
// getPipelineScheduleNodeJobTypeTrigger
// getPipelineScheduleNodeJobTypeWait
// getPipelineScheduleNodeNotificationServiceSlack
// getPipelineScheduleNodeOrganization
// getPipelineScheduleNodeOrganizationInvitation
// getPipelineScheduleNodeOrganizationMember
// getPipelineScheduleNodePipeline
// getPipelineScheduleNodePipelineMetric
// getPipelineScheduleNodePipelineSchedule
// getPipelineScheduleNodePipelineTemplate
// getPipelineScheduleNodeSSOProviderGitHubApp
// getPipelineScheduleNodeSSOProviderGoogleGSuite
// getPipelineScheduleNodeSSOProviderSAML
// getPipelineScheduleNodeSuite
// getPipelineScheduleNodeTeam
// getPipelineScheduleNodeTeamMember
// getPipelineScheduleNodeTeamPipeline
// getPipelineScheduleNodeTeamSuite
// getPipelineScheduleNodeUser
// getPipelineScheduleNodeViewer
// The GraphQL type's documentation follows.
//
// An object with an ID.
type getPipelineScheduleNode interface {
	implementsGraphQLInterfacegetPipelineScheduleNode()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *getPipelineScheduleNodeAPIAccessToken) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodeAPIAccessTokenCode) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeAPIApplication) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodeAgent) implementsGraphQLInterfacegetPipelineScheduleNode()          {}
func (v *getPipelineScheduleNodeAgentToken) implementsGraphQLInterfacegetPipelineScheduleNode()     {}
func (v *getPipelineScheduleNodeAnnotation) implementsGraphQLInterfacegetPipelineScheduleNode()     {}
func (v *getPipelineScheduleNodeArtifact) implementsGraphQLInterfacegetPipelineScheduleNode()       {}
func (v *getPipelineScheduleNodeAuditEvent) implementsGraphQLInterfacegetPipelineScheduleNode()     {}
func (v *getPipelineScheduleNodeAuthorizationBitbucket) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeAuthorizationGitHub) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeAuthorizationGitHubApp) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeAuthorizationGitHubEnterprise) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeAuthorizationGoogle) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeAuthorizationSAML) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeBuild) implementsGraphQLInterfacegetPipelineScheduleNode()        {}
func (v *getPipelineScheduleNodeChangelog) implementsGraphQLInterfacegetPipelineScheduleNode()    {}
func (v *getPipelineScheduleNodeCluster) implementsGraphQLInterfacegetPipelineScheduleNode()      {}
func (v *getPipelineScheduleNodeClusterQueue) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodeClusterToken) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodeEmail) implementsGraphQLInterfacegetPipelineScheduleNode()        {}
func (v *getPipelineScheduleNodeJobEventAssigned) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeJobEventBuildStepUploadCreated) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeJobEventCanceled) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeJobEventFinished) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeJobEventGeneric) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeJobEventRetried) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeJobEventTimedOut) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeJobTypeBlock) implementsGraphQLInterfacegetPipelineScheduleNode()   {}
func (v *getPipelineScheduleNodeJobTypeCommand) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodeJobTypeTrigger) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodeJobTypeWait) implementsGraphQLInterfacegetPipelineScheduleNode()    {}
func (v *getPipelineScheduleNodeNotificationServiceSlack) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeOrganization) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodeOrganizationInvitation) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeOrganizationMember) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodePipeline) implementsGraphQLInterfacegetPipelineScheduleNode()       {}
func (v *getPipelineScheduleNodePipelineMetric) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodePipelineSchedule) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodePipelineTemplate) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeSSOProviderGitHubApp) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeSSOProviderGoogleGSuite) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeSSOProviderSAML) implementsGraphQLInterfacegetPipelineScheduleNode() {
}
func (v *getPipelineScheduleNodeSuite) implementsGraphQLInterfacegetPipelineScheduleNode()        {}
func (v *getPipelineScheduleNodeTeam) implementsGraphQLInterfacegetPipelineScheduleNode()         {}
func (v *getPipelineScheduleNodeTeamMember) implementsGraphQLInterfacegetPipelineScheduleNode()   {}
func (v *getPipelineScheduleNodeTeamPipeline) implementsGraphQLInterfacegetPipelineScheduleNode() {}
func (v *getPipelineScheduleNodeTeamSuite) implementsGraphQLInterfacegetPipelineScheduleNode()    {}
func (v *getPipelineScheduleNodeUser) implementsGraphQLInterfacegetPipelineScheduleNode()         {}
func (v *getPipelineScheduleNodeViewer) implementsGraphQLInterfacegetPipelineScheduleNode()       {}

func __unmarshalgetPipelineScheduleNode(b []byte, v *getPipelineScheduleNode) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "APIAccessToken":
		*v = new(getPipelineScheduleNodeAPIAccessToken)
		return json.Unmarshal(b, *v)
	case "APIAccessTokenCode":
		*v = new(getPipelineScheduleNodeAPIAccessTokenCode)
		return json.Unmarshal(b, *v)
	case "APIApplication":
		*v = new(getPipelineScheduleNodeAPIApplication)
		return json.Unmarshal(b, *v)
	case "Agent":
		*v = new(getPipelineScheduleNodeAgent)
		return json.Unmarshal(b, *v)
	case "AgentToken":
		*v = new(getPipelineScheduleNodeAgentToken)
		return json.Unmarshal(b, *v)
	case "Annotation":
		*v = new(getPipelineScheduleNodeAnnotation)
		return json.Unmarshal(b, *v)
	case "Artifact":
		*v = new(getPipelineScheduleNodeArtifact)
		return json.Unmarshal(b, *v)
	case "AuditEvent":
		*v = new(getPipelineScheduleNodeAuditEvent)
		return json.Unmarshal(b, *v)
	case "AuthorizationBitbucket":
		*v = new(getPipelineScheduleNodeAuthorizationBitbucket)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHub":
		*v = new(getPipelineScheduleNodeAuthorizationGitHub)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHubApp":
		*v = new(getPipelineScheduleNodeAuthorizationGitHubApp)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHubEnterprise":
		*v = new(getPipelineScheduleNodeAuthorizationGitHubEnterprise)
		return json.Unmarshal(b, *v)
	case "AuthorizationGoogle":
		*v = new(getPipelineScheduleNodeAuthorizationGoogle)
		return json.Unmarshal(b, *v)
	case "AuthorizationSAML":
		*v = new(getPipelineScheduleNodeAuthorizationSAML)
		return json.Unmarshal(b, *v)
	case "Build":
		*v = new(getPipelineScheduleNodeBuild)
		return json.Unmarshal(b, *v)
	case "Changelog":
		*v = new(getPipelineScheduleNodeChangelog)
		return json.Unmarshal(b, *v)
	case "Cluster":
		*v = new(getPipelineScheduleNodeCluster)
		return json.Unmarshal(b, *v)
	case "ClusterQueue":
		*v = new(getPipelineScheduleNodeClusterQueue)
		return json.Unmarshal(b, *v)
	case "ClusterToken":
		*v = new(getPipelineScheduleNodeClusterToken)
		return json.Unmarshal(b, *v)
	case "Email":
		*v = new(getPipelineScheduleNodeEmail)
		return json.Unmarshal(b, *v)
	case "JobEventAssigned":
		*v = new(getPipelineScheduleNodeJobEventAssigned)
		return json.Unmarshal(b, *v)
	case "JobEventBuildStepUploadCreated":
		*v = new(getPipelineScheduleNodeJobEventBuildStepUploadCreated)
		return json.Unmarshal(b, *v)
	case "JobEventCanceled":
		*v = new(getPipelineScheduleNodeJobEventCanceled)
		return json.Unmarshal(b, *v)
	case "JobEventFinished":
		*v = new(getPipelineScheduleNodeJobEventFinished)
		return json.Unmarshal(b, *v)
	case "JobEventGeneric":
		*v = new(getPipelineScheduleNodeJobEventGeneric)
		return json.Unmarshal(b, *v)
	case "JobEventRetried":
		*v = new(getPipelineScheduleNodeJobEventRetried)
		return json.Unmarshal(b, *v)
	case "JobEventTimedOut":
		*v = new(getPipelineScheduleNodeJobEventTimedOut)
		return json.Unmarshal(b, *v)
	case "JobTypeBlock":
		*v = new(getPipelineScheduleNodeJobTypeBlock)
		return json.Unmarshal(b, *v)
	case "JobTypeCommand":
		*v = new(getPipelineScheduleNodeJobTypeCommand)
		return json.Unmarshal(b, *v)
	case "JobTypeTrigger":
		*v = new(getPipelineScheduleNodeJobTypeTrigger)
		return json.Unmarshal(b, *v)
	case "JobTypeWait":
		*v = new(getPipelineScheduleNodeJobTypeWait)
		return json.Unmarshal(b, *v)
	case "NotificationServiceSlack":
		*v = new(getPipelineScheduleNodeNotificationServiceSlack)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(getPipelineScheduleNodeOrganization)
		return json.Unmarshal(b, *v)
	case "OrganizationInvitation":
		*v = new(getPipelineScheduleNodeOrganizationInvitation)
		return json.Unmarshal(b, *v)
	case "OrganizationMember":
		*v = new(getPipelineScheduleNodeOrganizationMember)
		return json.Unmarshal(b, *v)
	case "Pipeline":
		*v = new(getPipelineScheduleNodePipeline)
		return json.Unmarshal(b, *v)
	case "PipelineMetric":
		*v = new(getPipelineScheduleNodePipelineMetric)
		return json.Unmarshal(b, *v)
	case "PipelineSchedule":
		*v = new(getPipelineScheduleNodePipelineSchedule)
		return json.Unmarshal(b, *v)
	case "PipelineTemplate":
		*v = new(getPipelineScheduleNodePipelineTemplate)
		return json.Unmarshal(b, *v)
	case "SSOProviderGitHubApp":
		*v = new(getPipelineScheduleNodeSSOProviderGitHubApp)
		return json.Unmarshal(b, *v)
	case "SSOProviderGoogleGSuite":
		*v = new(getPipelineScheduleNodeSSOProviderGoogleGSuite)
		return json.Unmarshal(b, *v)
	case "SSOProviderSAML":
		*v = new(getPipelineScheduleNodeSSOProviderSAML)
		return json.Unmarshal(b, *v)
	case "Suite":
		*v = new(getPipelineScheduleNodeSuite)
		return json.Unmarshal(b, *v)
	case "Team":
		*v = new(getPipelineScheduleNodeTeam)
		return json.Unmarshal(b, *v)
	case "TeamMember":
		*v = new(getPipelineScheduleNodeTeamMember)
		return json.Unmarshal(b, *v)
	case "TeamPipeline":
		*v = new(getPipelineScheduleNodeTeamPipeline)
		return json.Unmarshal(b, *v)
	case "TeamSuite":
		*v = new(getPipelineScheduleNodeTeamSuite)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(getPipelineScheduleNodeUser)
		return json.Unmarshal(b, *v)
	case "Viewer":
		*v = new(getPipelineScheduleNodeViewer)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Node.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for getPipelineScheduleNode: "%v"`, tn.TypeName)
	}
}

func __marshalgetPipelineScheduleNode(v *getPipelineScheduleNode) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getPipelineScheduleNodeAPIAccessToken:
		typename = "APIAccessToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAPIAccessToken
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAPIAccessTokenCode:
		typename = "APIAccessTokenCode"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAPIAccessTokenCode
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAPIApplication:
		typename = "APIApplication"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAPIApplication
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAgent:
		typename = "Agent"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAgent
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAgentToken:
		typename = "AgentToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAgentToken
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAnnotation:
		typename = "Annotation"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAnnotation
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeArtifact:
		typename = "Artifact"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeArtifact
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAuditEvent:
		typename = "AuditEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAuditEvent
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAuthorizationBitbucket:
		typename = "AuthorizationBitbucket"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAuthorizationBitbucket
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAuthorizationGitHub:
		typename = "AuthorizationGitHub"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAuthorizationGitHub
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAuthorizationGitHubApp:
		typename = "AuthorizationGitHubApp"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAuthorizationGitHubApp
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAuthorizationGitHubEnterprise:
		typename = "AuthorizationGitHubEnterprise"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAuthorizationGitHubEnterprise
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAuthorizationGoogle:
		typename = "AuthorizationGoogle"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAuthorizationGoogle
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeAuthorizationSAML:
		typename = "AuthorizationSAML"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeAuthorizationSAML
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeBuild:
		typename = "Build"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeBuild
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeChangelog:
		typename = "Changelog"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeChangelog
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeCluster:
		typename = "Cluster"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeCluster
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeClusterQueue:
		typename = "ClusterQueue"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeClusterQueue
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeClusterToken:
		typename = "ClusterToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeClusterToken
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeEmail:
		typename = "Email"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeEmail
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobEventAssigned:
		typename = "JobEventAssigned"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobEventAssigned
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobEventBuildStepUploadCreated:
		typename = "JobEventBuildStepUploadCreated"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobEventBuildStepUploadCreated
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobEventCanceled:
		typename = "JobEventCanceled"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobEventCanceled
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobEventFinished:
		typename = "JobEventFinished"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobEventFinished
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobEventGeneric:
		typename = "JobEventGeneric"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobEventGeneric
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobEventRetried:
		typename = "JobEventRetried"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobEventRetried
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobEventTimedOut:
		typename = "JobEventTimedOut"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobEventTimedOut
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobTypeBlock:
		typename = "JobTypeBlock"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobTypeBlock
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobTypeCommand:
		typename = "JobTypeCommand"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobTypeCommand
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobTypeTrigger:
		typename = "JobTypeTrigger"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobTypeTrigger
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeJobTypeWait:
		typename = "JobTypeWait"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeJobTypeWait
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeNotificationServiceSlack:
		typename = "NotificationServiceSlack"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeNotificationServiceSlack
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeOrganization
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeOrganizationInvitation:
		typename = "OrganizationInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeOrganizationInvitation
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeOrganizationMember:
		typename = "OrganizationMember"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeOrganizationMember
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodePipeline:
		typename = "Pipeline"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodePipeline
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodePipelineMetric:
		typename = "PipelineMetric"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodePipelineMetric
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodePipelineSchedule:
		typename = "PipelineSchedule"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalgetPipelineScheduleNodePipelineSchedule
		}{typename, premarshaled}
		return json.Marshal(result)
	case *getPipelineScheduleNodePipelineTemplate:
		typename = "PipelineTemplate"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodePipelineTemplate
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeSSOProviderGitHubApp:
		typename = "SSOProviderGitHubApp"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeSSOProviderGitHubApp
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeSSOProviderGoogleGSuite:
		typename = "SSOProviderGoogleGSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeSSOProviderGoogleGSuite
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeSSOProviderSAML:
		typename = "SSOProviderSAML"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeSSOProviderSAML
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeSuite:
		typename = "Suite"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeSuite
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeTeam:
		typename = "Team"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeTeam
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeTeamMember:
		typename = "TeamMember"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeTeamMember
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeTeamPipeline:
		typename = "TeamPipeline"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeTeamPipeline
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeTeamSuite:
		typename = "TeamSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeTeamSuite
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeUser
		}{typename, v}
		return json.Marshal(result)
	case *getPipelineScheduleNodeViewer:
		typename = "Viewer"

		result := struct {
			TypeName string `json:"__typename"`
			*getPipelineScheduleNodeViewer
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for getPipelineScheduleNode: "%T"`, v)
	}
}

// getPipelineScheduleNodeAPIAccessToken includes the requested fields of the GraphQL type APIAccessToken.
// The GraphQL type's documentation follows.
//
// API access tokens for authentication with the Buildkite API
type getPipelineScheduleNodeAPIAccessToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAPIAccessToken.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAPIAccessToken) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAPIAccessTokenCode includes the requested fields of the GraphQL type APIAccessTokenCode.
// The GraphQL type's documentation follows.
//
// A code that is used by an API Application to request an API Access Token
type getPipelineScheduleNodeAPIAccessTokenCode struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAPIAccessTokenCode.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAPIAccessTokenCode) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAPIApplication includes the requested fields of the GraphQL type APIApplication.
// The GraphQL type's documentation follows.
//
// An API Application
type getPipelineScheduleNodeAPIApplication struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAPIApplication.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAPIApplication) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAgent includes the requested fields of the GraphQL type Agent.
// The GraphQL type's documentation follows.
//
// An agent
type getPipelineScheduleNodeAgent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAgent.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAgent) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type getPipelineScheduleNodeAgentToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAgentToken.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAgentToken) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAnnotation includes the requested fields of the GraphQL type Annotation.
// The GraphQL type's documentation follows.
//
// An annotation allows you to add arbitrary content to the top of a build page in the Buildkite UI
type getPipelineScheduleNodeAnnotation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAnnotation.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAnnotation) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeArtifact includes the requested fields of the GraphQL type Artifact.
// The GraphQL type's documentation follows.
//
// A file uploaded from the agent whilst running a job
type getPipelineScheduleNodeArtifact struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeArtifact.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeArtifact) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAuditEvent includes the requested fields of the GraphQL type AuditEvent.
// The GraphQL type's documentation follows.
//
// Audit record of an event which occurred in the system
type getPipelineScheduleNodeAuditEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAuditEvent.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAuditEvent) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAuthorizationBitbucket includes the requested fields of the GraphQL type AuthorizationBitbucket.
// The GraphQL type's documentation follows.
//
// A Bitbucket account authorized with a Buildkite account
type getPipelineScheduleNodeAuthorizationBitbucket struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAuthorizationBitbucket.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAuthorizationBitbucket) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAuthorizationGitHub includes the requested fields of the GraphQL type AuthorizationGitHub.
// The GraphQL type's documentation follows.
//
// A GitHub account authorized with a Buildkite account
type getPipelineScheduleNodeAuthorizationGitHub struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAuthorizationGitHub.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAuthorizationGitHub) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAuthorizationGitHubApp includes the requested fields of the GraphQL type AuthorizationGitHubApp.
// The GraphQL type's documentation follows.
//
// A GitHub app authorized with a Buildkite account
type getPipelineScheduleNodeAuthorizationGitHubApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAuthorizationGitHubApp.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAuthorizationGitHubApp) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAuthorizationGitHubEnterprise includes the requested fields of the GraphQL type AuthorizationGitHubEnterprise.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise account authorized with a Buildkite account
type getPipelineScheduleNodeAuthorizationGitHubEnterprise struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAuthorizationGitHubEnterprise.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAuthorizationGitHubEnterprise) GetTypename() string {
	return v.Typename
}

// getPipelineScheduleNodeAuthorizationGoogle includes the requested fields of the GraphQL type AuthorizationGoogle.
// The GraphQL type's documentation follows.
//
// A Google account authorized with a Buildkite account
type getPipelineScheduleNodeAuthorizationGoogle struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAuthorizationGoogle.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAuthorizationGoogle) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeAuthorizationSAML includes the requested fields of the GraphQL type AuthorizationSAML.
// The GraphQL type's documentation follows.
//
// A SAML account authorized with a Buildkite account
type getPipelineScheduleNodeAuthorizationSAML struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeAuthorizationSAML.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeAuthorizationSAML) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeBuild includes the requested fields of the GraphQL type Build.
// The GraphQL type's documentation follows.
//
// A build from a pipeline
type getPipelineScheduleNodeBuild struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeBuild.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeBuild) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeChangelog includes the requested fields of the GraphQL type Changelog.
// The GraphQL type's documentation follows.
//
// A changelog
type getPipelineScheduleNodeChangelog struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeChangelog.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeChangelog) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeCluster includes the requested fields of the GraphQL type Cluster.
type getPipelineScheduleNodeCluster struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeCluster.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeCluster) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type getPipelineScheduleNodeClusterQueue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeClusterQueue.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeClusterQueue) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type getPipelineScheduleNodeClusterToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeClusterToken.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeClusterToken) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeEmail includes the requested fields of the GraphQL type Email.
// The GraphQL type's documentation follows.
//
// An email address
type getPipelineScheduleNodeEmail struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeEmail.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeEmail) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobEventAssigned includes the requested fields of the GraphQL type JobEventAssigned.
// The GraphQL type's documentation follows.
//
// An event created when the dispatcher assigns the job to an agent
type getPipelineScheduleNodeJobEventAssigned struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobEventAssigned.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobEventAssigned) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobEventBuildStepUploadCreated includes the requested fields of the GraphQL type JobEventBuildStepUploadCreated.
// The GraphQL type's documentation follows.
//
// An event created when the job creates new build steps via pipeline upload
type getPipelineScheduleNodeJobEventBuildStepUploadCreated struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobEventBuildStepUploadCreated.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobEventBuildStepUploadCreated) GetTypename() string {
	return v.Typename
}

// getPipelineScheduleNodeJobEventCanceled includes the requested fields of the GraphQL type JobEventCanceled.
// The GraphQL type's documentation follows.
//
// An event created when the job is canceled
type getPipelineScheduleNodeJobEventCanceled struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobEventCanceled.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobEventCanceled) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobEventFinished includes the requested fields of the GraphQL type JobEventFinished.
// The GraphQL type's documentation follows.
//
// An event created when the job is finished
type getPipelineScheduleNodeJobEventFinished struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobEventFinished.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobEventFinished) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobEventGeneric includes the requested fields of the GraphQL type JobEventGeneric.
// The GraphQL type's documentation follows.
//
// A generic event type that doesn't have any additional meta-information associated with the event
type getPipelineScheduleNodeJobEventGeneric struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobEventGeneric.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobEventGeneric) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobEventRetried includes the requested fields of the GraphQL type JobEventRetried.
// The GraphQL type's documentation follows.
//
// An event created when the job is retried
type getPipelineScheduleNodeJobEventRetried struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobEventRetried.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobEventRetried) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobEventTimedOut includes the requested fields of the GraphQL type JobEventTimedOut.
// The GraphQL type's documentation follows.
//
// An event created when the job is timed out
type getPipelineScheduleNodeJobEventTimedOut struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobEventTimedOut.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobEventTimedOut) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobTypeBlock includes the requested fields of the GraphQL type JobTypeBlock.
// The GraphQL type's documentation follows.
//
// A type of job that requires a user to unblock it before proceeding in a build pipeline
type getPipelineScheduleNodeJobTypeBlock struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobTypeBlock.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobTypeBlock) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobTypeCommand includes the requested fields of the GraphQL type JobTypeCommand.
// The GraphQL type's documentation follows.
//
// A type of job that runs a command on an agent
type getPipelineScheduleNodeJobTypeCommand struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobTypeCommand.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobTypeCommand) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobTypeTrigger includes the requested fields of the GraphQL type JobTypeTrigger.
// The GraphQL type's documentation follows.
//
// A type of job that triggers another build on a pipeline
type getPipelineScheduleNodeJobTypeTrigger struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobTypeTrigger.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobTypeTrigger) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeJobTypeWait includes the requested fields of the GraphQL type JobTypeWait.
// The GraphQL type's documentation follows.
//
// A type of job that waits for all previous jobs to pass before proceeding the build pipeline
type getPipelineScheduleNodeJobTypeWait struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeJobTypeWait.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeJobTypeWait) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeNotificationServiceSlack includes the requested fields of the GraphQL type NotificationServiceSlack.
// The GraphQL type's documentation follows.
//
// Deliver notifications to Slack
type getPipelineScheduleNodeNotificationServiceSlack struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeNotificationServiceSlack.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeNotificationServiceSlack) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getPipelineScheduleNodeOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeOrganization.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeOrganization) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeOrganizationInvitation includes the requested fields of the GraphQL type OrganizationInvitation.
// The GraphQL type's documentation follows.
//
// A pending invitation to a user to join this organization
type getPipelineScheduleNodeOrganizationInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeOrganizationInvitation.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeOrganizationInvitation) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeOrganizationMember includes the requested fields of the GraphQL type OrganizationMember.
// The GraphQL type's documentation follows.
//
// A member of an organization
type getPipelineScheduleNodeOrganizationMember struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeOrganizationMember.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeOrganizationMember) GetTypename() string { return v.Typename }

// getPipelineScheduleNodePipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type getPipelineScheduleNodePipeline struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodePipeline.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipeline) GetTypename() string { return v.Typename }

// getPipelineScheduleNodePipelineMetric includes the requested fields of the GraphQL type PipelineMetric.
// The GraphQL type's documentation follows.
//
// A metric for a pipeline
type getPipelineScheduleNodePipelineMetric struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodePipelineMetric.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineMetric) GetTypename() string { return v.Typename }

// getPipelineScheduleNodePipelineSchedule includes the requested fields of the GraphQL type PipelineSchedule.
// The GraphQL type's documentation follows.
//
// A schedule of when a build should automatically triggered for a Pipeline
type getPipelineScheduleNodePipelineSchedule struct {
	Typename               string `json:"__typename"`
	PipelineScheduleValues `json:"-"`
}

// GetTypename returns getPipelineScheduleNodePipelineSchedule.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetTypename() string { return v.Typename }

// GetId returns getPipelineScheduleNodePipelineSchedule.Id, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetId() string { return v.PipelineScheduleValues.Id }

// GetUuid returns getPipelineScheduleNodePipelineSchedule.Uuid, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetUuid() string {
	return v.PipelineScheduleValues.Uuid
}

// GetLabel returns getPipelineScheduleNodePipelineSchedule.Label, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetLabel() *string {
	return v.PipelineScheduleValues.Label
}

// GetCronline returns getPipelineScheduleNodePipelineSchedule.Cronline, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetCronline() *string {
	return v.PipelineScheduleValues.Cronline
}

// GetMessage returns getPipelineScheduleNodePipelineSchedule.Message, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetMessage() *string {
	return v.PipelineScheduleValues.Message
}

// GetCommit returns getPipelineScheduleNodePipelineSchedule.Commit, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetCommit() *string {
	return v.PipelineScheduleValues.Commit
}

// GetBranch returns getPipelineScheduleNodePipelineSchedule.Branch, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetBranch() *string {
	return v.PipelineScheduleValues.Branch
}

// GetEnv returns getPipelineScheduleNodePipelineSchedule.Env, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetEnv() []*string {
	return v.PipelineScheduleValues.Env
}

// GetEnabled returns getPipelineScheduleNodePipelineSchedule.Enabled, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetEnabled() bool {
	return v.PipelineScheduleValues.Enabled
}

// GetPipeline returns getPipelineScheduleNodePipelineSchedule.Pipeline, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineSchedule) GetPipeline() PipelineScheduleValuesPipeline {
	return v.PipelineScheduleValues.Pipeline
}

func (v *getPipelineScheduleNodePipelineSchedule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getPipelineScheduleNodePipelineSchedule
		graphql.NoUnmarshalJSON
	}
	firstPass.getPipelineScheduleNodePipelineSchedule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PipelineScheduleValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetPipelineScheduleNodePipelineSchedule struct {
	Typename string `json:"__typename"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Label *string `json:"label"`

	Cronline *string `json:"cronline"`

	Message *string `json:"message"`

	Commit *string `json:"commit"`

	Branch *string `json:"branch"`

	Env []*string `json:"env"`

	Enabled bool `json:"enabled"`

	Pipeline PipelineScheduleValuesPipeline `json:"pipeline"`
}

func (v *getPipelineScheduleNodePipelineSchedule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getPipelineScheduleNodePipelineSchedule) __premarshalJSON() (*__premarshalgetPipelineScheduleNodePipelineSchedule, error) {
	var retval __premarshalgetPipelineScheduleNodePipelineSchedule

	retval.Typename = v.Typename
	retval.Id = v.PipelineScheduleValues.Id
	retval.Uuid = v.PipelineScheduleValues.Uuid
	retval.Label = v.PipelineScheduleValues.Label
	retval.Cronline = v.PipelineScheduleValues.Cronline
	retval.Message = v.PipelineScheduleValues.Message
	retval.Commit = v.PipelineScheduleValues.Commit
	retval.Branch = v.PipelineScheduleValues.Branch
	retval.Env = v.PipelineScheduleValues.Env
	retval.Enabled = v.PipelineScheduleValues.Enabled
	retval.Pipeline = v.PipelineScheduleValues.Pipeline
	return &retval, nil
}

// getPipelineScheduleNodePipelineTemplate includes the requested fields of the GraphQL type PipelineTemplate.
// The GraphQL type's documentation follows.
//
// A template defining a fixed step configuration for a pipeline
type getPipelineScheduleNodePipelineTemplate struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodePipelineTemplate.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodePipelineTemplate) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeSSOProviderGitHubApp includes the requested fields of the GraphQL type SSOProviderGitHubApp.
// The GraphQL type's documentation follows.
//
// Single sign-on provided by GitHub
type getPipelineScheduleNodeSSOProviderGitHubApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeSSOProviderGitHubApp.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeSSOProviderGitHubApp) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeSSOProviderGoogleGSuite includes the requested fields of the GraphQL type SSOProviderGoogleGSuite.
// The GraphQL type's documentation follows.
//
// Single sign-on provided by Google
type getPipelineScheduleNodeSSOProviderGoogleGSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeSSOProviderGoogleGSuite.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeSSOProviderGoogleGSuite) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeSSOProviderSAML includes the requested fields of the GraphQL type SSOProviderSAML.
// The GraphQL type's documentation follows.
//
// Single sign-on provided via SAML
type getPipelineScheduleNodeSSOProviderSAML struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeSSOProviderSAML.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeSSOProviderSAML) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeSuite includes the requested fields of the GraphQL type Suite.
// The GraphQL type's documentation follows.
//
// A suite
type getPipelineScheduleNodeSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeSuite.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeSuite) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type getPipelineScheduleNodeTeam struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeTeam.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeTeam) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeTeamMember includes the requested fields of the GraphQL type TeamMember.
// The GraphQL type's documentation follows.
//
// An member of a team
type getPipelineScheduleNodeTeamMember struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeTeamMember.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeTeamMember) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeTeamPipeline includes the requested fields of the GraphQL type TeamPipeline.
// The GraphQL type's documentation follows.
//
// An pipeline that's been assigned to a team
type getPipelineScheduleNodeTeamPipeline struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeTeamPipeline.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeTeamPipeline) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeTeamSuite includes the requested fields of the GraphQL type TeamSuite.
// The GraphQL type's documentation follows.
//
// A suite that's been assigned to a team
type getPipelineScheduleNodeTeamSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeTeamSuite.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeTeamSuite) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user
type getPipelineScheduleNodeUser struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeUser.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeUser) GetTypename() string { return v.Typename }

// getPipelineScheduleNodeViewer includes the requested fields of the GraphQL type Viewer.
// The GraphQL type's documentation follows.
//
// Represents the current user session
type getPipelineScheduleNodeViewer struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getPipelineScheduleNodeViewer.Typename, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleNodeViewer) GetTypename() string { return v.Typename }

// getPipelineScheduleResponse is returned by getPipelineSchedule on success.
type getPipelineScheduleResponse struct {
	// Fetches an object given its ID.
	Node getPipelineScheduleNode `json:"-"`
}

// GetNode returns getPipelineScheduleResponse.Node, and is useful for accessing the field via an interface.
func (v *getPipelineScheduleResponse) GetNode() getPipelineScheduleNode { return v.Node }

func (v *getPipelineScheduleResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getPipelineScheduleResponse
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getPipelineScheduleResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalgetPipelineScheduleNode(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal getPipelineScheduleResponse.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetPipelineScheduleResponse struct {
	Node json.RawMessage `json:"node"`
}

func (v *getPipelineScheduleResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getPipelineScheduleResponse) __premarshalJSON() (*__premarshalgetPipelineScheduleResponse, error) {
	var retval __premarshalgetPipelineScheduleResponse

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalgetPipelineScheduleNode(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal getPipelineScheduleResponse.Node: %w", err)
		}
	}
	return &retval, nil
}

// getTeamResponse is returned by getTeam on success.
type getTeamResponse struct {
	// Find a team
	Team getTeamTeam `json:"team"`
}

// GetTeam returns getTeamResponse.Team, and is useful for accessing the field via an interface.
func (v *getTeamResponse) GetTeam() getTeamTeam { return v.Team }

// getTeamTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type getTeamTeam struct {
	// New organization members will be granted this role on this team
	DefaultMemberRole GTeamMemberRole `json:"defaultMemberRole"`
	// A description of the team
	Description string `json:"description"`
	Id          string `json:"id"`
	// Add new organization members to this team by default
	IsDefaultTeam bool `json:"isDefaultTeam"`
	// Whether or not team members can create new pipelines in this team
	MembersCanCreatePipelines bool `json:"membersCanCreatePipelines"`
	// The name of the team
	Name string `json:"name"`
	// The privacy setting for this team
	Privacy GenqlientTeamPrivacy `json:"privacy"`
	// The slug of the team
	Slug string `json:"slug"`
	// The public UUID for this team
	Uuid string `json:"uuid"`
}

// GetDefaultMemberRole returns getTeamTeam.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetDefaultMemberRole() GTeamMemberRole { return v.DefaultMemberRole }

// GetDescription returns getTeamTeam.Description, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetDescription() string { return v.Description }

// GetId returns getTeamTeam.Id, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetId() string { return v.Id }

// GetIsDefaultTeam returns getTeamTeam.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetIsDefaultTeam() bool { return v.IsDefaultTeam }

// GetMembersCanCreatePipelines returns getTeamTeam.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetMembersCanCreatePipelines() bool { return v.MembersCanCreatePipelines }

// GetName returns getTeamTeam.Name, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetName() string { return v.Name }

// GetPrivacy returns getTeamTeam.Privacy, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetPrivacy() GenqlientTeamPrivacy { return v.Privacy }

// GetSlug returns getTeamTeam.Slug, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetSlug() string { return v.Slug }

// GetUuid returns getTeamTeam.Uuid, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetUuid() string { return v.Uuid }

// revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload includes the requested fields of the GraphQL type AgentTokenRevokePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of AgentTokenRevoke.
type revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload struct {
	AgentToken revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken `json:"agentToken"`
}

// GetAgentToken returns revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload.AgentToken, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload) GetAgentToken() revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken {
	return v.AgentToken
}

// revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken struct {
	Id string `json:"id"`
	// A description about what this agent token is used for
	Description *string `json:"description"`
	// The public UUID for the agent
	Uuid string `json:"uuid"`
}

// GetId returns revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken.Id, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken) GetId() string {
	return v.Id
}

// GetDescription returns revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken.Description, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken) GetDescription() *string {
	return v.Description
}

// GetUuid returns revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken.Uuid, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken) GetUuid() string {
	return v.Uuid
}

// revokeAgentTokenResponse is returned by revokeAgentToken on success.
type revokeAgentTokenResponse struct {
	// Revoke an agent registration token.
	AgentTokenRevoke revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload `json:"agentTokenRevoke"`
}

// GetAgentTokenRevoke returns revokeAgentTokenResponse.AgentTokenRevoke, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenResponse) GetAgentTokenRevoke() revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload {
	return v.AgentTokenRevoke
}

// revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload includes the requested fields of the GraphQL type ClusterAgentTokenRevokePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterAgentTokenRevoke.
type revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload struct {
	DeletedClusterAgentTokenId string `json:"deletedClusterAgentTokenId"`
}

// GetDeletedClusterAgentTokenId returns revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload.DeletedClusterAgentTokenId, and is useful for accessing the field via an interface.
func (v *revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload) GetDeletedClusterAgentTokenId() string {
	return v.DeletedClusterAgentTokenId
}

// revokeClusterAgentTokenResponse is returned by revokeClusterAgentToken on success.
type revokeClusterAgentTokenResponse struct {
	// Revokes a cluster agent token
	ClusterAgentTokenRevoke revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload `json:"clusterAgentTokenRevoke"`
}

// GetClusterAgentTokenRevoke returns revokeClusterAgentTokenResponse.ClusterAgentTokenRevoke, and is useful for accessing the field via an interface.
func (v *revokeClusterAgentTokenResponse) GetClusterAgentTokenRevoke() revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload {
	return v.ClusterAgentTokenRevoke
}

// setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload includes the requested fields of the GraphQL type OrganizationAPIIPAllowlistUpdateMutationPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of OrganizationAPIIPAllowlistUpdateMutation.
type setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload struct {
	Organization setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization `json:"organization"`
}

// GetOrganization returns setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload.Organization, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload) GetOrganization() setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization {
	return v.Organization
}

// setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization struct {
	// A space-separated allowlist of IP addresses that can access the organization via the GraphQL or REST API
	AllowedApiIpAddresses string `json:"allowedApiIpAddresses"`
	Id                    string `json:"id"`
	// The public UUID for this organization
	Uuid string `json:"uuid"`
}

// GetAllowedApiIpAddresses returns setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization.AllowedApiIpAddresses, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization) GetAllowedApiIpAddresses() string {
	return v.AllowedApiIpAddresses
}

// GetId returns setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization.Id, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization) GetId() string {
	return v.Id
}

// GetUuid returns setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization.Uuid, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization) GetUuid() string {
	return v.Uuid
}

// setApiIpAddressesResponse is returned by setApiIpAddresses on success.
type setApiIpAddressesResponse struct {
	// Sets an allowlist of IP addresses for API access to an organization. Please note that this is a beta feature and is not yet available to all organizations.
	OrganizationApiIpAllowlistUpdate setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload `json:"organizationApiIpAllowlistUpdate"`
}

// GetOrganizationApiIpAllowlistUpdate returns setApiIpAddressesResponse.OrganizationApiIpAllowlistUpdate, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesResponse) GetOrganizationApiIpAllowlistUpdate() setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload {
	return v.OrganizationApiIpAllowlistUpdate
}

// updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload includes the requested fields of the GraphQL type ClusterAgentTokenUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterAgentTokenUpdate.
type updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload struct {
	ClusterAgentToken updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken `json:"clusterAgentToken"`
}

// GetClusterAgentToken returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload.ClusterAgentToken, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload) GetClusterAgentToken() updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken {
	return v.ClusterAgentToken
}

// updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken struct {
	ClusterAgentTokenValues `json:"-"`
}

// GetCluster returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken.Cluster, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) GetCluster() ClusterAgentTokenValuesCluster {
	return v.ClusterAgentTokenValues.Cluster
}

// GetDescription returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken.Description, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) GetDescription() string {
	return v.ClusterAgentTokenValues.Description
}

// GetId returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken.Id, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) GetId() string {
	return v.ClusterAgentTokenValues.Id
}

// GetUuid returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken.Uuid, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) GetUuid() string {
	return v.ClusterAgentTokenValues.Uuid
}

func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken
		graphql.NoUnmarshalJSON
	}
	firstPass.updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterAgentTokenValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalupdateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken struct {
	Cluster ClusterAgentTokenValuesCluster `json:"cluster"`

	Description string `json:"description"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`
}

func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) __premarshalJSON() (*__premarshalupdateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken, error) {
	var retval __premarshalupdateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken

	retval.Cluster = v.ClusterAgentTokenValues.Cluster
	retval.Description = v.ClusterAgentTokenValues.Description
	retval.Id = v.ClusterAgentTokenValues.Id
	retval.Uuid = v.ClusterAgentTokenValues.Uuid
	return &retval, nil
}

// updateClusterAgentTokenResponse is returned by updateClusterAgentToken on success.
type updateClusterAgentTokenResponse struct {
	// Updates a cluster agent token
	ClusterAgentTokenUpdate updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload `json:"clusterAgentTokenUpdate"`
}

// GetClusterAgentTokenUpdate returns updateClusterAgentTokenResponse.ClusterAgentTokenUpdate, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenResponse) GetClusterAgentTokenUpdate() updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload {
	return v.ClusterAgentTokenUpdate
}

// updateClusterClusterUpdateClusterUpdatePayload includes the requested fields of the GraphQL type ClusterUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterUpdate.
type updateClusterClusterUpdateClusterUpdatePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string                                                `json:"clientMutationId"`
	Cluster          updateClusterClusterUpdateClusterUpdatePayloadCluster `json:"cluster"`
}

// GetClientMutationId returns updateClusterClusterUpdateClusterUpdatePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// GetCluster returns updateClusterClusterUpdateClusterUpdatePayload.Cluster, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayload) GetCluster() updateClusterClusterUpdateClusterUpdatePayloadCluster {
	return v.Cluster
}

// updateClusterClusterUpdateClusterUpdatePayloadCluster includes the requested fields of the GraphQL type Cluster.
type updateClusterClusterUpdateClusterUpdatePayloadCluster struct {
	ClusterFields `json:"-"`
}

// GetId returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Id, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetId() string {
	return v.ClusterFields.Id
}

// GetUuid returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Uuid, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetUuid() string {
	return v.ClusterFields.Uuid
}

// GetName returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Name, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetName() string {
	return v.ClusterFields.Name
}

// GetDescription returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Description, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetDescription() *string {
	return v.ClusterFields.Description
}

// GetEmoji returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Emoji, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetEmoji() *string {
	return v.ClusterFields.Emoji
}

// GetColor returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Color, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetColor() *string {
	return v.ClusterFields.Color
}

func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateClusterClusterUpdateClusterUpdatePayloadCluster
		graphql.NoUnmarshalJSON
	}
	firstPass.updateClusterClusterUpdateClusterUpdatePayloadCluster = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalupdateClusterClusterUpdateClusterUpdatePayloadCluster struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description *string `json:"description"`

	Emoji *string `json:"emoji"`

	Color *string `json:"color"`
}

func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) __premarshalJSON() (*__premarshalupdateClusterClusterUpdateClusterUpdatePayloadCluster, error) {
	var retval __premarshalupdateClusterClusterUpdateClusterUpdatePayloadCluster

	retval.Id = v.ClusterFields.Id
	retval.Uuid = v.ClusterFields.Uuid
	retval.Name = v.ClusterFields.Name
	retval.Description = v.ClusterFields.Description
	retval.Emoji = v.ClusterFields.Emoji
	retval.Color = v.ClusterFields.Color
	return &retval, nil
}

// updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload includes the requested fields of the GraphQL type ClusterQueueUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterQueueUpdate.
type updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload struct {
	ClusterQueue updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue `json:"clusterQueue"`
}

// GetClusterQueue returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload.ClusterQueue, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload) GetClusterQueue() updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue {
	return v.ClusterQueue
}

// updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue struct {
	ClusterQueueValues `json:"-"`
}

// GetId returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Id, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetId() string {
	return v.ClusterQueueValues.Id
}

// GetUuid returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Uuid, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetUuid() string {
	return v.ClusterQueueValues.Uuid
}

// GetKey returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Key, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetKey() string {
	return v.ClusterQueueValues.Key
}

// GetDescription returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Description, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetDescription() *string {
	return v.ClusterQueueValues.Description
}

// GetCluster returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Cluster, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetCluster() ClusterQueueValuesCluster {
	return v.ClusterQueueValues.Cluster
}

func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue
		graphql.NoUnmarshalJSON
	}
	firstPass.updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterQueueValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalupdateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Key string `json:"key"`

	Description *string `json:"description"`

	Cluster ClusterQueueValuesCluster `json:"cluster"`
}

func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) __premarshalJSON() (*__premarshalupdateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue, error) {
	var retval __premarshalupdateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue

	retval.Id = v.ClusterQueueValues.Id
	retval.Uuid = v.ClusterQueueValues.Uuid
	retval.Key = v.ClusterQueueValues.Key
	retval.Description = v.ClusterQueueValues.Description
	retval.Cluster = v.ClusterQueueValues.Cluster
	return &retval, nil
}

// updateClusterQueueResponse is returned by updateClusterQueue on success.
type updateClusterQueueResponse struct {
	// Updates a cluster queue.
	ClusterQueueUpdate updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload `json:"clusterQueueUpdate"`
}

// GetClusterQueueUpdate returns updateClusterQueueResponse.ClusterQueueUpdate, and is useful for accessing the field via an interface.
func (v *updateClusterQueueResponse) GetClusterQueueUpdate() updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload {
	return v.ClusterQueueUpdate
}

// updateClusterResponse is returned by updateCluster on success.
type updateClusterResponse struct {
	// Updates a cluster.
	ClusterUpdate updateClusterClusterUpdateClusterUpdatePayload `json:"clusterUpdate"`
}

// GetClusterUpdate returns updateClusterResponse.ClusterUpdate, and is useful for accessing the field via an interface.
func (v *updateClusterResponse) GetClusterUpdate() updateClusterClusterUpdateClusterUpdatePayload {
	return v.ClusterUpdate
}

// updatePipelinePipelineUpdatePipelineUpdatePayload includes the requested fields of the GraphQL type PipelineUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineUpdate.
type updatePipelinePipelineUpdatePipelineUpdatePayload struct {
	Pipeline updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline `json:"pipeline"`
}

// GetPipeline returns updatePipelinePipelineUpdatePipelineUpdatePayload.Pipeline, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayload) GetPipeline() updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline {
	return v.Pipeline
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline struct {
	Id string `json:"id"`
	// Whether existing builds can be rebuilt as new builds.
	AllowRebuilds bool `json:"allowRebuilds"`
	// A branch filter pattern to limit which pushed branches trigger builds on this pipeline.
	BranchConfiguration string `json:"branchConfiguration"`
	// When a new build is created on a branch, any previous builds that are running on the same branch will be automatically cancelled
	CancelIntermediateBuilds bool `json:"cancelIntermediateBuilds"`
	// Limit which branches build cancelling applies to, for example `!main` will ensure that the main branch won't have it's builds automatically cancelled.
	CancelIntermediateBuildsBranchFilter string                                                           `json:"cancelIntermediateBuildsBranchFilter"`
	Cluster                              updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster `json:"cluster"`
	// The default branch for this pipeline
	DefaultBranch string `json:"defaultBranch"`
	// The default timeout in minutes for all command steps in this pipeline. This can still be overridden in any command step
	DefaultTimeoutInMinutes int `json:"defaultTimeoutInMinutes"`
	// The maximum timeout in minutes for all command steps in this pipeline. Any command step without a timeout or with a timeout greater than this value will be set to this value.
	MaximumTimeoutInMinutes int `json:"maximumTimeoutInMinutes"`
	// The short description of the pipeline
	Description string `json:"description"`
	// The name of the pipeline
	Name string `json:"name"`
	// The repository for this pipeline
	Repository updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository `json:"repository"`
	// When a new build is created on a branch, any previous builds that haven't yet started on the same branch will be automatically marked as skipped.
	SkipIntermediateBuilds bool `json:"skipIntermediateBuilds"`
	// Limit which branches build skipping applies to, for example `!main` will ensure that the main branch won't have it's builds automatically skipped.
	SkipIntermediateBuildsBranchFilter string `json:"skipIntermediateBuildsBranchFilter"`
	// The slug of the pipeline
	Slug  string                                                         `json:"slug"`
	Steps updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps `json:"steps"`
	// Tags that have been given to this pipeline
	Tags []updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag `json:"tags"`
	// Teams associated with this pipeline
	Teams updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection `json:"teams"`
	// The URL to use in your repository settings for commit webhooks
	WebhookURL string `json:"webhookURL"`
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetId() string { return v.Id }

// GetAllowRebuilds returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.AllowRebuilds, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetAllowRebuilds() bool {
	return v.AllowRebuilds
}

// GetBranchConfiguration returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.BranchConfiguration, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetBranchConfiguration() string {
	return v.BranchConfiguration
}

// GetCancelIntermediateBuilds returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.CancelIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetCancelIntermediateBuilds() bool {
	return v.CancelIntermediateBuilds
}

// GetCancelIntermediateBuildsBranchFilter returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.CancelIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetCancelIntermediateBuildsBranchFilter() string {
	return v.CancelIntermediateBuildsBranchFilter
}

// GetCluster returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Cluster, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetCluster() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster {
	return v.Cluster
}

// GetDefaultBranch returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.DefaultBranch, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetDefaultBranch() string {
	return v.DefaultBranch
}

// GetDefaultTimeoutInMinutes returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.DefaultTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetDefaultTimeoutInMinutes() int {
	return v.DefaultTimeoutInMinutes
}

// GetMaximumTimeoutInMinutes returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.MaximumTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetMaximumTimeoutInMinutes() int {
	return v.MaximumTimeoutInMinutes
}

// GetDescription returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Description, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetDescription() string {
	return v.Description
}

// GetName returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Name, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetName() string { return v.Name }

// GetRepository returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Repository, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetRepository() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository {
	return v.Repository
}

// GetSkipIntermediateBuilds returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.SkipIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetSkipIntermediateBuilds() bool {
	return v.SkipIntermediateBuilds
}

// GetSkipIntermediateBuildsBranchFilter returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.SkipIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetSkipIntermediateBuildsBranchFilter() string {
	return v.SkipIntermediateBuildsBranchFilter
}

// GetSlug returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Slug, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetSlug() string { return v.Slug }

// GetSteps returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Steps, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetSteps() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps {
	return v.Steps
}

// GetTags returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Tags, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetTags() []updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag {
	return v.Tags
}

// GetTeams returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Teams, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetTeams() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection {
	return v.Teams
}

// GetWebhookURL returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.WebhookURL, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetWebhookURL() string {
	return v.WebhookURL
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster includes the requested fields of the GraphQL type Cluster.
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster struct {
	Id string `json:"id"`
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster) GetId() string {
	return v.Id
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository associated with a pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository struct {
	// The git URL for this repository
	Url string `json:"url"`
}

// GetUrl returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository.Url, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository) GetUrl() string {
	return v.Url
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps includes the requested fields of the GraphQL type PipelineSteps.
// The GraphQL type's documentation follows.
//
// Steps defined on a pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps struct {
	// A YAML representation of the pipeline steps
	Yaml string `json:"yaml"`
}

// GetYaml returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps.Yaml, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps) GetYaml() string {
	return v.Yaml
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag includes the requested fields of the GraphQL type PipelineTag.
// The GraphQL type's documentation follows.
//
// A tag associated with a pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag struct {
	// The label for this tag
	Label string `json:"label"`
}

// GetLabel returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag.Label, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag) GetLabel() string {
	return v.Label
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection includes the requested fields of the GraphQL type TeamPipelineConnection.
// The GraphQL type's documentation follows.
//
// A collection of TeamPipeline records
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection struct {
	Edges []updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge `json:"edges"`
}

// GetEdges returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection.Edges, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection) GetEdges() []updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge {
	return v.Edges
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge includes the requested fields of the GraphQL type TeamPipelineEdge.
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge struct {
	Node updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline `json:"node"`
}

// GetNode returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge.Node, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge) GetNode() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline {
	return v.Node
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline includes the requested fields of the GraphQL type TeamPipeline.
// The GraphQL type's documentation follows.
//
// An pipeline that's been assigned to a team
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline struct {
	// The access level users have to this pipeline
	AccessLevel PipelineAccessLevels `json:"accessLevel"`
	Id          string               `json:"id"`
	// The team associated with this team member
	Team updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam `json:"team"`
}

// GetAccessLevel returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline.AccessLevel, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline) GetAccessLevel() PipelineAccessLevels {
	return v.AccessLevel
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline) GetId() string {
	return v.Id
}

// GetTeam returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline.Team, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline) GetTeam() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam {
	return v.Team
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam struct {
	// A description of the team
	Description string `json:"description"`
	Id          string `json:"id"`
	// Add new organization members to this team by default
	IsDefaultTeam bool `json:"isDefaultTeam"`
	// New organization members will be granted this role on this team
	DefaultMemberRole TeamMemberRole `json:"defaultMemberRole"`
	// The name of the team
	Name string `json:"name"`
	// Whether or not team members can create new pipelines in this team
	MembersCanCreatePipelines bool `json:"membersCanCreatePipelines"`
	// The privacy setting for this team
	Privacy TeamPrivacy `json:"privacy"`
	// The slug of the team
	Slug string `json:"slug"`
	// The public UUID for this team
	Uuid string `json:"uuid"`
}

// GetDescription returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Description, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetDescription() string {
	return v.Description
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetId() string {
	return v.Id
}

// GetIsDefaultTeam returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetIsDefaultTeam() bool {
	return v.IsDefaultTeam
}

// GetDefaultMemberRole returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetDefaultMemberRole() TeamMemberRole {
	return v.DefaultMemberRole
}

// GetName returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Name, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetName() string {
	return v.Name
}

// GetMembersCanCreatePipelines returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetMembersCanCreatePipelines() bool {
	return v.MembersCanCreatePipelines
}

// GetPrivacy returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Privacy, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetPrivacy() TeamPrivacy {
	return v.Privacy
}

// GetSlug returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Slug, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetSlug() string {
	return v.Slug
}

// GetUuid returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Uuid, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetUuid() string {
	return v.Uuid
}

// updatePipelineResponse is returned by updatePipeline on success.
type updatePipelineResponse struct {
	// Change the settings for a pipeline.
	PipelineUpdate updatePipelinePipelineUpdatePipelineUpdatePayload `json:"pipelineUpdate"`
}

// GetPipelineUpdate returns updatePipelineResponse.PipelineUpdate, and is useful for accessing the field via an interface.
func (v *updatePipelineResponse) GetPipelineUpdate() updatePipelinePipelineUpdatePipelineUpdatePayload {
	return v.PipelineUpdate
}

// updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayload includes the requested fields of the GraphQL type PipelineScheduleUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineScheduleUpdate.
type updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayload struct {
	PipelineSchedule updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule `json:"pipelineSchedule"`
}

// GetPipelineSchedule returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayload.PipelineSchedule, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayload) GetPipelineSchedule() updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule {
	return v.PipelineSchedule
}

// updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule includes the requested fields of the GraphQL type PipelineSchedule.
// The GraphQL type's documentation follows.
//
// A schedule of when a build should automatically triggered for a Pipeline
type updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule struct {
	PipelineScheduleValues `json:"-"`
}

// GetId returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Id, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetId() string {
	return v.PipelineScheduleValues.Id
}

// GetUuid returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Uuid, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetUuid() string {
	return v.PipelineScheduleValues.Uuid
}

// GetLabel returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Label, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetLabel() *string {
	return v.PipelineScheduleValues.Label
}

// GetCronline returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Cronline, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetCronline() *string {
	return v.PipelineScheduleValues.Cronline
}

// GetMessage returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Message, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetMessage() *string {
	return v.PipelineScheduleValues.Message
}

// GetCommit returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Commit, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetCommit() *string {
	return v.PipelineScheduleValues.Commit
}

// GetBranch returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Branch, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetBranch() *string {
	return v.PipelineScheduleValues.Branch
}

// GetEnv returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Env, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetEnv() []*string {
	return v.PipelineScheduleValues.Env
}

// GetEnabled returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Enabled, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetEnabled() bool {
	return v.PipelineScheduleValues.Enabled
}

// GetPipeline returns updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule.Pipeline, and is useful for accessing the field via an interface.
func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) GetPipeline() PipelineScheduleValuesPipeline {
	return v.PipelineScheduleValues.Pipeline
}

func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule
		graphql.NoUnmarshalJSON
	}
	firstPass.updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PipelineScheduleValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalupdatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Label *string `json:"label"`

	Cronline *string `json:"cronline"`

	Message *string `json:"message"`

	Commit *string `json:"commit"`

	Branch *string `json:"branch"`

	Env []*string `json:"env"`

	Enabled bool `json:"enabled"`

	Pipeline PipelineScheduleValuesPipeline `json:"pipeline"`
}

func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule) __premarshalJSON() (*__premarshalupdatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule, error) {
	var retval __premarshalupdatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayloadPipelineSchedule

	retval.Id = v.PipelineScheduleValues.Id
	retval.Uuid = v.PipelineScheduleValues.Uuid
	retval.Label = v.PipelineScheduleValues.Label
	retval.Cronline = v.PipelineScheduleValues.Cronline
	retval.Message = v.PipelineScheduleValues.Message
	retval.Commit = v.PipelineScheduleValues.Commit
	retval.Branch = v.PipelineScheduleValues.Branch
	retval.Env = v.PipelineScheduleValues.Env
	retval.Enabled = v.PipelineScheduleValues.Enabled
	retval.Pipeline = v.PipelineScheduleValues.Pipeline
	return &retval, nil
}

// updatePipelineScheduleResponse is returned by updatePipelineSchedule on success.
type updatePipelineScheduleResponse struct {
	// Update a scheduled build on pipeline.
	PipelineScheduleUpdate updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayload `json:"pipelineScheduleUpdate"`
}

// GetPipelineScheduleUpdate returns updatePipelineScheduleResponse.PipelineScheduleUpdate, and is useful for accessing the field via an interface.
func (v *updatePipelineScheduleResponse) GetPipelineScheduleUpdate() updatePipelineSchedulePipelineScheduleUpdatePipelineScheduleUpdatePayload {
	return v.PipelineScheduleUpdate
}

// updateTeamMemberResponse is returned by updateTeamMember on success.
type updateTeamMemberResponse struct {
	// Update a user's role in a team.
	TeamMemberUpdate updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayload `json:"teamMemberUpdate"`
}

// GetTeamMemberUpdate returns updateTeamMemberResponse.TeamMemberUpdate, and is useful for accessing the field via an interface.
func (v *updateTeamMemberResponse) GetTeamMemberUpdate() updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayload {
	return v.TeamMemberUpdate
}

// updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayload includes the requested fields of the GraphQL type TeamMemberUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of TeamMemberUpdate.
type updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayload struct {
	TeamMember updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember `json:"teamMember"`
}

// GetTeamMember returns updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayload.TeamMember, and is useful for accessing the field via an interface.
func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayload) GetTeamMember() updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember {
	return v.TeamMember
}

// updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember includes the requested fields of the GraphQL type TeamMember.
// The GraphQL type's documentation follows.
//
// An member of a team
type updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember struct {
	TeamMemberValues `json:"-"`
}

// GetId returns updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember.Id, and is useful for accessing the field via an interface.
func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember) GetId() string {
	return v.TeamMemberValues.Id
}

// GetUuid returns updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember.Uuid, and is useful for accessing the field via an interface.
func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember) GetUuid() string {
	return v.TeamMemberValues.Uuid
}

// GetTeam returns updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember.Team, and is useful for accessing the field via an interface.
func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember) GetTeam() TeamMemberValuesTeam {
	return v.TeamMemberValues.Team
}

// GetUser returns updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember.User, and is useful for accessing the field via an interface.
func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember) GetUser() TeamMemberValuesUser {
	return v.TeamMemberValues.User
}

// GetRole returns updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember.Role, and is useful for accessing the field via an interface.
func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember) GetRole() TeamMemberRole {
	return v.TeamMemberValues.Role
}

func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember
		graphql.NoUnmarshalJSON
	}
	firstPass.updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.TeamMemberValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalupdateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Team TeamMemberValuesTeam `json:"team"`

	User TeamMemberValuesUser `json:"user"`

	Role TeamMemberRole `json:"role"`
}

func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember) __premarshalJSON() (*__premarshalupdateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember, error) {
	var retval __premarshalupdateTeamMemberTeamMemberUpdateTeamMemberUpdatePayloadTeamMember

	retval.Id = v.TeamMemberValues.Id
	retval.Uuid = v.TeamMemberValues.Uuid
	retval.Team = v.TeamMemberValues.Team
	retval.User = v.TeamMemberValues.User
	retval.Role = v.TeamMemberValues.Role
	return &retval, nil
}

// The query or mutation executed by archivePipeline.
const archivePipeline_Operation = `
mutation archivePipeline ($id: ID!) {
	pipelineArchive(input: {id:$id}) {
		clientMutationId
	}
}
`

func archivePipeline(
	client graphql.Client,
	id string,
) (*archivePipelineResponse, error) {
	req := &graphql.Request{
		OpName: "archivePipeline",
		Query:  archivePipeline_Operation,
		Variables: &__archivePipelineInput{
			Id: id,
		},
	}
	var err error

	var data archivePipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createAgentToken.
const createAgentToken_Operation = `
mutation createAgentToken ($organizationId: ID!, $description: String) {
	agentTokenCreate(input: {organizationID:$organizationId,description:$description}) {
		tokenValue
		agentTokenEdge {
			node {
				id
				description
				uuid
			}
		}
	}
}
`

func createAgentToken(
	client graphql.Client,
	organizationId string,
	description *string,
) (*createAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "createAgentToken",
		Query:  createAgentToken_Operation,
		Variables: &__createAgentTokenInput{
			OrganizationId: organizationId,
			Description:    description,
		},
	}
	var err error

	var data createAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createCluster.
const createCluster_Operation = `
mutation createCluster ($organizationId: ID!, $name: String!, $description: String, $emoji: String, $color: String) {
	clusterCreate(input: {organizationId:$organizationId,name:$name,description:$description,emoji:$emoji,color:$color}) {
		clientMutationId
		cluster {
			... ClusterFields
		}
	}
}
fragment ClusterFields on Cluster {
	id
	uuid
	name
	description
	emoji
	color
}
`

func createCluster(
	client graphql.Client,
	organizationId string,
	name string,
	description *string,
	emoji *string,
	color *string,
) (*createClusterResponse, error) {
	req := &graphql.Request{
		OpName: "createCluster",
		Query:  createCluster_Operation,
		Variables: &__createClusterInput{
			OrganizationId: organizationId,
			Name:           name,
			Description:    description,
			Emoji:          emoji,
			Color:          color,
		},
	}
	var err error

	var data createClusterResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createClusterAgentToken.
const createClusterAgentToken_Operation = `
mutation createClusterAgentToken ($organizationId: ID!, $clusterId: ID!, $description: String!) {
	clusterAgentTokenCreate(input: {organizationId:$organizationId,clusterId:$clusterId,description:$description}) {
		clusterAgentToken {
			... ClusterAgentTokenValues
		}
		tokenValue
	}
}
fragment ClusterAgentTokenValues on ClusterToken {
	cluster {
		id
		uuid
	}
	description
	id
	uuid
}
`

func createClusterAgentToken(
	client graphql.Client,
	organizationId string,
	clusterId string,
	description string,
) (*createClusterAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "createClusterAgentToken",
		Query:  createClusterAgentToken_Operation,
		Variables: &__createClusterAgentTokenInput{
			OrganizationId: organizationId,
			ClusterId:      clusterId,
			Description:    description,
		},
	}
	var err error

	var data createClusterAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createClusterQueue.
const createClusterQueue_Operation = `
mutation createClusterQueue ($organizationId: ID!, $clusterId: ID!, $key: String!, $description: String) {
	clusterQueueCreate(input: {organizationId:$organizationId,clusterId:$clusterId,key:$key,description:$description}) {
		clusterQueue {
			... ClusterQueueValues
		}
	}
}
fragment ClusterQueueValues on ClusterQueue {
	id
	uuid
	key
	description
	cluster {
		id
		uuid
	}
}
`

func createClusterQueue(
	client graphql.Client,
	organizationId string,
	clusterId string,
	key string,
	description *string,
) (*createClusterQueueResponse, error) {
	req := &graphql.Request{
		OpName: "createClusterQueue",
		Query:  createClusterQueue_Operation,
		Variables: &__createClusterQueueInput{
			OrganizationId: organizationId,
			ClusterId:      clusterId,
			Key:            key,
			Description:    description,
		},
	}
	var err error

	var data createClusterQueueResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createPipelineSchedule.
const createPipelineSchedule_Operation = `
mutation createPipelineSchedule ($pipelineId: ID!, $label: String, $cronline: String, $message: String, $commit: String, $branch: String, $env: String, $enabled: Boolean) {
	pipelineScheduleCreate(input: {pipelineID:$pipelineId,label:$label,cronline:$cronline,message:$message,commit:$commit,branch:$branch,env:$env,enabled:$enabled}) {
		pipeline {
			id
		}
		pipelineScheduleEdge {
			node {
				... PipelineScheduleValues
			}
		}
	}
}
fragment PipelineScheduleValues on PipelineSchedule {
	id
	uuid
	label
	cronline
	message
	commit
	branch
	env
	enabled
	pipeline {
		id
	}
}
`

func createPipelineSchedule(
	client graphql.Client,
	pipelineId string,
	label *string,
	cronline *string,
	message *string,
	commit *string,
	branch *string,
	env *string,
	enabled bool,
) (*createPipelineScheduleResponse, error) {
	req := &graphql.Request{
		OpName: "createPipelineSchedule",
		Query:  createPipelineSchedule_Operation,
		Variables: &__createPipelineScheduleInput{
			PipelineId: pipelineId,
			Label:      label,
			Cronline:   cronline,
			Message:    message,
			Commit:     commit,
			Branch:     branch,
			Env:        env,
			Enabled:    enabled,
		},
	}
	var err error

	var data createPipelineScheduleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createTeamMember.
const createTeamMember_Operation = `
mutation createTeamMember ($teamID: ID!, $userID: ID!, $role: TeamMemberRole) {
	teamMemberCreate(input: {teamID:$teamID,userID:$userID,role:$role}) {
		teamMemberEdge {
			node {
				... TeamMemberValues
			}
		}
	}
}
fragment TeamMemberValues on TeamMember {
	id
	uuid
	team {
		id
	}
	user {
		id
	}
	role
}
`

func createTeamMember(
	client graphql.Client,
	teamID string,
	userID string,
	role TeamMemberRole,
) (*createTeamMemberResponse, error) {
	req := &graphql.Request{
		OpName: "createTeamMember",
		Query:  createTeamMember_Operation,
		Variables: &__createTeamMemberInput{
			TeamID: teamID,
			UserID: userID,
			Role:   role,
		},
	}
	var err error

	var data createTeamMemberResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteCluster.
const deleteCluster_Operation = `
mutation deleteCluster ($organizationId: ID!, $id: ID!) {
	clusterDelete(input: {organizationId:$organizationId,id:$id}) {
		clientMutationId
	}
}
`

func deleteCluster(
	client graphql.Client,
	organizationId string,
	id string,
) (*deleteClusterResponse, error) {
	req := &graphql.Request{
		OpName: "deleteCluster",
		Query:  deleteCluster_Operation,
		Variables: &__deleteClusterInput{
			OrganizationId: organizationId,
			Id:             id,
		},
	}
	var err error

	var data deleteClusterResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteClusterQueue.
const deleteClusterQueue_Operation = `
mutation deleteClusterQueue ($organizationId: ID!, $id: ID!) {
	clusterQueueDelete(input: {organizationId:$organizationId,id:$id}) {
		clientMutationId
	}
}
`

func deleteClusterQueue(
	client graphql.Client,
	organizationId string,
	id string,
) (*deleteClusterQueueResponse, error) {
	req := &graphql.Request{
		OpName: "deleteClusterQueue",
		Query:  deleteClusterQueue_Operation,
		Variables: &__deleteClusterQueueInput{
			OrganizationId: organizationId,
			Id:             id,
		},
	}
	var err error

	var data deleteClusterQueueResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deletePipelineSchedule.
const deletePipelineSchedule_Operation = `
mutation deletePipelineSchedule ($id: ID!) {
	pipelineScheduleDelete(input: {id:$id}) {
		deletedPipelineScheduleID
	}
}
`

// The query or mutation executed by deletePipeline.
const deletePipeline_Operation = `
mutation deletePipeline ($id: ID!) {
	pipelineDelete(input: {id:$id}) {
		clientMutationId
	}
}
`

func deletePipelineSchedule(
	client graphql.Client,
	id string,
) (*deletePipelineScheduleResponse, error) {
	req := &graphql.Request{
		OpName: "deletePipelineSchedule",
		Query:  deletePipelineSchedule_Operation,
		Variables: &__deletePipelineScheduleInput{
			Id: id,
		},
	}
	var err error

	var data deletePipelineScheduleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func deletePipeline(
	client graphql.Client,
	id string,
) (*deletePipelineResponse, error) {
	req := &graphql.Request{
		OpName: "deletePipeline",
		Query:  deletePipeline_Operation,
		Variables: &__deletePipelineInput{
			Id: id,
		},
	}
	var err error

	var data deletePipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteTeamMember.
const deleteTeamMember_Operation = `
mutation deleteTeamMember ($id: ID!) {
	teamMemberDelete(input: {id:$id}) {
		clientMutationId
	}
}
`

func deleteTeamMember(
	client graphql.Client,
	id string,
) (*deleteTeamMemberResponse, error) {
	req := &graphql.Request{
		OpName: "deleteTeamMember",
		Query:  deleteTeamMember_Operation,
		Variables: &__deleteTeamMemberInput{
			Id: id,
		},
	}
	var err error

	var data deleteTeamMemberResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getAgentToken.
const getAgentToken_Operation = `
query getAgentToken ($slug: ID!) {
	agentToken(slug: $slug) {
		id
		description
		uuid
	}
}
`

func getAgentToken(
	client graphql.Client,
	slug string,
) (*getAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "getAgentToken",
		Query:  getAgentToken_Operation,
		Variables: &__getAgentTokenInput{
			Slug: slug,
		},
	}
	var err error

	var data getAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getCluster.
const getCluster_Operation = `
query getCluster ($orgSlug: ID!, $id: ID!) {
	organization(slug: $orgSlug) {
		cluster(id: $id) {
			... ClusterFields
		}
	}
}
fragment ClusterFields on Cluster {
	id
	uuid
	name
	description
	emoji
	color
}
`

func getCluster(
	client graphql.Client,
	orgSlug string,
	id string,
) (*getClusterResponse, error) {
	req := &graphql.Request{
		OpName: "getCluster",
		Query:  getCluster_Operation,
		Variables: &__getClusterInput{
			OrgSlug: orgSlug,
			Id:      id,
		},
	}
	var err error

	var data getClusterResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getClusterAgentTokens.
const getClusterAgentTokens_Operation = `
query getClusterAgentTokens ($orgSlug: ID!, $id: ID!) {
	organization(slug: $orgSlug) {
		cluster(id: $id) {
			agentTokens(first: 50) {
				edges {
					node {
						... ClusterAgentTokenValues
					}
				}
			}
		}
	}
}
fragment ClusterAgentTokenValues on ClusterToken {
	cluster {
		id
		uuid
	}
	description
	id
	uuid
}
`

func getClusterAgentTokens(
	client graphql.Client,
	orgSlug string,
	id string,
) (*getClusterAgentTokensResponse, error) {
	req := &graphql.Request{
		OpName: "getClusterAgentTokens",
		Query:  getClusterAgentTokens_Operation,
		Variables: &__getClusterAgentTokensInput{
			OrgSlug: orgSlug,
			Id:      id,
		},
	}
	var err error

	var data getClusterAgentTokensResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getClusterByName.
const getClusterByName_Operation = `
query getClusterByName ($orgSlug: ID!, $cursor: String) {
	organization(slug: $orgSlug) {
		clusters(order: NAME, first: 50, after: $cursor) {
			pageInfo {
				endCursor
				hasNextPage
			}
			edges {
				node {
					... ClusterFields
				}
			}
		}
	}
}
fragment ClusterFields on Cluster {
	id
	uuid
	name
	description
	emoji
	color
}
`

func getClusterByName(
	client graphql.Client,
	orgSlug string,
	cursor *string,
) (*getClusterByNameResponse, error) {
	req := &graphql.Request{
		OpName: "getClusterByName",
		Query:  getClusterByName_Operation,
		Variables: &__getClusterByNameInput{
			OrgSlug: orgSlug,
			Cursor:  cursor,
		},
	}
	var err error

	var data getClusterByNameResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getClusterQueues.
const getClusterQueues_Operation = `
query getClusterQueues ($orgSlug: ID!, $id: ID!) {
	organization(slug: $orgSlug) {
		cluster(id: $id) {
			queues(first: 50) {
				edges {
					node {
						... ClusterQueueValues
					}
				}
			}
		}
	}
}
fragment ClusterQueueValues on ClusterQueue {
	id
	uuid
	key
	description
	cluster {
		id
		uuid
	}
}
`

func getClusterQueues(
	client graphql.Client,
	orgSlug string,
	id string,
) (*getClusterQueuesResponse, error) {
	req := &graphql.Request{
		OpName: "getClusterQueues",
		Query:  getClusterQueues_Operation,
		Variables: &__getClusterQueuesInput{
			OrgSlug: orgSlug,
			Id:      id,
		},
	}
	var err error

	var data getClusterQueuesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getNode.
const getNode_Operation = `
query getNode ($id: ID!) {
	node(id: $id) {
		__typename
		... on TeamMember {
			... TeamMemberValues
		}
	}
}
fragment TeamMemberValues on TeamMember {
	id
	uuid
	team {
		id
	}
	user {
		id
	}
	role
}
`

func getNode(
	client graphql.Client,
	id string,
) (*getNodeResponse, error) {
	req := &graphql.Request{
		OpName: "getNode",
		Query:  getNode_Operation,
		Variables: &__getNodeInput{
			Id: id,
		},
	}
	var err error

	var data getNodeResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getOrganization.
const getOrganization_Operation = `
query getOrganization ($slug: ID!) {
	organization(slug: $slug) {
		allowedApiIpAddresses
		id
		uuid
	}
}
`

func getOrganization(
	client graphql.Client,
	slug string,
) (*getOrganizationResponse, error) {
	req := &graphql.Request{
		OpName: "getOrganization",
		Query:  getOrganization_Operation,
		Variables: &__getOrganizationInput{
			Slug: slug,
		},
	}
	var err error

	var data getOrganizationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getPipeline.
const getPipeline_Operation = `
query getPipeline ($slug: ID!) {
	pipeline(slug: $slug) {
		id
		defaultBranch
		description
		name
		repository {
			url
		}
		slug
		webhookURL
	}
}
`

func getPipeline(
	client graphql.Client,
	slug string,
) (*getPipelineResponse, error) {
	req := &graphql.Request{
		OpName: "getPipeline",
		Query:  getPipeline_Operation,
		Variables: &__getPipelineInput{
			Slug: slug,
		},
	}
	var err error

	var data getPipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getPipelineSchedule.
const getPipelineSchedule_Operation = `
query getPipelineSchedule ($id: ID!) {
	node(id: $id) {
		__typename
		... on PipelineSchedule {
			... PipelineScheduleValues
		}
	}
}
fragment PipelineScheduleValues on PipelineSchedule {
	id
	uuid
	label
	cronline
	message
	commit
	branch
	env
	enabled
	pipeline {
		id
	}
}
`

func getPipelineSchedule(
	client graphql.Client,
	id string,
) (*getPipelineScheduleResponse, error) {
	req := &graphql.Request{
		OpName: "getPipelineSchedule",
		Query:  getPipelineSchedule_Operation,
		Variables: &__getPipelineScheduleInput{
			Id: id,
		},
	}
	var err error

	var data getPipelineScheduleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getPipelineScheduleBySlug.
const getPipelineScheduleBySlug_Operation = `
query getPipelineScheduleBySlug ($slug: ID!) {
	pipelineSchedule(slug: $slug) {
		... PipelineScheduleValues
	}
}
fragment PipelineScheduleValues on PipelineSchedule {
	id
	uuid
	label
	cronline
	message
	commit
	branch
	env
	enabled
	pipeline {
		id
	}
}
`

func getPipelineScheduleBySlug(
	client graphql.Client,
	slug string,
) (*getPipelineScheduleBySlugResponse, error) {
	req := &graphql.Request{
		OpName: "getPipelineScheduleBySlug",
		Query:  getPipelineScheduleBySlug_Operation,
		Variables: &__getPipelineScheduleBySlugInput{
			Slug: slug,
		},
	}
	var err error

	var data getPipelineScheduleBySlugResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getTeam.
const getTeam_Operation = `
query getTeam ($slug: ID!) {
	team(slug: $slug) {
		defaultMemberRole
		description
		id
		isDefaultTeam
		membersCanCreatePipelines
		name
		privacy
		slug
		uuid
	}
}
`

func getTeam(
	client graphql.Client,
	slug string,
) (*getTeamResponse, error) {
	req := &graphql.Request{
		OpName: "getTeam",
		Query:  getTeam_Operation,
		Variables: &__getTeamInput{
			Slug: slug,
		},
	}
	var err error

	var data getTeamResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by revokeAgentToken.
const revokeAgentToken_Operation = `
mutation revokeAgentToken ($id: ID!, $reason: String!) {
	agentTokenRevoke(input: {id:$id,reason:$reason}) {
		agentToken {
			id
			description
			uuid
		}
	}
}
`

func revokeAgentToken(
	client graphql.Client,
	id string,
	reason string,
) (*revokeAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "revokeAgentToken",
		Query:  revokeAgentToken_Operation,
		Variables: &__revokeAgentTokenInput{
			Id:     id,
			Reason: reason,
		},
	}
	var err error

	var data revokeAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by revokeClusterAgentToken.
const revokeClusterAgentToken_Operation = `
mutation revokeClusterAgentToken ($organizationId: ID!, $id: ID!) {
	clusterAgentTokenRevoke(input: {organizationId:$organizationId,id:$id}) {
		deletedClusterAgentTokenId
	}
}
`

func revokeClusterAgentToken(
	client graphql.Client,
	organizationId string,
	id string,
) (*revokeClusterAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "revokeClusterAgentToken",
		Query:  revokeClusterAgentToken_Operation,
		Variables: &__revokeClusterAgentTokenInput{
			OrganizationId: organizationId,
			Id:             id,
		},
	}
	var err error

	var data revokeClusterAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by setApiIpAddresses.
const setApiIpAddresses_Operation = `
mutation setApiIpAddresses ($organizationID: ID!, $ipAddresses: String!) {
	organizationApiIpAllowlistUpdate(input: {organizationID:$organizationID,ipAddresses:$ipAddresses}) {
		organization {
			allowedApiIpAddresses
			id
			uuid
		}
	}
}
`

func setApiIpAddresses(
	client graphql.Client,
	organizationID string,
	ipAddresses string,
) (*setApiIpAddressesResponse, error) {
	req := &graphql.Request{
		OpName: "setApiIpAddresses",
		Query:  setApiIpAddresses_Operation,
		Variables: &__setApiIpAddressesInput{
			OrganizationID: organizationID,
			IpAddresses:    ipAddresses,
		},
	}
	var err error

	var data setApiIpAddressesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateCluster.
const updateCluster_Operation = `
mutation updateCluster ($organizationId: ID!, $id: ID!, $name: String, $description: String, $emoji: String, $color: String) {
	clusterUpdate(input: {organizationId:$organizationId,id:$id,name:$name,description:$description,emoji:$emoji,color:$color}) {
		clientMutationId
		cluster {
			... ClusterFields
		}
	}
}
fragment ClusterFields on Cluster {
	id
	uuid
	name
	description
	emoji
	color
}
`

func updateCluster(
	client graphql.Client,
	organizationId string,
	id string,
	name string,
	description *string,
	emoji *string,
	color *string,
) (*updateClusterResponse, error) {
	req := &graphql.Request{
		OpName: "updateCluster",
		Query:  updateCluster_Operation,
		Variables: &__updateClusterInput{
			OrganizationId: organizationId,
			Id:             id,
			Name:           name,
			Description:    description,
			Emoji:          emoji,
			Color:          color,
		},
	}
	var err error

	var data updateClusterResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateClusterAgentToken.
const updateClusterAgentToken_Operation = `
mutation updateClusterAgentToken ($organizationId: ID!, $id: ID!, $description: String!) {
	clusterAgentTokenUpdate(input: {organizationId:$organizationId,id:$id,description:$description}) {
		clusterAgentToken {
			... ClusterAgentTokenValues
		}
	}
}
fragment ClusterAgentTokenValues on ClusterToken {
	cluster {
		id
		uuid
	}
	description
	id
	uuid
}
`

func updateClusterAgentToken(
	client graphql.Client,
	organizationId string,
	id string,
	description string,
) (*updateClusterAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "updateClusterAgentToken",
		Query:  updateClusterAgentToken_Operation,
		Variables: &__updateClusterAgentTokenInput{
			OrganizationId: organizationId,
			Id:             id,
			Description:    description,
		},
	}
	var err error

	var data updateClusterAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateClusterQueue.
const updateClusterQueue_Operation = `
mutation updateClusterQueue ($organizationId: ID!, $id: ID!, $description: String) {
	clusterQueueUpdate(input: {organizationId:$organizationId,id:$id,description:$description}) {
		clusterQueue {
			... ClusterQueueValues
		}
	}
}
fragment ClusterQueueValues on ClusterQueue {
	id
	uuid
	key
	description
	cluster {
		id
		uuid
	}
}
`

func updateClusterQueue(
	client graphql.Client,
	organizationId string,
	id string,
	description *string,
) (*updateClusterQueueResponse, error) {
	req := &graphql.Request{
		OpName: "updateClusterQueue",
		Query:  updateClusterQueue_Operation,
		Variables: &__updateClusterQueueInput{
			OrganizationId: organizationId,
			Id:             id,
			Description:    description,
		},
	}
	var err error

	var data updateClusterQueueResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updatePipeline.
const updatePipeline_Operation = `
mutation updatePipeline ($input: PipelineUpdateInput!) {
	pipelineUpdate(input: $input) {
		pipeline {
			id
			allowRebuilds
			branchConfiguration
			cancelIntermediateBuilds
			cancelIntermediateBuildsBranchFilter
			cluster {
				id
			}
			defaultBranch
			defaultTimeoutInMinutes
			maximumTimeoutInMinutes
			description
			name
			repository {
				url
			}
			skipIntermediateBuilds
			skipIntermediateBuildsBranchFilter
			slug
			steps {
				yaml
			}
			tags {
				label
			}
			teams(first: 50) {
				edges {
					node {
						accessLevel
						id
						team {
							description
							id
							isDefaultTeam
							defaultMemberRole
							name
							membersCanCreatePipelines
							privacy
							slug
							uuid
						}
					}
				}
			}
			webhookURL
		}
	}
}
`

func updatePipeline(
	client graphql.Client,
	input PipelineUpdateInput,
) (*updatePipelineResponse, error) {
	req := &graphql.Request{
		OpName: "updatePipeline",
		Query:  updatePipeline_Operation,
		Variables: &__updatePipelineInput{
			Input: input,
		},
	}
	var err error

	var data updatePipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updatePipelineSchedule.
const updatePipelineSchedule_Operation = `
mutation updatePipelineSchedule ($input: PipelineScheduleUpdateInput!) {
	pipelineScheduleUpdate(input: $input) {
		pipelineSchedule {
			... PipelineScheduleValues
		}
	}
}
fragment PipelineScheduleValues on PipelineSchedule {
	id
	uuid
	label
	cronline
	message
	commit
	branch
	env
	enabled
	pipeline {
		id
	}
}
`

func updatePipelineSchedule(
	client graphql.Client,
	input PipelineScheduleUpdateInput,
) (*updatePipelineScheduleResponse, error) {
	req := &graphql.Request{
		OpName: "updatePipelineSchedule",
		Query:  updatePipelineSchedule_Operation,
		Variables: &__updatePipelineScheduleInput{
			Input: input,
		},
	}
	var err error

	var data updatePipelineScheduleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateTeamMember.
const updateTeamMember_Operation = `
mutation updateTeamMember ($id: ID!, $role: TeamMemberRole!) {
	teamMemberUpdate(input: {id:$id,role:$role}) {
		teamMember {
			... TeamMemberValues
		}
	}
}
fragment TeamMemberValues on TeamMember {
	id
	uuid
	team {
		id
	}
	user {
		id
	}
	role
}
`

func updateTeamMember(
	client graphql.Client,
	id string,
	role TeamMemberRole,
) (*updateTeamMemberResponse, error) {
	req := &graphql.Request{
		OpName: "updateTeamMember",
		Query:  updateTeamMember_Operation,
		Variables: &__updateTeamMemberInput{
			Id:   id,
			Role: role,
		},
	}
	var err error

	var data updateTeamMemberResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}
