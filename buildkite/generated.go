// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package buildkite

import (
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// All the possible build retention periods, depending on your billing plan
type BuildRetentionPeriods string

const (
	// 30 days
	BuildRetentionPeriodsDays30 BuildRetentionPeriods = "DAYS_30"
	// 60 days
	BuildRetentionPeriodsDays60 BuildRetentionPeriods = "DAYS_60"
	// 90 days
	BuildRetentionPeriodsDays90 BuildRetentionPeriods = "DAYS_90"
	// 6 months
	BuildRetentionPeriodsMonths6 BuildRetentionPeriods = "MONTHS_6"
	// 12 months
	BuildRetentionPeriodsMonths12 BuildRetentionPeriods = "MONTHS_12"
	// 18 months
	BuildRetentionPeriodsMonths18 BuildRetentionPeriods = "MONTHS_18"
	// 2 years
	BuildRetentionPeriodsYears2 BuildRetentionPeriods = "YEARS_2"
)

// ClusterAgentTokenValues includes the GraphQL fields of ClusterToken requested by the fragment ClusterAgentTokenValues.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type ClusterAgentTokenValues struct {
	Cluster ClusterAgentTokenValuesCluster `json:"cluster"`
	// A description about what this cluster agent token is used for
	Description string `json:"description"`
	Id          string `json:"id"`
	// The public UUID for this cluster token
	Uuid string `json:"uuid"`
}

// GetCluster returns ClusterAgentTokenValues.Cluster, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValues) GetCluster() ClusterAgentTokenValuesCluster { return v.Cluster }

// GetDescription returns ClusterAgentTokenValues.Description, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValues) GetDescription() string { return v.Description }

// GetId returns ClusterAgentTokenValues.Id, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValues) GetId() string { return v.Id }

// GetUuid returns ClusterAgentTokenValues.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValues) GetUuid() string { return v.Uuid }

// ClusterAgentTokenValuesCluster includes the requested fields of the GraphQL type Cluster.
type ClusterAgentTokenValuesCluster struct {
	Id string `json:"id"`
	// The public UUID for this cluster
	Uuid string `json:"uuid"`
}

// GetId returns ClusterAgentTokenValuesCluster.Id, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValuesCluster) GetId() string { return v.Id }

// GetUuid returns ClusterAgentTokenValuesCluster.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterAgentTokenValuesCluster) GetUuid() string { return v.Uuid }

// ClusterFields includes the GraphQL fields of Cluster requested by the fragment ClusterFields.
type ClusterFields struct {
	Id string `json:"id"`
	// The public UUID for this cluster
	Uuid string `json:"uuid"`
	// Name of the cluster
	Name string `json:"name"`
	// Description of the cluster
	Description *string `json:"description"`
	// Emoji for the cluster using Buildkite emoji syntax
	Emoji *string `json:"emoji"`
	// Color hex code for the cluster
	Color *string `json:"color"`
}

// GetId returns ClusterFields.Id, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetId() string { return v.Id }

// GetUuid returns ClusterFields.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetUuid() string { return v.Uuid }

// GetName returns ClusterFields.Name, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetName() string { return v.Name }

// GetDescription returns ClusterFields.Description, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetDescription() *string { return v.Description }

// GetEmoji returns ClusterFields.Emoji, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetEmoji() *string { return v.Emoji }

// GetColor returns ClusterFields.Color, and is useful for accessing the field via an interface.
func (v *ClusterFields) GetColor() *string { return v.Color }

// ClusterQueueValues includes the GraphQL fields of ClusterQueue requested by the fragment ClusterQueueValues.
type ClusterQueueValues struct {
	Id string `json:"id"`
	// The public UUID for this cluster queue
	Uuid        string                    `json:"uuid"`
	Key         string                    `json:"key"`
	Description *string                   `json:"description"`
	Cluster     ClusterQueueValuesCluster `json:"cluster"`
}

// GetId returns ClusterQueueValues.Id, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetId() string { return v.Id }

// GetUuid returns ClusterQueueValues.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetUuid() string { return v.Uuid }

// GetKey returns ClusterQueueValues.Key, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetKey() string { return v.Key }

// GetDescription returns ClusterQueueValues.Description, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetDescription() *string { return v.Description }

// GetCluster returns ClusterQueueValues.Cluster, and is useful for accessing the field via an interface.
func (v *ClusterQueueValues) GetCluster() ClusterQueueValuesCluster { return v.Cluster }

// ClusterQueueValuesCluster includes the requested fields of the GraphQL type Cluster.
type ClusterQueueValuesCluster struct {
	Id string `json:"id"`
	// The public UUID for this cluster
	Uuid string `json:"uuid"`
}

// GetId returns ClusterQueueValuesCluster.Id, and is useful for accessing the field via an interface.
func (v *ClusterQueueValuesCluster) GetId() string { return v.Id }

// GetUuid returns ClusterQueueValuesCluster.Uuid, and is useful for accessing the field via an interface.
func (v *ClusterQueueValuesCluster) GetUuid() string { return v.Uuid }

// The access levels that can be assigned to a pipeline
type PipelineAccessLevels string

const (
	// Allows edits, builds and reads
	PipelineAccessLevelsManageBuildAndRead PipelineAccessLevels = "MANAGE_BUILD_AND_READ"
	// Allows builds and read only
	PipelineAccessLevelsBuildAndRead PipelineAccessLevels = "BUILD_AND_READ"
	// Read only - no builds or edits
	PipelineAccessLevelsReadOnly PipelineAccessLevels = "READ_ONLY"
)

// Repository information for a pipeline
type PipelineRepositoryInput struct {
	// Repository information for a pipeline
	Url string `json:"url"`
}

// GetUrl returns PipelineRepositoryInput.Url, and is useful for accessing the field via an interface.
func (v *PipelineRepositoryInput) GetUrl() string { return v.Url }

// Step definition for a pipeline
type PipelineStepsInput struct {
	// Step definition for a pipeline
	Yaml string `json:"yaml"`
}

// GetYaml returns PipelineStepsInput.Yaml, and is useful for accessing the field via an interface.
func (v *PipelineStepsInput) GetYaml() string { return v.Yaml }

// Tag associated with a pipeline
type PipelineTagInput struct {
	// Tag associated with a pipeline
	Label string `json:"label"`
}

// GetLabel returns PipelineTagInput.Label, and is useful for accessing the field via an interface.
func (v *PipelineTagInput) GetLabel() string { return v.Label }

// Autogenerated input type of PipelineUpdate
type PipelineUpdateInput struct {
	// Autogenerated input type of PipelineUpdate
	ClientMutationId string `json:"clientMutationId"`
	// Autogenerated input type of PipelineUpdate
	Id string `json:"id"`
	// Autogenerated input type of PipelineUpdate
	Name string `json:"name"`
	// Autogenerated input type of PipelineUpdate
	Description string `json:"description"`
	// Autogenerated input type of PipelineUpdate
	Emoji string `json:"emoji"`
	// Autogenerated input type of PipelineUpdate
	Color string `json:"color"`
	// Autogenerated input type of PipelineUpdate
	Visibility PipelineVisibility `json:"visibility,omitempty"`
	// Autogenerated input type of PipelineUpdate
	Repository PipelineRepositoryInput `json:"repository"`
	// Autogenerated input type of PipelineUpdate
	Steps PipelineStepsInput `json:"steps"`
	// Autogenerated input type of PipelineUpdate
	DefaultBranch string `json:"defaultBranch"`
	// Autogenerated input type of PipelineUpdate
	NextBuildNumber int `json:"nextBuildNumber,omitempty"`
	// Autogenerated input type of PipelineUpdate
	SkipIntermediateBuilds bool `json:"skipIntermediateBuilds"`
	// Autogenerated input type of PipelineUpdate
	SkipIntermediateBuildsBranchFilter string `json:"skipIntermediateBuildsBranchFilter"`
	// Autogenerated input type of PipelineUpdate
	CancelIntermediateBuilds bool `json:"cancelIntermediateBuilds"`
	// Autogenerated input type of PipelineUpdate
	CancelIntermediateBuildsBranchFilter string `json:"cancelIntermediateBuildsBranchFilter"`
	// Autogenerated input type of PipelineUpdate
	AllowRebuilds bool `json:"allowRebuilds"`
	// Autogenerated input type of PipelineUpdate
	DefaultTimeoutInMinutes int `json:"defaultTimeoutInMinutes"`
	// Autogenerated input type of PipelineUpdate
	MaximumTimeoutInMinutes int `json:"maximumTimeoutInMinutes"`
	// Autogenerated input type of PipelineUpdate
	BuildRetentionEnabled bool `json:"buildRetentionEnabled,omitempty"`
	// Autogenerated input type of PipelineUpdate
	BuildRetentionPeriod BuildRetentionPeriods `json:"buildRetentionPeriod,omitempty"`
	// Autogenerated input type of PipelineUpdate
	BuildRetentionNumber int `json:"buildRetentionNumber,omitempty"`
	// Autogenerated input type of PipelineUpdate
	ClusterId *string `json:"clusterId"`
	// Autogenerated input type of PipelineUpdate
	PipelineTemplateId string `json:"pipelineTemplateId,omitempty"`
	// Autogenerated input type of PipelineUpdate
	Archived bool `json:"archived,omitempty"`
	// Autogenerated input type of PipelineUpdate
	Tags []PipelineTagInput `json:"tags"`
	// Autogenerated input type of PipelineUpdate
	BranchConfiguration *string `json:"branchConfiguration"`
}

// GetClientMutationId returns PipelineUpdateInput.ClientMutationId, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetClientMutationId() string { return v.ClientMutationId }

// GetId returns PipelineUpdateInput.Id, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetId() string { return v.Id }

// GetName returns PipelineUpdateInput.Name, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetName() string { return v.Name }

// GetDescription returns PipelineUpdateInput.Description, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDescription() string { return v.Description }

// GetEmoji returns PipelineUpdateInput.Emoji, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetEmoji() string { return v.Emoji }

// GetColor returns PipelineUpdateInput.Color, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetColor() string { return v.Color }

// GetVisibility returns PipelineUpdateInput.Visibility, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetVisibility() PipelineVisibility { return v.Visibility }

// GetRepository returns PipelineUpdateInput.Repository, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetRepository() PipelineRepositoryInput { return v.Repository }

// GetSteps returns PipelineUpdateInput.Steps, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSteps() PipelineStepsInput { return v.Steps }

// GetDefaultBranch returns PipelineUpdateInput.DefaultBranch, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDefaultBranch() string { return v.DefaultBranch }

// GetNextBuildNumber returns PipelineUpdateInput.NextBuildNumber, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetNextBuildNumber() int { return v.NextBuildNumber }

// GetSkipIntermediateBuilds returns PipelineUpdateInput.SkipIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSkipIntermediateBuilds() bool { return v.SkipIntermediateBuilds }

// GetSkipIntermediateBuildsBranchFilter returns PipelineUpdateInput.SkipIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSkipIntermediateBuildsBranchFilter() string {
	return v.SkipIntermediateBuildsBranchFilter
}

// GetCancelIntermediateBuilds returns PipelineUpdateInput.CancelIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetCancelIntermediateBuilds() bool { return v.CancelIntermediateBuilds }

// GetCancelIntermediateBuildsBranchFilter returns PipelineUpdateInput.CancelIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetCancelIntermediateBuildsBranchFilter() string {
	return v.CancelIntermediateBuildsBranchFilter
}

// GetAllowRebuilds returns PipelineUpdateInput.AllowRebuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetAllowRebuilds() bool { return v.AllowRebuilds }

// GetDefaultTimeoutInMinutes returns PipelineUpdateInput.DefaultTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDefaultTimeoutInMinutes() int { return v.DefaultTimeoutInMinutes }

// GetMaximumTimeoutInMinutes returns PipelineUpdateInput.MaximumTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetMaximumTimeoutInMinutes() int { return v.MaximumTimeoutInMinutes }

// GetBuildRetentionEnabled returns PipelineUpdateInput.BuildRetentionEnabled, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBuildRetentionEnabled() bool { return v.BuildRetentionEnabled }

// GetBuildRetentionPeriod returns PipelineUpdateInput.BuildRetentionPeriod, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBuildRetentionPeriod() BuildRetentionPeriods {
	return v.BuildRetentionPeriod
}

// GetBuildRetentionNumber returns PipelineUpdateInput.BuildRetentionNumber, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBuildRetentionNumber() int { return v.BuildRetentionNumber }

// GetClusterId returns PipelineUpdateInput.ClusterId, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetClusterId() *string { return v.ClusterId }

// GetPipelineTemplateId returns PipelineUpdateInput.PipelineTemplateId, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetPipelineTemplateId() string { return v.PipelineTemplateId }

// GetArchived returns PipelineUpdateInput.Archived, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetArchived() bool { return v.Archived }

// GetTags returns PipelineUpdateInput.Tags, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetTags() []PipelineTagInput { return v.Tags }

// GetBranchConfiguration returns PipelineUpdateInput.BranchConfiguration, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBranchConfiguration() *string { return v.BranchConfiguration }

// The visibility of the pipeline
type PipelineVisibility string

const (
	// The pipeline is public
	PipelineVisibilityPublic PipelineVisibility = "PUBLIC"
	// The pipeline is private
	PipelineVisibilityPrivate PipelineVisibility = "PRIVATE"
)

// TeamFields includes the GraphQL fields of Team requested by the fragment TeamFields.
// The GraphQL type's documentation follows.
//
// An organization team
type TeamFields struct {
	Id string `json:"id"`
	// The public UUID for this team
	Uuid string `json:"uuid"`
	// The name of the team
	Name string `json:"name"`
	// A description of the team
	Description string `json:"description"`
	// The slug of the team
	Slug string `json:"slug"`
	// The privacy setting for this team
	Privacy TeamPrivacy `json:"privacy"`
	// Add new organization members to this team by default
	IsDefaultTeam bool `json:"isDefaultTeam"`
	// New organization members will be granted this role on this team
	DefaultMemberRole TeamMemberRole `json:"defaultMemberRole"`
	// Whether or not team members can create new pipelines in this team
	MembersCanCreatePipelines bool `json:"membersCanCreatePipelines"`
}

// GetId returns TeamFields.Id, and is useful for accessing the field via an interface.
func (v *TeamFields) GetId() string { return v.Id }

// GetUuid returns TeamFields.Uuid, and is useful for accessing the field via an interface.
func (v *TeamFields) GetUuid() string { return v.Uuid }

// GetName returns TeamFields.Name, and is useful for accessing the field via an interface.
func (v *TeamFields) GetName() string { return v.Name }

// GetDescription returns TeamFields.Description, and is useful for accessing the field via an interface.
func (v *TeamFields) GetDescription() string { return v.Description }

// GetSlug returns TeamFields.Slug, and is useful for accessing the field via an interface.
func (v *TeamFields) GetSlug() string { return v.Slug }

// GetPrivacy returns TeamFields.Privacy, and is useful for accessing the field via an interface.
func (v *TeamFields) GetPrivacy() TeamPrivacy { return v.Privacy }

// GetIsDefaultTeam returns TeamFields.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *TeamFields) GetIsDefaultTeam() bool { return v.IsDefaultTeam }

// GetDefaultMemberRole returns TeamFields.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *TeamFields) GetDefaultMemberRole() TeamMemberRole { return v.DefaultMemberRole }

// GetMembersCanCreatePipelines returns TeamFields.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *TeamFields) GetMembersCanCreatePipelines() bool { return v.MembersCanCreatePipelines }

// The roles a user can be within a team
type TeamMemberRole string

const (
	// The user is a regular member of the team
	TeamMemberRoleMember TeamMemberRole = "MEMBER"
	// The user can manage pipelines and users within the team
	TeamMemberRoleMaintainer TeamMemberRole = "MAINTAINER"
)

// Whether a team is visible or secret within an organization
type TeamPrivacy string

const (
	// Visible to all members of the organization
	TeamPrivacyVisible TeamPrivacy = "VISIBLE"
	// Visible to organization administrators and members
	TeamPrivacySecret TeamPrivacy = "SECRET"
)

// __archivePipelineInput is used internally by genqlient
type __archivePipelineInput struct {
	Id string `json:"id"`
}

// GetId returns __archivePipelineInput.Id, and is useful for accessing the field via an interface.
func (v *__archivePipelineInput) GetId() string { return v.Id }

// __createAgentTokenInput is used internally by genqlient
type __createAgentTokenInput struct {
	OrganizationId string  `json:"organizationId"`
	Description    *string `json:"description"`
}

// GetOrganizationId returns __createAgentTokenInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__createAgentTokenInput) GetOrganizationId() string { return v.OrganizationId }

// GetDescription returns __createAgentTokenInput.Description, and is useful for accessing the field via an interface.
func (v *__createAgentTokenInput) GetDescription() *string { return v.Description }

// __createClusterAgentTokenInput is used internally by genqlient
type __createClusterAgentTokenInput struct {
	OrganizationId string `json:"organizationId"`
	ClusterId      string `json:"clusterId"`
	Description    string `json:"description"`
}

// GetOrganizationId returns __createClusterAgentTokenInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__createClusterAgentTokenInput) GetOrganizationId() string { return v.OrganizationId }

// GetClusterId returns __createClusterAgentTokenInput.ClusterId, and is useful for accessing the field via an interface.
func (v *__createClusterAgentTokenInput) GetClusterId() string { return v.ClusterId }

// GetDescription returns __createClusterAgentTokenInput.Description, and is useful for accessing the field via an interface.
func (v *__createClusterAgentTokenInput) GetDescription() string { return v.Description }

// __createClusterInput is used internally by genqlient
type __createClusterInput struct {
	OrganizationId string  `json:"organizationId"`
	Name           string  `json:"name"`
	Description    *string `json:"description"`
	Emoji          *string `json:"emoji"`
	Color          *string `json:"color"`
}

// GetOrganizationId returns __createClusterInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetOrganizationId() string { return v.OrganizationId }

// GetName returns __createClusterInput.Name, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetName() string { return v.Name }

// GetDescription returns __createClusterInput.Description, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetDescription() *string { return v.Description }

// GetEmoji returns __createClusterInput.Emoji, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetEmoji() *string { return v.Emoji }

// GetColor returns __createClusterInput.Color, and is useful for accessing the field via an interface.
func (v *__createClusterInput) GetColor() *string { return v.Color }

// __createClusterQueueInput is used internally by genqlient
type __createClusterQueueInput struct {
	OrganizationId string  `json:"organizationId"`
	ClusterId      string  `json:"clusterId"`
	Key            string  `json:"key"`
	Description    *string `json:"description"`
}

// GetOrganizationId returns __createClusterQueueInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__createClusterQueueInput) GetOrganizationId() string { return v.OrganizationId }

// GetClusterId returns __createClusterQueueInput.ClusterId, and is useful for accessing the field via an interface.
func (v *__createClusterQueueInput) GetClusterId() string { return v.ClusterId }

// GetKey returns __createClusterQueueInput.Key, and is useful for accessing the field via an interface.
func (v *__createClusterQueueInput) GetKey() string { return v.Key }

// GetDescription returns __createClusterQueueInput.Description, and is useful for accessing the field via an interface.
func (v *__createClusterQueueInput) GetDescription() *string { return v.Description }

// __deleteClusterInput is used internally by genqlient
type __deleteClusterInput struct {
	OrganizationId string `json:"organizationId"`
	Id             string `json:"id"`
}

// GetOrganizationId returns __deleteClusterInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__deleteClusterInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __deleteClusterInput.Id, and is useful for accessing the field via an interface.
func (v *__deleteClusterInput) GetId() string { return v.Id }

// __deleteClusterQueueInput is used internally by genqlient
type __deleteClusterQueueInput struct {
	OrganizationId string `json:"organizationId"`
	Id             string `json:"id"`
}

// GetOrganizationId returns __deleteClusterQueueInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__deleteClusterQueueInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __deleteClusterQueueInput.Id, and is useful for accessing the field via an interface.
func (v *__deleteClusterQueueInput) GetId() string { return v.Id }

// __getAgentTokenInput is used internally by genqlient
type __getAgentTokenInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getAgentTokenInput.Slug, and is useful for accessing the field via an interface.
func (v *__getAgentTokenInput) GetSlug() string { return v.Slug }

// __getClusterAgentTokensInput is used internally by genqlient
type __getClusterAgentTokensInput struct {
	OrgSlug string `json:"orgSlug"`
	Id      string `json:"id"`
}

// GetOrgSlug returns __getClusterAgentTokensInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__getClusterAgentTokensInput) GetOrgSlug() string { return v.OrgSlug }

// GetId returns __getClusterAgentTokensInput.Id, and is useful for accessing the field via an interface.
func (v *__getClusterAgentTokensInput) GetId() string { return v.Id }

// __getClusterByNameInput is used internally by genqlient
type __getClusterByNameInput struct {
	OrgSlug string  `json:"orgSlug"`
	Cursor  *string `json:"cursor"`
}

// GetOrgSlug returns __getClusterByNameInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__getClusterByNameInput) GetOrgSlug() string { return v.OrgSlug }

// GetCursor returns __getClusterByNameInput.Cursor, and is useful for accessing the field via an interface.
func (v *__getClusterByNameInput) GetCursor() *string { return v.Cursor }

// __getClusterInput is used internally by genqlient
type __getClusterInput struct {
	OrgSlug string `json:"orgSlug"`
	Id      string `json:"id"`
}

// GetOrgSlug returns __getClusterInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__getClusterInput) GetOrgSlug() string { return v.OrgSlug }

// GetId returns __getClusterInput.Id, and is useful for accessing the field via an interface.
func (v *__getClusterInput) GetId() string { return v.Id }

// __getClusterQueuesInput is used internally by genqlient
type __getClusterQueuesInput struct {
	OrgSlug string `json:"orgSlug"`
	Id      string `json:"id"`
}

// GetOrgSlug returns __getClusterQueuesInput.OrgSlug, and is useful for accessing the field via an interface.
func (v *__getClusterQueuesInput) GetOrgSlug() string { return v.OrgSlug }

// GetId returns __getClusterQueuesInput.Id, and is useful for accessing the field via an interface.
func (v *__getClusterQueuesInput) GetId() string { return v.Id }

// __getOrganizationInput is used internally by genqlient
type __getOrganizationInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getOrganizationInput.Slug, and is useful for accessing the field via an interface.
func (v *__getOrganizationInput) GetSlug() string { return v.Slug }

// __getPipelineInput is used internally by genqlient
type __getPipelineInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getPipelineInput.Slug, and is useful for accessing the field via an interface.
func (v *__getPipelineInput) GetSlug() string { return v.Slug }

// __getTeamInput is used internally by genqlient
type __getTeamInput struct {
	Id string `json:"id"`
}

// GetId returns __getTeamInput.Id, and is useful for accessing the field via an interface.
func (v *__getTeamInput) GetId() string { return v.Id }

// __revokeAgentTokenInput is used internally by genqlient
type __revokeAgentTokenInput struct {
	Id     string `json:"id"`
	Reason string `json:"reason"`
}

// GetId returns __revokeAgentTokenInput.Id, and is useful for accessing the field via an interface.
func (v *__revokeAgentTokenInput) GetId() string { return v.Id }

// GetReason returns __revokeAgentTokenInput.Reason, and is useful for accessing the field via an interface.
func (v *__revokeAgentTokenInput) GetReason() string { return v.Reason }

// __revokeClusterAgentTokenInput is used internally by genqlient
type __revokeClusterAgentTokenInput struct {
	OrganizationId string `json:"organizationId"`
	Id             string `json:"id"`
}

// GetOrganizationId returns __revokeClusterAgentTokenInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__revokeClusterAgentTokenInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __revokeClusterAgentTokenInput.Id, and is useful for accessing the field via an interface.
func (v *__revokeClusterAgentTokenInput) GetId() string { return v.Id }

// __setApiIpAddressesInput is used internally by genqlient
type __setApiIpAddressesInput struct {
	OrganizationID string `json:"organizationID"`
	IpAddresses    string `json:"ipAddresses"`
}

// GetOrganizationID returns __setApiIpAddressesInput.OrganizationID, and is useful for accessing the field via an interface.
func (v *__setApiIpAddressesInput) GetOrganizationID() string { return v.OrganizationID }

// GetIpAddresses returns __setApiIpAddressesInput.IpAddresses, and is useful for accessing the field via an interface.
func (v *__setApiIpAddressesInput) GetIpAddresses() string { return v.IpAddresses }

// __teamCreateInput is used internally by genqlient
type __teamCreateInput struct {
	OrganizationID            string         `json:"organizationID"`
	Name                      string         `json:"name"`
	Description               string         `json:"description"`
	Privacy                   TeamPrivacy    `json:"privacy"`
	IsDefaultTeam             bool           `json:"isDefaultTeam"`
	DefaultMemberRole         TeamMemberRole `json:"defaultMemberRole"`
	MembersCanCreatePipelines bool           `json:"membersCanCreatePipelines"`
}

// GetOrganizationID returns __teamCreateInput.OrganizationID, and is useful for accessing the field via an interface.
func (v *__teamCreateInput) GetOrganizationID() string { return v.OrganizationID }

// GetName returns __teamCreateInput.Name, and is useful for accessing the field via an interface.
func (v *__teamCreateInput) GetName() string { return v.Name }

// GetDescription returns __teamCreateInput.Description, and is useful for accessing the field via an interface.
func (v *__teamCreateInput) GetDescription() string { return v.Description }

// GetPrivacy returns __teamCreateInput.Privacy, and is useful for accessing the field via an interface.
func (v *__teamCreateInput) GetPrivacy() TeamPrivacy { return v.Privacy }

// GetIsDefaultTeam returns __teamCreateInput.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *__teamCreateInput) GetIsDefaultTeam() bool { return v.IsDefaultTeam }

// GetDefaultMemberRole returns __teamCreateInput.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *__teamCreateInput) GetDefaultMemberRole() TeamMemberRole { return v.DefaultMemberRole }

// GetMembersCanCreatePipelines returns __teamCreateInput.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *__teamCreateInput) GetMembersCanCreatePipelines() bool { return v.MembersCanCreatePipelines }

// __teamDeleteInput is used internally by genqlient
type __teamDeleteInput struct {
	Id string `json:"id"`
}

// GetId returns __teamDeleteInput.Id, and is useful for accessing the field via an interface.
func (v *__teamDeleteInput) GetId() string { return v.Id }

// __teamUpdateInput is used internally by genqlient
type __teamUpdateInput struct {
	Id                        string         `json:"id"`
	Name                      string         `json:"name"`
	Description               string         `json:"description"`
	Privacy                   TeamPrivacy    `json:"privacy"`
	IsDefaultTeam             bool           `json:"isDefaultTeam"`
	DefaultMemberRole         TeamMemberRole `json:"defaultMemberRole"`
	MembersCanCreatePipelines bool           `json:"membersCanCreatePipelines"`
}

// GetId returns __teamUpdateInput.Id, and is useful for accessing the field via an interface.
func (v *__teamUpdateInput) GetId() string { return v.Id }

// GetName returns __teamUpdateInput.Name, and is useful for accessing the field via an interface.
func (v *__teamUpdateInput) GetName() string { return v.Name }

// GetDescription returns __teamUpdateInput.Description, and is useful for accessing the field via an interface.
func (v *__teamUpdateInput) GetDescription() string { return v.Description }

// GetPrivacy returns __teamUpdateInput.Privacy, and is useful for accessing the field via an interface.
func (v *__teamUpdateInput) GetPrivacy() TeamPrivacy { return v.Privacy }

// GetIsDefaultTeam returns __teamUpdateInput.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *__teamUpdateInput) GetIsDefaultTeam() bool { return v.IsDefaultTeam }

// GetDefaultMemberRole returns __teamUpdateInput.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *__teamUpdateInput) GetDefaultMemberRole() TeamMemberRole { return v.DefaultMemberRole }

// GetMembersCanCreatePipelines returns __teamUpdateInput.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *__teamUpdateInput) GetMembersCanCreatePipelines() bool { return v.MembersCanCreatePipelines }

// __updateClusterAgentTokenInput is used internally by genqlient
type __updateClusterAgentTokenInput struct {
	OrganizationId string `json:"organizationId"`
	Id             string `json:"id"`
	Description    string `json:"description"`
}

// GetOrganizationId returns __updateClusterAgentTokenInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__updateClusterAgentTokenInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __updateClusterAgentTokenInput.Id, and is useful for accessing the field via an interface.
func (v *__updateClusterAgentTokenInput) GetId() string { return v.Id }

// GetDescription returns __updateClusterAgentTokenInput.Description, and is useful for accessing the field via an interface.
func (v *__updateClusterAgentTokenInput) GetDescription() string { return v.Description }

// __updateClusterInput is used internally by genqlient
type __updateClusterInput struct {
	OrganizationId string  `json:"organizationId"`
	Id             string  `json:"id"`
	Name           string  `json:"name"`
	Description    *string `json:"description"`
	Emoji          *string `json:"emoji"`
	Color          *string `json:"color"`
}

// GetOrganizationId returns __updateClusterInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __updateClusterInput.Id, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetId() string { return v.Id }

// GetName returns __updateClusterInput.Name, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetName() string { return v.Name }

// GetDescription returns __updateClusterInput.Description, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetDescription() *string { return v.Description }

// GetEmoji returns __updateClusterInput.Emoji, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetEmoji() *string { return v.Emoji }

// GetColor returns __updateClusterInput.Color, and is useful for accessing the field via an interface.
func (v *__updateClusterInput) GetColor() *string { return v.Color }

// __updateClusterQueueInput is used internally by genqlient
type __updateClusterQueueInput struct {
	OrganizationId string  `json:"organizationId"`
	Id             string  `json:"id"`
	Description    *string `json:"description"`
}

// GetOrganizationId returns __updateClusterQueueInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__updateClusterQueueInput) GetOrganizationId() string { return v.OrganizationId }

// GetId returns __updateClusterQueueInput.Id, and is useful for accessing the field via an interface.
func (v *__updateClusterQueueInput) GetId() string { return v.Id }

// GetDescription returns __updateClusterQueueInput.Description, and is useful for accessing the field via an interface.
func (v *__updateClusterQueueInput) GetDescription() *string { return v.Description }

// __updatePipelineInput is used internally by genqlient
type __updatePipelineInput struct {
	Input PipelineUpdateInput `json:"input"`
}

// GetInput returns __updatePipelineInput.Input, and is useful for accessing the field via an interface.
func (v *__updatePipelineInput) GetInput() PipelineUpdateInput { return v.Input }

// archivePipelinePipelineArchivePipelineArchivePayload includes the requested fields of the GraphQL type PipelineArchivePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineArchive.
type archivePipelinePipelineArchivePipelineArchivePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId"`
}

// GetClientMutationId returns archivePipelinePipelineArchivePipelineArchivePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *archivePipelinePipelineArchivePipelineArchivePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// archivePipelineResponse is returned by archivePipeline on success.
type archivePipelineResponse struct {
	// Archive a pipeline.
	PipelineArchive archivePipelinePipelineArchivePipelineArchivePayload `json:"pipelineArchive"`
}

// GetPipelineArchive returns archivePipelineResponse.PipelineArchive, and is useful for accessing the field via an interface.
func (v *archivePipelineResponse) GetPipelineArchive() archivePipelinePipelineArchivePipelineArchivePayload {
	return v.PipelineArchive
}

// createAgentTokenAgentTokenCreateAgentTokenCreatePayload includes the requested fields of the GraphQL type AgentTokenCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of AgentTokenCreate.
type createAgentTokenAgentTokenCreateAgentTokenCreatePayload struct {
	// The token value used to register a new agent. Please ensure to securely copy this value immediately upon generation as it will not be displayed again.
	TokenValue     string                                                                `json:"tokenValue"`
	AgentTokenEdge createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge `json:"agentTokenEdge"`
}

// GetTokenValue returns createAgentTokenAgentTokenCreateAgentTokenCreatePayload.TokenValue, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayload) GetTokenValue() string {
	return v.TokenValue
}

// GetAgentTokenEdge returns createAgentTokenAgentTokenCreateAgentTokenCreatePayload.AgentTokenEdge, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayload) GetAgentTokenEdge() createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge {
	return v.AgentTokenEdge
}

// createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge includes the requested fields of the GraphQL type AgentTokenEdge.
type createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge struct {
	Node createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken `json:"node"`
}

// GetNode returns createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge.Node, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdge) GetNode() createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken {
	return v.Node
}

// createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken struct {
	Id string `json:"id"`
	// A description about what this agent token is used for
	Description *string `json:"description"`
	// The public UUID for the agent
	Uuid string `json:"uuid"`
}

// GetId returns createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken.Id, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken) GetId() string {
	return v.Id
}

// GetDescription returns createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken.Description, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken) GetDescription() *string {
	return v.Description
}

// GetUuid returns createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken.Uuid, and is useful for accessing the field via an interface.
func (v *createAgentTokenAgentTokenCreateAgentTokenCreatePayloadAgentTokenEdgeNodeAgentToken) GetUuid() string {
	return v.Uuid
}

// createAgentTokenResponse is returned by createAgentToken on success.
type createAgentTokenResponse struct {
	// Create a new agent registration token.
	AgentTokenCreate createAgentTokenAgentTokenCreateAgentTokenCreatePayload `json:"agentTokenCreate"`
}

// GetAgentTokenCreate returns createAgentTokenResponse.AgentTokenCreate, and is useful for accessing the field via an interface.
func (v *createAgentTokenResponse) GetAgentTokenCreate() createAgentTokenAgentTokenCreateAgentTokenCreatePayload {
	return v.AgentTokenCreate
}

// createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload includes the requested fields of the GraphQL type ClusterAgentTokenCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterAgentTokenCreate.
type createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload struct {
	ClusterAgentToken createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken `json:"clusterAgentToken"`
	// The token value used to register a new agent to this tokens cluster. Please ensure to securely copy this value immediately upon generation as it will not be displayed again.
	TokenValue string `json:"tokenValue"`
}

// GetClusterAgentToken returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload.ClusterAgentToken, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload) GetClusterAgentToken() createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken {
	return v.ClusterAgentToken
}

// GetTokenValue returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload.TokenValue, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload) GetTokenValue() string {
	return v.TokenValue
}

// createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken struct {
	ClusterAgentTokenValues `json:"-"`
}

// GetCluster returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken.Cluster, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) GetCluster() ClusterAgentTokenValuesCluster {
	return v.ClusterAgentTokenValues.Cluster
}

// GetDescription returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken.Description, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) GetDescription() string {
	return v.ClusterAgentTokenValues.Description
}

// GetId returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken.Id, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) GetId() string {
	return v.ClusterAgentTokenValues.Id
}

// GetUuid returns createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken.Uuid, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) GetUuid() string {
	return v.ClusterAgentTokenValues.Uuid
}

func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken
		graphql.NoUnmarshalJSON
	}
	firstPass.createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterAgentTokenValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalcreateClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken struct {
	Cluster ClusterAgentTokenValuesCluster `json:"cluster"`

	Description string `json:"description"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`
}

func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken) __premarshalJSON() (*__premarshalcreateClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken, error) {
	var retval __premarshalcreateClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayloadClusterAgentTokenClusterToken

	retval.Cluster = v.ClusterAgentTokenValues.Cluster
	retval.Description = v.ClusterAgentTokenValues.Description
	retval.Id = v.ClusterAgentTokenValues.Id
	retval.Uuid = v.ClusterAgentTokenValues.Uuid
	return &retval, nil
}

// createClusterAgentTokenResponse is returned by createClusterAgentToken on success.
type createClusterAgentTokenResponse struct {
	// Create a new cluster agent token
	ClusterAgentTokenCreate createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload `json:"clusterAgentTokenCreate"`
}

// GetClusterAgentTokenCreate returns createClusterAgentTokenResponse.ClusterAgentTokenCreate, and is useful for accessing the field via an interface.
func (v *createClusterAgentTokenResponse) GetClusterAgentTokenCreate() createClusterAgentTokenClusterAgentTokenCreateClusterAgentTokenCreatePayload {
	return v.ClusterAgentTokenCreate
}

// createClusterClusterCreateClusterCreatePayload includes the requested fields of the GraphQL type ClusterCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterCreate.
type createClusterClusterCreateClusterCreatePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string                                                `json:"clientMutationId"`
	Cluster          createClusterClusterCreateClusterCreatePayloadCluster `json:"cluster"`
}

// GetClientMutationId returns createClusterClusterCreateClusterCreatePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// GetCluster returns createClusterClusterCreateClusterCreatePayload.Cluster, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayload) GetCluster() createClusterClusterCreateClusterCreatePayloadCluster {
	return v.Cluster
}

// createClusterClusterCreateClusterCreatePayloadCluster includes the requested fields of the GraphQL type Cluster.
type createClusterClusterCreateClusterCreatePayloadCluster struct {
	ClusterFields `json:"-"`
}

// GetId returns createClusterClusterCreateClusterCreatePayloadCluster.Id, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetId() string {
	return v.ClusterFields.Id
}

// GetUuid returns createClusterClusterCreateClusterCreatePayloadCluster.Uuid, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetUuid() string {
	return v.ClusterFields.Uuid
}

// GetName returns createClusterClusterCreateClusterCreatePayloadCluster.Name, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetName() string {
	return v.ClusterFields.Name
}

// GetDescription returns createClusterClusterCreateClusterCreatePayloadCluster.Description, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetDescription() *string {
	return v.ClusterFields.Description
}

// GetEmoji returns createClusterClusterCreateClusterCreatePayloadCluster.Emoji, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetEmoji() *string {
	return v.ClusterFields.Emoji
}

// GetColor returns createClusterClusterCreateClusterCreatePayloadCluster.Color, and is useful for accessing the field via an interface.
func (v *createClusterClusterCreateClusterCreatePayloadCluster) GetColor() *string {
	return v.ClusterFields.Color
}

func (v *createClusterClusterCreateClusterCreatePayloadCluster) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createClusterClusterCreateClusterCreatePayloadCluster
		graphql.NoUnmarshalJSON
	}
	firstPass.createClusterClusterCreateClusterCreatePayloadCluster = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalcreateClusterClusterCreateClusterCreatePayloadCluster struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description *string `json:"description"`

	Emoji *string `json:"emoji"`

	Color *string `json:"color"`
}

func (v *createClusterClusterCreateClusterCreatePayloadCluster) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createClusterClusterCreateClusterCreatePayloadCluster) __premarshalJSON() (*__premarshalcreateClusterClusterCreateClusterCreatePayloadCluster, error) {
	var retval __premarshalcreateClusterClusterCreateClusterCreatePayloadCluster

	retval.Id = v.ClusterFields.Id
	retval.Uuid = v.ClusterFields.Uuid
	retval.Name = v.ClusterFields.Name
	retval.Description = v.ClusterFields.Description
	retval.Emoji = v.ClusterFields.Emoji
	retval.Color = v.ClusterFields.Color
	return &retval, nil
}

// createClusterQueueClusterQueueCreateClusterQueueCreatePayload includes the requested fields of the GraphQL type ClusterQueueCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterQueueCreate.
type createClusterQueueClusterQueueCreateClusterQueueCreatePayload struct {
	ClusterQueue createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue `json:"clusterQueue"`
}

// GetClusterQueue returns createClusterQueueClusterQueueCreateClusterQueueCreatePayload.ClusterQueue, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayload) GetClusterQueue() createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue {
	return v.ClusterQueue
}

// createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue struct {
	ClusterQueueValues `json:"-"`
}

// GetId returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Id, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetId() string {
	return v.ClusterQueueValues.Id
}

// GetUuid returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Uuid, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetUuid() string {
	return v.ClusterQueueValues.Uuid
}

// GetKey returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Key, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetKey() string {
	return v.ClusterQueueValues.Key
}

// GetDescription returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Description, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetDescription() *string {
	return v.ClusterQueueValues.Description
}

// GetCluster returns createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue.Cluster, and is useful for accessing the field via an interface.
func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) GetCluster() ClusterQueueValuesCluster {
	return v.ClusterQueueValues.Cluster
}

func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue
		graphql.NoUnmarshalJSON
	}
	firstPass.createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterQueueValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalcreateClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Key string `json:"key"`

	Description *string `json:"description"`

	Cluster ClusterQueueValuesCluster `json:"cluster"`
}

func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue) __premarshalJSON() (*__premarshalcreateClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue, error) {
	var retval __premarshalcreateClusterQueueClusterQueueCreateClusterQueueCreatePayloadClusterQueue

	retval.Id = v.ClusterQueueValues.Id
	retval.Uuid = v.ClusterQueueValues.Uuid
	retval.Key = v.ClusterQueueValues.Key
	retval.Description = v.ClusterQueueValues.Description
	retval.Cluster = v.ClusterQueueValues.Cluster
	return &retval, nil
}

// createClusterQueueResponse is returned by createClusterQueue on success.
type createClusterQueueResponse struct {
	// Create a cluster queue.
	ClusterQueueCreate createClusterQueueClusterQueueCreateClusterQueueCreatePayload `json:"clusterQueueCreate"`
}

// GetClusterQueueCreate returns createClusterQueueResponse.ClusterQueueCreate, and is useful for accessing the field via an interface.
func (v *createClusterQueueResponse) GetClusterQueueCreate() createClusterQueueClusterQueueCreateClusterQueueCreatePayload {
	return v.ClusterQueueCreate
}

// createClusterResponse is returned by createCluster on success.
type createClusterResponse struct {
	// Create a cluster.
	ClusterCreate createClusterClusterCreateClusterCreatePayload `json:"clusterCreate"`
}

// GetClusterCreate returns createClusterResponse.ClusterCreate, and is useful for accessing the field via an interface.
func (v *createClusterResponse) GetClusterCreate() createClusterClusterCreateClusterCreatePayload {
	return v.ClusterCreate
}

// deleteClusterClusterDeleteClusterDeletePayload includes the requested fields of the GraphQL type ClusterDeletePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterDelete.
type deleteClusterClusterDeleteClusterDeletePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId"`
}

// GetClientMutationId returns deleteClusterClusterDeleteClusterDeletePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *deleteClusterClusterDeleteClusterDeletePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload includes the requested fields of the GraphQL type ClusterQueueDeletePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterQueueDelete.
type deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string `json:"clientMutationId"`
}

// GetClientMutationId returns deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// deleteClusterQueueResponse is returned by deleteClusterQueue on success.
type deleteClusterQueueResponse struct {
	// Delete a cluster queue.
	ClusterQueueDelete deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload `json:"clusterQueueDelete"`
}

// GetClusterQueueDelete returns deleteClusterQueueResponse.ClusterQueueDelete, and is useful for accessing the field via an interface.
func (v *deleteClusterQueueResponse) GetClusterQueueDelete() deleteClusterQueueClusterQueueDeleteClusterQueueDeletePayload {
	return v.ClusterQueueDelete
}

// deleteClusterResponse is returned by deleteCluster on success.
type deleteClusterResponse struct {
	// Delete a cluster.
	ClusterDelete deleteClusterClusterDeleteClusterDeletePayload `json:"clusterDelete"`
}

// GetClusterDelete returns deleteClusterResponse.ClusterDelete, and is useful for accessing the field via an interface.
func (v *deleteClusterResponse) GetClusterDelete() deleteClusterClusterDeleteClusterDeletePayload {
	return v.ClusterDelete
}

// getAgentTokenAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type getAgentTokenAgentToken struct {
	Id string `json:"id"`
	// A description about what this agent token is used for
	Description *string `json:"description"`
	// The public UUID for the agent
	Uuid string `json:"uuid"`
}

// GetId returns getAgentTokenAgentToken.Id, and is useful for accessing the field via an interface.
func (v *getAgentTokenAgentToken) GetId() string { return v.Id }

// GetDescription returns getAgentTokenAgentToken.Description, and is useful for accessing the field via an interface.
func (v *getAgentTokenAgentToken) GetDescription() *string { return v.Description }

// GetUuid returns getAgentTokenAgentToken.Uuid, and is useful for accessing the field via an interface.
func (v *getAgentTokenAgentToken) GetUuid() string { return v.Uuid }

// getAgentTokenResponse is returned by getAgentToken on success.
type getAgentTokenResponse struct {
	// Find an agent token by its slug
	AgentToken getAgentTokenAgentToken `json:"agentToken"`
}

// GetAgentToken returns getAgentTokenResponse.AgentToken, and is useful for accessing the field via an interface.
func (v *getAgentTokenResponse) GetAgentToken() getAgentTokenAgentToken { return v.AgentToken }

// getClusterAgentTokensOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getClusterAgentTokensOrganization struct {
	// Return cluster in the Organization by UUID
	Cluster getClusterAgentTokensOrganizationCluster `json:"cluster"`
}

// GetCluster returns getClusterAgentTokensOrganization.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganization) GetCluster() getClusterAgentTokensOrganizationCluster {
	return v.Cluster
}

// getClusterAgentTokensOrganizationCluster includes the requested fields of the GraphQL type Cluster.
type getClusterAgentTokensOrganizationCluster struct {
	// Returns agent tokens for the Cluster
	AgentTokens getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection `json:"agentTokens"`
}

// GetAgentTokens returns getClusterAgentTokensOrganizationCluster.AgentTokens, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationCluster) GetAgentTokens() getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection {
	return v.AgentTokens
}

// getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection includes the requested fields of the GraphQL type ClusterAgentTokenConnection.
type getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection struct {
	Edges []getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge `json:"edges"`
}

// GetEdges returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection.Edges, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnection) GetEdges() []getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge {
	return v.Edges
}

// getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge includes the requested fields of the GraphQL type ClusterAgentTokenEdge.
type getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge struct {
	Node getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken `json:"node"`
}

// GetNode returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge.Node, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdge) GetNode() getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken {
	return v.Node
}

// getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken struct {
	ClusterAgentTokenValues `json:"-"`
}

// GetCluster returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) GetCluster() ClusterAgentTokenValuesCluster {
	return v.ClusterAgentTokenValues.Cluster
}

// GetDescription returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken.Description, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) GetDescription() string {
	return v.ClusterAgentTokenValues.Description
}

// GetId returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken.Id, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) GetId() string {
	return v.ClusterAgentTokenValues.Id
}

// GetUuid returns getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken.Uuid, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) GetUuid() string {
	return v.ClusterAgentTokenValues.Uuid
}

func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken
		graphql.NoUnmarshalJSON
	}
	firstPass.getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterAgentTokenValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken struct {
	Cluster ClusterAgentTokenValuesCluster `json:"cluster"`

	Description string `json:"description"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`
}

func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken) __premarshalJSON() (*__premarshalgetClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken, error) {
	var retval __premarshalgetClusterAgentTokensOrganizationClusterAgentTokensClusterAgentTokenConnectionEdgesClusterAgentTokenEdgeNodeClusterToken

	retval.Cluster = v.ClusterAgentTokenValues.Cluster
	retval.Description = v.ClusterAgentTokenValues.Description
	retval.Id = v.ClusterAgentTokenValues.Id
	retval.Uuid = v.ClusterAgentTokenValues.Uuid
	return &retval, nil
}

// getClusterAgentTokensResponse is returned by getClusterAgentTokens on success.
type getClusterAgentTokensResponse struct {
	// Find an organization
	Organization getClusterAgentTokensOrganization `json:"organization"`
}

// GetOrganization returns getClusterAgentTokensResponse.Organization, and is useful for accessing the field via an interface.
func (v *getClusterAgentTokensResponse) GetOrganization() getClusterAgentTokensOrganization {
	return v.Organization
}

// getClusterByNameOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getClusterByNameOrganization struct {
	// Returns clusters for an Organization
	Clusters getClusterByNameOrganizationClustersClusterConnection `json:"clusters"`
}

// GetClusters returns getClusterByNameOrganization.Clusters, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganization) GetClusters() getClusterByNameOrganizationClustersClusterConnection {
	return v.Clusters
}

// getClusterByNameOrganizationClustersClusterConnection includes the requested fields of the GraphQL type ClusterConnection.
type getClusterByNameOrganizationClustersClusterConnection struct {
	PageInfo getClusterByNameOrganizationClustersClusterConnectionPageInfo           `json:"pageInfo"`
	Edges    []getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge `json:"edges"`
}

// GetPageInfo returns getClusterByNameOrganizationClustersClusterConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnection) GetPageInfo() getClusterByNameOrganizationClustersClusterConnectionPageInfo {
	return v.PageInfo
}

// GetEdges returns getClusterByNameOrganizationClustersClusterConnection.Edges, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnection) GetEdges() []getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge {
	return v.Edges
}

// getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge includes the requested fields of the GraphQL type ClusterEdge.
type getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge struct {
	Node getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster `json:"node"`
}

// GetNode returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge.Node, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdge) GetNode() getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster {
	return v.Node
}

// getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster includes the requested fields of the GraphQL type Cluster.
type getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster struct {
	ClusterFields `json:"-"`
}

// GetId returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Id, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetId() string {
	return v.ClusterFields.Id
}

// GetUuid returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Uuid, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetUuid() string {
	return v.ClusterFields.Uuid
}

// GetName returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Name, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetName() string {
	return v.ClusterFields.Name
}

// GetDescription returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Description, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetDescription() *string {
	return v.ClusterFields.Description
}

// GetEmoji returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Emoji, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetEmoji() *string {
	return v.ClusterFields.Emoji
}

// GetColor returns getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster.Color, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) GetColor() *string {
	return v.ClusterFields.Color
}

func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster
		graphql.NoUnmarshalJSON
	}
	firstPass.getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description *string `json:"description"`

	Emoji *string `json:"emoji"`

	Color *string `json:"color"`
}

func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster) __premarshalJSON() (*__premarshalgetClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster, error) {
	var retval __premarshalgetClusterByNameOrganizationClustersClusterConnectionEdgesClusterEdgeNodeCluster

	retval.Id = v.ClusterFields.Id
	retval.Uuid = v.ClusterFields.Uuid
	retval.Name = v.ClusterFields.Name
	retval.Description = v.ClusterFields.Description
	retval.Emoji = v.ClusterFields.Emoji
	retval.Color = v.ClusterFields.Color
	return &retval, nil
}

// getClusterByNameOrganizationClustersClusterConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
// The GraphQL type's documentation follows.
//
// Information about pagination in a connection.
type getClusterByNameOrganizationClustersClusterConnectionPageInfo struct {
	// When paginating forwards, the cursor to continue.
	EndCursor string `json:"endCursor"`
	// When paginating forwards, are there more items?
	HasNextPage bool `json:"hasNextPage"`
}

// GetEndCursor returns getClusterByNameOrganizationClustersClusterConnectionPageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionPageInfo) GetEndCursor() string {
	return v.EndCursor
}

// GetHasNextPage returns getClusterByNameOrganizationClustersClusterConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *getClusterByNameOrganizationClustersClusterConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// getClusterByNameResponse is returned by getClusterByName on success.
type getClusterByNameResponse struct {
	// Find an organization
	Organization getClusterByNameOrganization `json:"organization"`
}

// GetOrganization returns getClusterByNameResponse.Organization, and is useful for accessing the field via an interface.
func (v *getClusterByNameResponse) GetOrganization() getClusterByNameOrganization {
	return v.Organization
}

// getClusterOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getClusterOrganization struct {
	// Return cluster in the Organization by UUID
	Cluster getClusterOrganizationCluster `json:"cluster"`
}

// GetCluster returns getClusterOrganization.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterOrganization) GetCluster() getClusterOrganizationCluster { return v.Cluster }

// getClusterOrganizationCluster includes the requested fields of the GraphQL type Cluster.
type getClusterOrganizationCluster struct {
	ClusterFields `json:"-"`
}

// GetId returns getClusterOrganizationCluster.Id, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetId() string { return v.ClusterFields.Id }

// GetUuid returns getClusterOrganizationCluster.Uuid, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetUuid() string { return v.ClusterFields.Uuid }

// GetName returns getClusterOrganizationCluster.Name, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetName() string { return v.ClusterFields.Name }

// GetDescription returns getClusterOrganizationCluster.Description, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetDescription() *string { return v.ClusterFields.Description }

// GetEmoji returns getClusterOrganizationCluster.Emoji, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetEmoji() *string { return v.ClusterFields.Emoji }

// GetColor returns getClusterOrganizationCluster.Color, and is useful for accessing the field via an interface.
func (v *getClusterOrganizationCluster) GetColor() *string { return v.ClusterFields.Color }

func (v *getClusterOrganizationCluster) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getClusterOrganizationCluster
		graphql.NoUnmarshalJSON
	}
	firstPass.getClusterOrganizationCluster = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetClusterOrganizationCluster struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description *string `json:"description"`

	Emoji *string `json:"emoji"`

	Color *string `json:"color"`
}

func (v *getClusterOrganizationCluster) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getClusterOrganizationCluster) __premarshalJSON() (*__premarshalgetClusterOrganizationCluster, error) {
	var retval __premarshalgetClusterOrganizationCluster

	retval.Id = v.ClusterFields.Id
	retval.Uuid = v.ClusterFields.Uuid
	retval.Name = v.ClusterFields.Name
	retval.Description = v.ClusterFields.Description
	retval.Emoji = v.ClusterFields.Emoji
	retval.Color = v.ClusterFields.Color
	return &retval, nil
}

// getClusterQueuesOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getClusterQueuesOrganization struct {
	// Return cluster in the Organization by UUID
	Cluster getClusterQueuesOrganizationCluster `json:"cluster"`
}

// GetCluster returns getClusterQueuesOrganization.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganization) GetCluster() getClusterQueuesOrganizationCluster {
	return v.Cluster
}

// getClusterQueuesOrganizationCluster includes the requested fields of the GraphQL type Cluster.
type getClusterQueuesOrganizationCluster struct {
	Queues getClusterQueuesOrganizationClusterQueuesClusterQueueConnection `json:"queues"`
}

// GetQueues returns getClusterQueuesOrganizationCluster.Queues, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationCluster) GetQueues() getClusterQueuesOrganizationClusterQueuesClusterQueueConnection {
	return v.Queues
}

// getClusterQueuesOrganizationClusterQueuesClusterQueueConnection includes the requested fields of the GraphQL type ClusterQueueConnection.
type getClusterQueuesOrganizationClusterQueuesClusterQueueConnection struct {
	Edges []getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge `json:"edges"`
}

// GetEdges returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnection.Edges, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnection) GetEdges() []getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge {
	return v.Edges
}

// getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge includes the requested fields of the GraphQL type ClusterQueueEdge.
type getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge struct {
	Node getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue `json:"node"`
}

// GetNode returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge.Node, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdge) GetNode() getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue {
	return v.Node
}

// getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue struct {
	ClusterQueueValues `json:"-"`
}

// GetId returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Id, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetId() string {
	return v.ClusterQueueValues.Id
}

// GetUuid returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Uuid, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetUuid() string {
	return v.ClusterQueueValues.Uuid
}

// GetKey returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Key, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetKey() string {
	return v.ClusterQueueValues.Key
}

// GetDescription returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Description, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetDescription() *string {
	return v.ClusterQueueValues.Description
}

// GetCluster returns getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue.Cluster, and is useful for accessing the field via an interface.
func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) GetCluster() ClusterQueueValuesCluster {
	return v.ClusterQueueValues.Cluster
}

func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue
		graphql.NoUnmarshalJSON
	}
	firstPass.getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterQueueValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Key string `json:"key"`

	Description *string `json:"description"`

	Cluster ClusterQueueValuesCluster `json:"cluster"`
}

func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue) __premarshalJSON() (*__premarshalgetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue, error) {
	var retval __premarshalgetClusterQueuesOrganizationClusterQueuesClusterQueueConnectionEdgesClusterQueueEdgeNodeClusterQueue

	retval.Id = v.ClusterQueueValues.Id
	retval.Uuid = v.ClusterQueueValues.Uuid
	retval.Key = v.ClusterQueueValues.Key
	retval.Description = v.ClusterQueueValues.Description
	retval.Cluster = v.ClusterQueueValues.Cluster
	return &retval, nil
}

// getClusterQueuesResponse is returned by getClusterQueues on success.
type getClusterQueuesResponse struct {
	// Find an organization
	Organization getClusterQueuesOrganization `json:"organization"`
}

// GetOrganization returns getClusterQueuesResponse.Organization, and is useful for accessing the field via an interface.
func (v *getClusterQueuesResponse) GetOrganization() getClusterQueuesOrganization {
	return v.Organization
}

// getClusterResponse is returned by getCluster on success.
type getClusterResponse struct {
	// Find an organization
	Organization getClusterOrganization `json:"organization"`
}

// GetOrganization returns getClusterResponse.Organization, and is useful for accessing the field via an interface.
func (v *getClusterResponse) GetOrganization() getClusterOrganization { return v.Organization }

// getOrganizationOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getOrganizationOrganization struct {
	// A space-separated allowlist of IP addresses that can access the organization via the GraphQL or REST API
	AllowedApiIpAddresses string `json:"allowedApiIpAddresses"`
	Id                    string `json:"id"`
	// The public UUID for this organization
	Uuid string `json:"uuid"`
}

// GetAllowedApiIpAddresses returns getOrganizationOrganization.AllowedApiIpAddresses, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetAllowedApiIpAddresses() string {
	return v.AllowedApiIpAddresses
}

// GetId returns getOrganizationOrganization.Id, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetId() string { return v.Id }

// GetUuid returns getOrganizationOrganization.Uuid, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetUuid() string { return v.Uuid }

// getOrganizationResponse is returned by getOrganization on success.
type getOrganizationResponse struct {
	// Find an organization
	Organization getOrganizationOrganization `json:"organization"`
}

// GetOrganization returns getOrganizationResponse.Organization, and is useful for accessing the field via an interface.
func (v *getOrganizationResponse) GetOrganization() getOrganizationOrganization {
	return v.Organization
}

// getPipelinePipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type getPipelinePipeline struct {
	Id string `json:"id"`
	// The default branch for this pipeline
	DefaultBranch string `json:"defaultBranch"`
	// The short description of the pipeline
	Description string `json:"description"`
	// The name of the pipeline
	Name string `json:"name"`
	// The repository for this pipeline
	Repository getPipelinePipelineRepository `json:"repository"`
	// The slug of the pipeline
	Slug string `json:"slug"`
	// The URL to use in your repository settings for commit webhooks
	WebhookURL string `json:"webhookURL"`
}

// GetId returns getPipelinePipeline.Id, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetId() string { return v.Id }

// GetDefaultBranch returns getPipelinePipeline.DefaultBranch, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetDefaultBranch() string { return v.DefaultBranch }

// GetDescription returns getPipelinePipeline.Description, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetDescription() string { return v.Description }

// GetName returns getPipelinePipeline.Name, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetName() string { return v.Name }

// GetRepository returns getPipelinePipeline.Repository, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetRepository() getPipelinePipelineRepository { return v.Repository }

// GetSlug returns getPipelinePipeline.Slug, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetSlug() string { return v.Slug }

// GetWebhookURL returns getPipelinePipeline.WebhookURL, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetWebhookURL() string { return v.WebhookURL }

// getPipelinePipelineRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository associated with a pipeline
type getPipelinePipelineRepository struct {
	// The git URL for this repository
	Url string `json:"url"`
}

// GetUrl returns getPipelinePipelineRepository.Url, and is useful for accessing the field via an interface.
func (v *getPipelinePipelineRepository) GetUrl() string { return v.Url }

// getPipelineResponse is returned by getPipeline on success.
type getPipelineResponse struct {
	// Find a pipeline
	Pipeline getPipelinePipeline `json:"pipeline"`
}

// GetPipeline returns getPipelineResponse.Pipeline, and is useful for accessing the field via an interface.
func (v *getPipelineResponse) GetPipeline() getPipelinePipeline { return v.Pipeline }

// getTeamNode includes the requested fields of the GraphQL interface Node.
//
// getTeamNode is implemented by the following types:
// getTeamNodeAPIAccessToken
// getTeamNodeAPIAccessTokenCode
// getTeamNodeAPIApplication
// getTeamNodeAgent
// getTeamNodeAgentToken
// getTeamNodeAnnotation
// getTeamNodeArtifact
// getTeamNodeAuditEvent
// getTeamNodeAuthorizationBitbucket
// getTeamNodeAuthorizationGitHub
// getTeamNodeAuthorizationGitHubApp
// getTeamNodeAuthorizationGitHubEnterprise
// getTeamNodeAuthorizationGoogle
// getTeamNodeAuthorizationSAML
// getTeamNodeBuild
// getTeamNodeChangelog
// getTeamNodeClusterToken
// getTeamNodeEmail
// getTeamNodeJobEventAssigned
// getTeamNodeJobEventBuildStepUploadCreated
// getTeamNodeJobEventCanceled
// getTeamNodeJobEventFinished
// getTeamNodeJobEventGeneric
// getTeamNodeJobEventRetried
// getTeamNodeJobEventTimedOut
// getTeamNodeJobTypeBlock
// getTeamNodeJobTypeCommand
// getTeamNodeJobTypeTrigger
// getTeamNodeJobTypeWait
// getTeamNodeNotificationServiceSlack
// getTeamNodeOrganization
// getTeamNodeOrganizationInvitation
// getTeamNodeOrganizationMember
// getTeamNodePipeline
// getTeamNodePipelineMetric
// getTeamNodePipelineSchedule
// getTeamNodePipelineTemplate
// getTeamNodeSSOProviderGitHubApp
// getTeamNodeSSOProviderGoogleGSuite
// getTeamNodeSSOProviderSAML
// getTeamNodeSuite
// getTeamNodeTeam
// getTeamNodeTeamMember
// getTeamNodeTeamPipeline
// getTeamNodeTeamSuite
// getTeamNodeUser
// getTeamNodeViewer
// The GraphQL type's documentation follows.
//
// An object with an ID.
type getTeamNode interface {
	implementsGraphQLInterfacegetTeamNode()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *getTeamNodeAPIAccessToken) implementsGraphQLInterfacegetTeamNode()                 {}
func (v *getTeamNodeAPIAccessTokenCode) implementsGraphQLInterfacegetTeamNode()             {}
func (v *getTeamNodeAPIApplication) implementsGraphQLInterfacegetTeamNode()                 {}
func (v *getTeamNodeAgent) implementsGraphQLInterfacegetTeamNode()                          {}
func (v *getTeamNodeAgentToken) implementsGraphQLInterfacegetTeamNode()                     {}
func (v *getTeamNodeAnnotation) implementsGraphQLInterfacegetTeamNode()                     {}
func (v *getTeamNodeArtifact) implementsGraphQLInterfacegetTeamNode()                       {}
func (v *getTeamNodeAuditEvent) implementsGraphQLInterfacegetTeamNode()                     {}
func (v *getTeamNodeAuthorizationBitbucket) implementsGraphQLInterfacegetTeamNode()         {}
func (v *getTeamNodeAuthorizationGitHub) implementsGraphQLInterfacegetTeamNode()            {}
func (v *getTeamNodeAuthorizationGitHubApp) implementsGraphQLInterfacegetTeamNode()         {}
func (v *getTeamNodeAuthorizationGitHubEnterprise) implementsGraphQLInterfacegetTeamNode()  {}
func (v *getTeamNodeAuthorizationGoogle) implementsGraphQLInterfacegetTeamNode()            {}
func (v *getTeamNodeAuthorizationSAML) implementsGraphQLInterfacegetTeamNode()              {}
func (v *getTeamNodeBuild) implementsGraphQLInterfacegetTeamNode()                          {}
func (v *getTeamNodeChangelog) implementsGraphQLInterfacegetTeamNode()                      {}
func (v *getTeamNodeClusterToken) implementsGraphQLInterfacegetTeamNode()                   {}
func (v *getTeamNodeEmail) implementsGraphQLInterfacegetTeamNode()                          {}
func (v *getTeamNodeJobEventAssigned) implementsGraphQLInterfacegetTeamNode()               {}
func (v *getTeamNodeJobEventBuildStepUploadCreated) implementsGraphQLInterfacegetTeamNode() {}
func (v *getTeamNodeJobEventCanceled) implementsGraphQLInterfacegetTeamNode()               {}
func (v *getTeamNodeJobEventFinished) implementsGraphQLInterfacegetTeamNode()               {}
func (v *getTeamNodeJobEventGeneric) implementsGraphQLInterfacegetTeamNode()                {}
func (v *getTeamNodeJobEventRetried) implementsGraphQLInterfacegetTeamNode()                {}
func (v *getTeamNodeJobEventTimedOut) implementsGraphQLInterfacegetTeamNode()               {}
func (v *getTeamNodeJobTypeBlock) implementsGraphQLInterfacegetTeamNode()                   {}
func (v *getTeamNodeJobTypeCommand) implementsGraphQLInterfacegetTeamNode()                 {}
func (v *getTeamNodeJobTypeTrigger) implementsGraphQLInterfacegetTeamNode()                 {}
func (v *getTeamNodeJobTypeWait) implementsGraphQLInterfacegetTeamNode()                    {}
func (v *getTeamNodeNotificationServiceSlack) implementsGraphQLInterfacegetTeamNode()       {}
func (v *getTeamNodeOrganization) implementsGraphQLInterfacegetTeamNode()                   {}
func (v *getTeamNodeOrganizationInvitation) implementsGraphQLInterfacegetTeamNode()         {}
func (v *getTeamNodeOrganizationMember) implementsGraphQLInterfacegetTeamNode()             {}
func (v *getTeamNodePipeline) implementsGraphQLInterfacegetTeamNode()                       {}
func (v *getTeamNodePipelineMetric) implementsGraphQLInterfacegetTeamNode()                 {}
func (v *getTeamNodePipelineSchedule) implementsGraphQLInterfacegetTeamNode()               {}
func (v *getTeamNodePipelineTemplate) implementsGraphQLInterfacegetTeamNode()               {}
func (v *getTeamNodeSSOProviderGitHubApp) implementsGraphQLInterfacegetTeamNode()           {}
func (v *getTeamNodeSSOProviderGoogleGSuite) implementsGraphQLInterfacegetTeamNode()        {}
func (v *getTeamNodeSSOProviderSAML) implementsGraphQLInterfacegetTeamNode()                {}
func (v *getTeamNodeSuite) implementsGraphQLInterfacegetTeamNode()                          {}
func (v *getTeamNodeTeam) implementsGraphQLInterfacegetTeamNode()                           {}
func (v *getTeamNodeTeamMember) implementsGraphQLInterfacegetTeamNode()                     {}
func (v *getTeamNodeTeamPipeline) implementsGraphQLInterfacegetTeamNode()                   {}
func (v *getTeamNodeTeamSuite) implementsGraphQLInterfacegetTeamNode()                      {}
func (v *getTeamNodeUser) implementsGraphQLInterfacegetTeamNode()                           {}
func (v *getTeamNodeViewer) implementsGraphQLInterfacegetTeamNode()                         {}

func __unmarshalgetTeamNode(b []byte, v *getTeamNode) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "APIAccessToken":
		*v = new(getTeamNodeAPIAccessToken)
		return json.Unmarshal(b, *v)
	case "APIAccessTokenCode":
		*v = new(getTeamNodeAPIAccessTokenCode)
		return json.Unmarshal(b, *v)
	case "APIApplication":
		*v = new(getTeamNodeAPIApplication)
		return json.Unmarshal(b, *v)
	case "Agent":
		*v = new(getTeamNodeAgent)
		return json.Unmarshal(b, *v)
	case "AgentToken":
		*v = new(getTeamNodeAgentToken)
		return json.Unmarshal(b, *v)
	case "Annotation":
		*v = new(getTeamNodeAnnotation)
		return json.Unmarshal(b, *v)
	case "Artifact":
		*v = new(getTeamNodeArtifact)
		return json.Unmarshal(b, *v)
	case "AuditEvent":
		*v = new(getTeamNodeAuditEvent)
		return json.Unmarshal(b, *v)
	case "AuthorizationBitbucket":
		*v = new(getTeamNodeAuthorizationBitbucket)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHub":
		*v = new(getTeamNodeAuthorizationGitHub)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHubApp":
		*v = new(getTeamNodeAuthorizationGitHubApp)
		return json.Unmarshal(b, *v)
	case "AuthorizationGitHubEnterprise":
		*v = new(getTeamNodeAuthorizationGitHubEnterprise)
		return json.Unmarshal(b, *v)
	case "AuthorizationGoogle":
		*v = new(getTeamNodeAuthorizationGoogle)
		return json.Unmarshal(b, *v)
	case "AuthorizationSAML":
		*v = new(getTeamNodeAuthorizationSAML)
		return json.Unmarshal(b, *v)
	case "Build":
		*v = new(getTeamNodeBuild)
		return json.Unmarshal(b, *v)
	case "Changelog":
		*v = new(getTeamNodeChangelog)
		return json.Unmarshal(b, *v)
	case "ClusterToken":
		*v = new(getTeamNodeClusterToken)
		return json.Unmarshal(b, *v)
	case "Email":
		*v = new(getTeamNodeEmail)
		return json.Unmarshal(b, *v)
	case "JobEventAssigned":
		*v = new(getTeamNodeJobEventAssigned)
		return json.Unmarshal(b, *v)
	case "JobEventBuildStepUploadCreated":
		*v = new(getTeamNodeJobEventBuildStepUploadCreated)
		return json.Unmarshal(b, *v)
	case "JobEventCanceled":
		*v = new(getTeamNodeJobEventCanceled)
		return json.Unmarshal(b, *v)
	case "JobEventFinished":
		*v = new(getTeamNodeJobEventFinished)
		return json.Unmarshal(b, *v)
	case "JobEventGeneric":
		*v = new(getTeamNodeJobEventGeneric)
		return json.Unmarshal(b, *v)
	case "JobEventRetried":
		*v = new(getTeamNodeJobEventRetried)
		return json.Unmarshal(b, *v)
	case "JobEventTimedOut":
		*v = new(getTeamNodeJobEventTimedOut)
		return json.Unmarshal(b, *v)
	case "JobTypeBlock":
		*v = new(getTeamNodeJobTypeBlock)
		return json.Unmarshal(b, *v)
	case "JobTypeCommand":
		*v = new(getTeamNodeJobTypeCommand)
		return json.Unmarshal(b, *v)
	case "JobTypeTrigger":
		*v = new(getTeamNodeJobTypeTrigger)
		return json.Unmarshal(b, *v)
	case "JobTypeWait":
		*v = new(getTeamNodeJobTypeWait)
		return json.Unmarshal(b, *v)
	case "NotificationServiceSlack":
		*v = new(getTeamNodeNotificationServiceSlack)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(getTeamNodeOrganization)
		return json.Unmarshal(b, *v)
	case "OrganizationInvitation":
		*v = new(getTeamNodeOrganizationInvitation)
		return json.Unmarshal(b, *v)
	case "OrganizationMember":
		*v = new(getTeamNodeOrganizationMember)
		return json.Unmarshal(b, *v)
	case "Pipeline":
		*v = new(getTeamNodePipeline)
		return json.Unmarshal(b, *v)
	case "PipelineMetric":
		*v = new(getTeamNodePipelineMetric)
		return json.Unmarshal(b, *v)
	case "PipelineSchedule":
		*v = new(getTeamNodePipelineSchedule)
		return json.Unmarshal(b, *v)
	case "PipelineTemplate":
		*v = new(getTeamNodePipelineTemplate)
		return json.Unmarshal(b, *v)
	case "SSOProviderGitHubApp":
		*v = new(getTeamNodeSSOProviderGitHubApp)
		return json.Unmarshal(b, *v)
	case "SSOProviderGoogleGSuite":
		*v = new(getTeamNodeSSOProviderGoogleGSuite)
		return json.Unmarshal(b, *v)
	case "SSOProviderSAML":
		*v = new(getTeamNodeSSOProviderSAML)
		return json.Unmarshal(b, *v)
	case "Suite":
		*v = new(getTeamNodeSuite)
		return json.Unmarshal(b, *v)
	case "Team":
		*v = new(getTeamNodeTeam)
		return json.Unmarshal(b, *v)
	case "TeamMember":
		*v = new(getTeamNodeTeamMember)
		return json.Unmarshal(b, *v)
	case "TeamPipeline":
		*v = new(getTeamNodeTeamPipeline)
		return json.Unmarshal(b, *v)
	case "TeamSuite":
		*v = new(getTeamNodeTeamSuite)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(getTeamNodeUser)
		return json.Unmarshal(b, *v)
	case "Viewer":
		*v = new(getTeamNodeViewer)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Node.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for getTeamNode: "%v"`, tn.TypeName)
	}
}

func __marshalgetTeamNode(v *getTeamNode) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getTeamNodeAPIAccessToken:
		typename = "APIAccessToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAPIAccessToken
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAPIAccessTokenCode:
		typename = "APIAccessTokenCode"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAPIAccessTokenCode
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAPIApplication:
		typename = "APIApplication"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAPIApplication
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAgent:
		typename = "Agent"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAgent
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAgentToken:
		typename = "AgentToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAgentToken
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAnnotation:
		typename = "Annotation"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAnnotation
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeArtifact:
		typename = "Artifact"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeArtifact
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAuditEvent:
		typename = "AuditEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAuditEvent
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAuthorizationBitbucket:
		typename = "AuthorizationBitbucket"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAuthorizationBitbucket
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAuthorizationGitHub:
		typename = "AuthorizationGitHub"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAuthorizationGitHub
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAuthorizationGitHubApp:
		typename = "AuthorizationGitHubApp"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAuthorizationGitHubApp
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAuthorizationGitHubEnterprise:
		typename = "AuthorizationGitHubEnterprise"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAuthorizationGitHubEnterprise
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAuthorizationGoogle:
		typename = "AuthorizationGoogle"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAuthorizationGoogle
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeAuthorizationSAML:
		typename = "AuthorizationSAML"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeAuthorizationSAML
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeBuild:
		typename = "Build"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeBuild
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeChangelog:
		typename = "Changelog"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeChangelog
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeClusterToken:
		typename = "ClusterToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeClusterToken
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeEmail:
		typename = "Email"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeEmail
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobEventAssigned:
		typename = "JobEventAssigned"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobEventAssigned
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobEventBuildStepUploadCreated:
		typename = "JobEventBuildStepUploadCreated"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobEventBuildStepUploadCreated
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobEventCanceled:
		typename = "JobEventCanceled"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobEventCanceled
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobEventFinished:
		typename = "JobEventFinished"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobEventFinished
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobEventGeneric:
		typename = "JobEventGeneric"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobEventGeneric
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobEventRetried:
		typename = "JobEventRetried"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobEventRetried
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobEventTimedOut:
		typename = "JobEventTimedOut"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobEventTimedOut
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobTypeBlock:
		typename = "JobTypeBlock"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobTypeBlock
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobTypeCommand:
		typename = "JobTypeCommand"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobTypeCommand
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobTypeTrigger:
		typename = "JobTypeTrigger"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobTypeTrigger
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeJobTypeWait:
		typename = "JobTypeWait"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeJobTypeWait
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeNotificationServiceSlack:
		typename = "NotificationServiceSlack"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeNotificationServiceSlack
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeOrganization
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeOrganizationInvitation:
		typename = "OrganizationInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeOrganizationInvitation
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeOrganizationMember:
		typename = "OrganizationMember"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeOrganizationMember
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodePipeline:
		typename = "Pipeline"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodePipeline
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodePipelineMetric:
		typename = "PipelineMetric"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodePipelineMetric
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodePipelineSchedule:
		typename = "PipelineSchedule"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodePipelineSchedule
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodePipelineTemplate:
		typename = "PipelineTemplate"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodePipelineTemplate
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeSSOProviderGitHubApp:
		typename = "SSOProviderGitHubApp"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeSSOProviderGitHubApp
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeSSOProviderGoogleGSuite:
		typename = "SSOProviderGoogleGSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeSSOProviderGoogleGSuite
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeSSOProviderSAML:
		typename = "SSOProviderSAML"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeSSOProviderSAML
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeSuite:
		typename = "Suite"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeSuite
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeTeam:
		typename = "Team"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalgetTeamNodeTeam
		}{typename, premarshaled}
		return json.Marshal(result)
	case *getTeamNodeTeamMember:
		typename = "TeamMember"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeTeamMember
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeTeamPipeline:
		typename = "TeamPipeline"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeTeamPipeline
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeTeamSuite:
		typename = "TeamSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeTeamSuite
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeUser
		}{typename, v}
		return json.Marshal(result)
	case *getTeamNodeViewer:
		typename = "Viewer"

		result := struct {
			TypeName string `json:"__typename"`
			*getTeamNodeViewer
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for getTeamNode: "%T"`, v)
	}
}

// getTeamNodeAPIAccessToken includes the requested fields of the GraphQL type APIAccessToken.
// The GraphQL type's documentation follows.
//
// API access tokens for authentication with the Buildkite API
type getTeamNodeAPIAccessToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAPIAccessToken.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAPIAccessToken) GetTypename() string { return v.Typename }

// getTeamNodeAPIAccessTokenCode includes the requested fields of the GraphQL type APIAccessTokenCode.
// The GraphQL type's documentation follows.
//
// A code that is used by an API Application to request an API Access Token
type getTeamNodeAPIAccessTokenCode struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAPIAccessTokenCode.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAPIAccessTokenCode) GetTypename() string { return v.Typename }

// getTeamNodeAPIApplication includes the requested fields of the GraphQL type APIApplication.
// The GraphQL type's documentation follows.
//
// An API Application
type getTeamNodeAPIApplication struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAPIApplication.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAPIApplication) GetTypename() string { return v.Typename }

// getTeamNodeAgent includes the requested fields of the GraphQL type Agent.
// The GraphQL type's documentation follows.
//
// An agent
type getTeamNodeAgent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAgent.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAgent) GetTypename() string { return v.Typename }

// getTeamNodeAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type getTeamNodeAgentToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAgentToken.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAgentToken) GetTypename() string { return v.Typename }

// getTeamNodeAnnotation includes the requested fields of the GraphQL type Annotation.
// The GraphQL type's documentation follows.
//
// An annotation allows you to add arbitrary content to the top of a build page in the Buildkite UI
type getTeamNodeAnnotation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAnnotation.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAnnotation) GetTypename() string { return v.Typename }

// getTeamNodeArtifact includes the requested fields of the GraphQL type Artifact.
// The GraphQL type's documentation follows.
//
// A file uploaded from the agent whilst running a job
type getTeamNodeArtifact struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeArtifact.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeArtifact) GetTypename() string { return v.Typename }

// getTeamNodeAuditEvent includes the requested fields of the GraphQL type AuditEvent.
// The GraphQL type's documentation follows.
//
// Audit record of an event which occurred in the system
type getTeamNodeAuditEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAuditEvent.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAuditEvent) GetTypename() string { return v.Typename }

// getTeamNodeAuthorizationBitbucket includes the requested fields of the GraphQL type AuthorizationBitbucket.
// The GraphQL type's documentation follows.
//
// A Bitbucket account authorized with a Buildkite account
type getTeamNodeAuthorizationBitbucket struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAuthorizationBitbucket.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAuthorizationBitbucket) GetTypename() string { return v.Typename }

// getTeamNodeAuthorizationGitHub includes the requested fields of the GraphQL type AuthorizationGitHub.
// The GraphQL type's documentation follows.
//
// A GitHub account authorized with a Buildkite account
type getTeamNodeAuthorizationGitHub struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAuthorizationGitHub.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAuthorizationGitHub) GetTypename() string { return v.Typename }

// getTeamNodeAuthorizationGitHubApp includes the requested fields of the GraphQL type AuthorizationGitHubApp.
// The GraphQL type's documentation follows.
//
// A GitHub app authorized with a Buildkite account
type getTeamNodeAuthorizationGitHubApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAuthorizationGitHubApp.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAuthorizationGitHubApp) GetTypename() string { return v.Typename }

// getTeamNodeAuthorizationGitHubEnterprise includes the requested fields of the GraphQL type AuthorizationGitHubEnterprise.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise account authorized with a Buildkite account
type getTeamNodeAuthorizationGitHubEnterprise struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAuthorizationGitHubEnterprise.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAuthorizationGitHubEnterprise) GetTypename() string { return v.Typename }

// getTeamNodeAuthorizationGoogle includes the requested fields of the GraphQL type AuthorizationGoogle.
// The GraphQL type's documentation follows.
//
// A Google account authorized with a Buildkite account
type getTeamNodeAuthorizationGoogle struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAuthorizationGoogle.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAuthorizationGoogle) GetTypename() string { return v.Typename }

// getTeamNodeAuthorizationSAML includes the requested fields of the GraphQL type AuthorizationSAML.
// The GraphQL type's documentation follows.
//
// A SAML account authorized with a Buildkite account
type getTeamNodeAuthorizationSAML struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeAuthorizationSAML.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeAuthorizationSAML) GetTypename() string { return v.Typename }

// getTeamNodeBuild includes the requested fields of the GraphQL type Build.
// The GraphQL type's documentation follows.
//
// A build from a pipeline
type getTeamNodeBuild struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeBuild.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeBuild) GetTypename() string { return v.Typename }

// getTeamNodeChangelog includes the requested fields of the GraphQL type Changelog.
// The GraphQL type's documentation follows.
//
// A changelog
type getTeamNodeChangelog struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeChangelog.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeChangelog) GetTypename() string { return v.Typename }

// getTeamNodeClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type getTeamNodeClusterToken struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeClusterToken.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeClusterToken) GetTypename() string { return v.Typename }

// getTeamNodeEmail includes the requested fields of the GraphQL type Email.
// The GraphQL type's documentation follows.
//
// An email address
type getTeamNodeEmail struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeEmail.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeEmail) GetTypename() string { return v.Typename }

// getTeamNodeJobEventAssigned includes the requested fields of the GraphQL type JobEventAssigned.
// The GraphQL type's documentation follows.
//
// An event created when the dispatcher assigns the job to an agent
type getTeamNodeJobEventAssigned struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobEventAssigned.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobEventAssigned) GetTypename() string { return v.Typename }

// getTeamNodeJobEventBuildStepUploadCreated includes the requested fields of the GraphQL type JobEventBuildStepUploadCreated.
// The GraphQL type's documentation follows.
//
// An event created when the job creates new build steps via pipeline upload
type getTeamNodeJobEventBuildStepUploadCreated struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobEventBuildStepUploadCreated.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobEventBuildStepUploadCreated) GetTypename() string { return v.Typename }

// getTeamNodeJobEventCanceled includes the requested fields of the GraphQL type JobEventCanceled.
// The GraphQL type's documentation follows.
//
// An event created when the job is canceled
type getTeamNodeJobEventCanceled struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobEventCanceled.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobEventCanceled) GetTypename() string { return v.Typename }

// getTeamNodeJobEventFinished includes the requested fields of the GraphQL type JobEventFinished.
// The GraphQL type's documentation follows.
//
// An event created when the job is finished
type getTeamNodeJobEventFinished struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobEventFinished.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobEventFinished) GetTypename() string { return v.Typename }

// getTeamNodeJobEventGeneric includes the requested fields of the GraphQL type JobEventGeneric.
// The GraphQL type's documentation follows.
//
// A generic event type that doesn't have any additional meta-information associated with the event
type getTeamNodeJobEventGeneric struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobEventGeneric.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobEventGeneric) GetTypename() string { return v.Typename }

// getTeamNodeJobEventRetried includes the requested fields of the GraphQL type JobEventRetried.
// The GraphQL type's documentation follows.
//
// An event created when the job is retried
type getTeamNodeJobEventRetried struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobEventRetried.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobEventRetried) GetTypename() string { return v.Typename }

// getTeamNodeJobEventTimedOut includes the requested fields of the GraphQL type JobEventTimedOut.
// The GraphQL type's documentation follows.
//
// An event created when the job is timed out
type getTeamNodeJobEventTimedOut struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobEventTimedOut.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobEventTimedOut) GetTypename() string { return v.Typename }

// getTeamNodeJobTypeBlock includes the requested fields of the GraphQL type JobTypeBlock.
// The GraphQL type's documentation follows.
//
// A type of job that requires a user to unblock it before proceeding in a build pipeline
type getTeamNodeJobTypeBlock struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobTypeBlock.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobTypeBlock) GetTypename() string { return v.Typename }

// getTeamNodeJobTypeCommand includes the requested fields of the GraphQL type JobTypeCommand.
// The GraphQL type's documentation follows.
//
// A type of job that runs a command on an agent
type getTeamNodeJobTypeCommand struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobTypeCommand.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobTypeCommand) GetTypename() string { return v.Typename }

// getTeamNodeJobTypeTrigger includes the requested fields of the GraphQL type JobTypeTrigger.
// The GraphQL type's documentation follows.
//
// A type of job that triggers another build on a pipeline
type getTeamNodeJobTypeTrigger struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobTypeTrigger.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobTypeTrigger) GetTypename() string { return v.Typename }

// getTeamNodeJobTypeWait includes the requested fields of the GraphQL type JobTypeWait.
// The GraphQL type's documentation follows.
//
// A type of job that waits for all previous jobs to pass before proceeding the build pipeline
type getTeamNodeJobTypeWait struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeJobTypeWait.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeJobTypeWait) GetTypename() string { return v.Typename }

// getTeamNodeNotificationServiceSlack includes the requested fields of the GraphQL type NotificationServiceSlack.
// The GraphQL type's documentation follows.
//
// Deliver notifications to Slack
type getTeamNodeNotificationServiceSlack struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeNotificationServiceSlack.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeNotificationServiceSlack) GetTypename() string { return v.Typename }

// getTeamNodeOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getTeamNodeOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeOrganization.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeOrganization) GetTypename() string { return v.Typename }

// getTeamNodeOrganizationInvitation includes the requested fields of the GraphQL type OrganizationInvitation.
// The GraphQL type's documentation follows.
//
// A pending invitation to a user to join this organization
type getTeamNodeOrganizationInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeOrganizationInvitation.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeOrganizationInvitation) GetTypename() string { return v.Typename }

// getTeamNodeOrganizationMember includes the requested fields of the GraphQL type OrganizationMember.
// The GraphQL type's documentation follows.
//
// A member of an organization
type getTeamNodeOrganizationMember struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeOrganizationMember.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeOrganizationMember) GetTypename() string { return v.Typename }

// getTeamNodePipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type getTeamNodePipeline struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodePipeline.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodePipeline) GetTypename() string { return v.Typename }

// getTeamNodePipelineMetric includes the requested fields of the GraphQL type PipelineMetric.
// The GraphQL type's documentation follows.
//
// A metric for a pipeline
type getTeamNodePipelineMetric struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodePipelineMetric.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodePipelineMetric) GetTypename() string { return v.Typename }

// getTeamNodePipelineSchedule includes the requested fields of the GraphQL type PipelineSchedule.
// The GraphQL type's documentation follows.
//
// A schedule of when a build should automatically triggered for a Pipeline
type getTeamNodePipelineSchedule struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodePipelineSchedule.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodePipelineSchedule) GetTypename() string { return v.Typename }

// getTeamNodePipelineTemplate includes the requested fields of the GraphQL type PipelineTemplate.
// The GraphQL type's documentation follows.
//
// A template defining a fixed step configuration for a pipeline
type getTeamNodePipelineTemplate struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodePipelineTemplate.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodePipelineTemplate) GetTypename() string { return v.Typename }

// getTeamNodeSSOProviderGitHubApp includes the requested fields of the GraphQL type SSOProviderGitHubApp.
// The GraphQL type's documentation follows.
//
// Single sign-on provided by GitHub
type getTeamNodeSSOProviderGitHubApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeSSOProviderGitHubApp.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeSSOProviderGitHubApp) GetTypename() string { return v.Typename }

// getTeamNodeSSOProviderGoogleGSuite includes the requested fields of the GraphQL type SSOProviderGoogleGSuite.
// The GraphQL type's documentation follows.
//
// Single sign-on provided by Google
type getTeamNodeSSOProviderGoogleGSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeSSOProviderGoogleGSuite.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeSSOProviderGoogleGSuite) GetTypename() string { return v.Typename }

// getTeamNodeSSOProviderSAML includes the requested fields of the GraphQL type SSOProviderSAML.
// The GraphQL type's documentation follows.
//
// Single sign-on provided via SAML
type getTeamNodeSSOProviderSAML struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeSSOProviderSAML.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeSSOProviderSAML) GetTypename() string { return v.Typename }

// getTeamNodeSuite includes the requested fields of the GraphQL type Suite.
// The GraphQL type's documentation follows.
//
// A suite
type getTeamNodeSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeSuite.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeSuite) GetTypename() string { return v.Typename }

// getTeamNodeTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type getTeamNodeTeam struct {
	Typename   string `json:"__typename"`
	TeamFields `json:"-"`
}

// GetTypename returns getTeamNodeTeam.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetTypename() string { return v.Typename }

// GetId returns getTeamNodeTeam.Id, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetId() string { return v.TeamFields.Id }

// GetUuid returns getTeamNodeTeam.Uuid, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetUuid() string { return v.TeamFields.Uuid }

// GetName returns getTeamNodeTeam.Name, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetName() string { return v.TeamFields.Name }

// GetDescription returns getTeamNodeTeam.Description, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetDescription() string { return v.TeamFields.Description }

// GetSlug returns getTeamNodeTeam.Slug, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetSlug() string { return v.TeamFields.Slug }

// GetPrivacy returns getTeamNodeTeam.Privacy, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetPrivacy() TeamPrivacy { return v.TeamFields.Privacy }

// GetIsDefaultTeam returns getTeamNodeTeam.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetIsDefaultTeam() bool { return v.TeamFields.IsDefaultTeam }

// GetDefaultMemberRole returns getTeamNodeTeam.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetDefaultMemberRole() TeamMemberRole {
	return v.TeamFields.DefaultMemberRole
}

// GetMembersCanCreatePipelines returns getTeamNodeTeam.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeam) GetMembersCanCreatePipelines() bool {
	return v.TeamFields.MembersCanCreatePipelines
}

func (v *getTeamNodeTeam) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getTeamNodeTeam
		graphql.NoUnmarshalJSON
	}
	firstPass.getTeamNodeTeam = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.TeamFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalgetTeamNodeTeam struct {
	Typename string `json:"__typename"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description string `json:"description"`

	Slug string `json:"slug"`

	Privacy TeamPrivacy `json:"privacy"`

	IsDefaultTeam bool `json:"isDefaultTeam"`

	DefaultMemberRole TeamMemberRole `json:"defaultMemberRole"`

	MembersCanCreatePipelines bool `json:"membersCanCreatePipelines"`
}

func (v *getTeamNodeTeam) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getTeamNodeTeam) __premarshalJSON() (*__premarshalgetTeamNodeTeam, error) {
	var retval __premarshalgetTeamNodeTeam

	retval.Typename = v.Typename
	retval.Id = v.TeamFields.Id
	retval.Uuid = v.TeamFields.Uuid
	retval.Name = v.TeamFields.Name
	retval.Description = v.TeamFields.Description
	retval.Slug = v.TeamFields.Slug
	retval.Privacy = v.TeamFields.Privacy
	retval.IsDefaultTeam = v.TeamFields.IsDefaultTeam
	retval.DefaultMemberRole = v.TeamFields.DefaultMemberRole
	retval.MembersCanCreatePipelines = v.TeamFields.MembersCanCreatePipelines
	return &retval, nil
}

// getTeamNodeTeamMember includes the requested fields of the GraphQL type TeamMember.
// The GraphQL type's documentation follows.
//
// An member of a team
type getTeamNodeTeamMember struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeTeamMember.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeamMember) GetTypename() string { return v.Typename }

// getTeamNodeTeamPipeline includes the requested fields of the GraphQL type TeamPipeline.
// The GraphQL type's documentation follows.
//
// An pipeline that's been assigned to a team
type getTeamNodeTeamPipeline struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeTeamPipeline.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeamPipeline) GetTypename() string { return v.Typename }

// getTeamNodeTeamSuite includes the requested fields of the GraphQL type TeamSuite.
// The GraphQL type's documentation follows.
//
// A suite that's been assigned to a team
type getTeamNodeTeamSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeTeamSuite.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeTeamSuite) GetTypename() string { return v.Typename }

// getTeamNodeUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user
type getTeamNodeUser struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeUser.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeUser) GetTypename() string { return v.Typename }

// getTeamNodeViewer includes the requested fields of the GraphQL type Viewer.
// The GraphQL type's documentation follows.
//
// Represents the current user session
type getTeamNodeViewer struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getTeamNodeViewer.Typename, and is useful for accessing the field via an interface.
func (v *getTeamNodeViewer) GetTypename() string { return v.Typename }

// getTeamResponse is returned by getTeam on success.
type getTeamResponse struct {
	// Fetches an object given its ID.
	Node getTeamNode `json:"-"`
}

// GetNode returns getTeamResponse.Node, and is useful for accessing the field via an interface.
func (v *getTeamResponse) GetNode() getTeamNode { return v.Node }

func (v *getTeamResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getTeamResponse
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getTeamResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalgetTeamNode(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal getTeamResponse.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetTeamResponse struct {
	Node json.RawMessage `json:"node"`
}

func (v *getTeamResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getTeamResponse) __premarshalJSON() (*__premarshalgetTeamResponse, error) {
	var retval __premarshalgetTeamResponse

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalgetTeamNode(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal getTeamResponse.Node: %w", err)
		}
	}
	return &retval, nil
}

// revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload includes the requested fields of the GraphQL type AgentTokenRevokePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of AgentTokenRevoke.
type revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload struct {
	AgentToken revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken `json:"agentToken"`
}

// GetAgentToken returns revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload.AgentToken, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload) GetAgentToken() revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken {
	return v.AgentToken
}

// revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken includes the requested fields of the GraphQL type AgentToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent to Buildkite
type revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken struct {
	Id string `json:"id"`
	// A description about what this agent token is used for
	Description *string `json:"description"`
	// The public UUID for the agent
	Uuid string `json:"uuid"`
}

// GetId returns revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken.Id, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken) GetId() string {
	return v.Id
}

// GetDescription returns revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken.Description, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken) GetDescription() *string {
	return v.Description
}

// GetUuid returns revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken.Uuid, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayloadAgentToken) GetUuid() string {
	return v.Uuid
}

// revokeAgentTokenResponse is returned by revokeAgentToken on success.
type revokeAgentTokenResponse struct {
	// Revoke an agent registration token.
	AgentTokenRevoke revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload `json:"agentTokenRevoke"`
}

// GetAgentTokenRevoke returns revokeAgentTokenResponse.AgentTokenRevoke, and is useful for accessing the field via an interface.
func (v *revokeAgentTokenResponse) GetAgentTokenRevoke() revokeAgentTokenAgentTokenRevokeAgentTokenRevokePayload {
	return v.AgentTokenRevoke
}

// revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload includes the requested fields of the GraphQL type ClusterAgentTokenRevokePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterAgentTokenRevoke.
type revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload struct {
	DeletedClusterAgentTokenId string `json:"deletedClusterAgentTokenId"`
}

// GetDeletedClusterAgentTokenId returns revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload.DeletedClusterAgentTokenId, and is useful for accessing the field via an interface.
func (v *revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload) GetDeletedClusterAgentTokenId() string {
	return v.DeletedClusterAgentTokenId
}

// revokeClusterAgentTokenResponse is returned by revokeClusterAgentToken on success.
type revokeClusterAgentTokenResponse struct {
	// Revokes a cluster agent token
	ClusterAgentTokenRevoke revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload `json:"clusterAgentTokenRevoke"`
}

// GetClusterAgentTokenRevoke returns revokeClusterAgentTokenResponse.ClusterAgentTokenRevoke, and is useful for accessing the field via an interface.
func (v *revokeClusterAgentTokenResponse) GetClusterAgentTokenRevoke() revokeClusterAgentTokenClusterAgentTokenRevokeClusterAgentTokenRevokePayload {
	return v.ClusterAgentTokenRevoke
}

// setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload includes the requested fields of the GraphQL type OrganizationAPIIPAllowlistUpdateMutationPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of OrganizationAPIIPAllowlistUpdateMutation.
type setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload struct {
	Organization setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization `json:"organization"`
}

// GetOrganization returns setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload.Organization, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload) GetOrganization() setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization {
	return v.Organization
}

// setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization struct {
	// A space-separated allowlist of IP addresses that can access the organization via the GraphQL or REST API
	AllowedApiIpAddresses string `json:"allowedApiIpAddresses"`
}

// GetAllowedApiIpAddresses returns setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization.AllowedApiIpAddresses, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization) GetAllowedApiIpAddresses() string {
	return v.AllowedApiIpAddresses
}

// setApiIpAddressesResponse is returned by setApiIpAddresses on success.
type setApiIpAddressesResponse struct {
	// Sets an allowlist of IP addresses for API access to an organization. Please note that this is a beta feature and is not yet available to all organizations.
	OrganizationApiIpAllowlistUpdate setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload `json:"organizationApiIpAllowlistUpdate"`
}

// GetOrganizationApiIpAllowlistUpdate returns setApiIpAddressesResponse.OrganizationApiIpAllowlistUpdate, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesResponse) GetOrganizationApiIpAllowlistUpdate() setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload {
	return v.OrganizationApiIpAllowlistUpdate
}

// teamCreateResponse is returned by teamCreate on success.
type teamCreateResponse struct {
	// Create a team.
	TeamCreate teamCreateTeamCreateTeamCreatePayload `json:"teamCreate"`
}

// GetTeamCreate returns teamCreateResponse.TeamCreate, and is useful for accessing the field via an interface.
func (v *teamCreateResponse) GetTeamCreate() teamCreateTeamCreateTeamCreatePayload {
	return v.TeamCreate
}

// teamCreateTeamCreateTeamCreatePayload includes the requested fields of the GraphQL type TeamCreatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of TeamCreate.
type teamCreateTeamCreateTeamCreatePayload struct {
	TeamEdge teamCreateTeamCreateTeamCreatePayloadTeamEdge `json:"teamEdge"`
}

// GetTeamEdge returns teamCreateTeamCreateTeamCreatePayload.TeamEdge, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayload) GetTeamEdge() teamCreateTeamCreateTeamCreatePayloadTeamEdge {
	return v.TeamEdge
}

// teamCreateTeamCreateTeamCreatePayloadTeamEdge includes the requested fields of the GraphQL type TeamEdge.
type teamCreateTeamCreateTeamCreatePayloadTeamEdge struct {
	Node teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam `json:"node"`
}

// GetNode returns teamCreateTeamCreateTeamCreatePayloadTeamEdge.Node, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdge) GetNode() teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam {
	return v.Node
}

// teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam struct {
	TeamFields `json:"-"`
}

// GetId returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.Id, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetId() string {
	return v.TeamFields.Id
}

// GetUuid returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.Uuid, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetUuid() string {
	return v.TeamFields.Uuid
}

// GetName returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.Name, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetName() string {
	return v.TeamFields.Name
}

// GetDescription returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.Description, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetDescription() string {
	return v.TeamFields.Description
}

// GetSlug returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.Slug, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetSlug() string {
	return v.TeamFields.Slug
}

// GetPrivacy returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.Privacy, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetPrivacy() TeamPrivacy {
	return v.TeamFields.Privacy
}

// GetIsDefaultTeam returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetIsDefaultTeam() bool {
	return v.TeamFields.IsDefaultTeam
}

// GetDefaultMemberRole returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetDefaultMemberRole() TeamMemberRole {
	return v.TeamFields.DefaultMemberRole
}

// GetMembersCanCreatePipelines returns teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) GetMembersCanCreatePipelines() bool {
	return v.TeamFields.MembersCanCreatePipelines
}

func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam
		graphql.NoUnmarshalJSON
	}
	firstPass.teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.TeamFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalteamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description string `json:"description"`

	Slug string `json:"slug"`

	Privacy TeamPrivacy `json:"privacy"`

	IsDefaultTeam bool `json:"isDefaultTeam"`

	DefaultMemberRole TeamMemberRole `json:"defaultMemberRole"`

	MembersCanCreatePipelines bool `json:"membersCanCreatePipelines"`
}

func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *teamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam) __premarshalJSON() (*__premarshalteamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam, error) {
	var retval __premarshalteamCreateTeamCreateTeamCreatePayloadTeamEdgeNodeTeam

	retval.Id = v.TeamFields.Id
	retval.Uuid = v.TeamFields.Uuid
	retval.Name = v.TeamFields.Name
	retval.Description = v.TeamFields.Description
	retval.Slug = v.TeamFields.Slug
	retval.Privacy = v.TeamFields.Privacy
	retval.IsDefaultTeam = v.TeamFields.IsDefaultTeam
	retval.DefaultMemberRole = v.TeamFields.DefaultMemberRole
	retval.MembersCanCreatePipelines = v.TeamFields.MembersCanCreatePipelines
	return &retval, nil
}

// teamDeleteResponse is returned by teamDelete on success.
type teamDeleteResponse struct {
	// Delete a team.
	TeamDelete teamDeleteTeamDeleteTeamDeletePayload `json:"teamDelete"`
}

// GetTeamDelete returns teamDeleteResponse.TeamDelete, and is useful for accessing the field via an interface.
func (v *teamDeleteResponse) GetTeamDelete() teamDeleteTeamDeleteTeamDeletePayload {
	return v.TeamDelete
}

// teamDeleteTeamDeleteTeamDeletePayload includes the requested fields of the GraphQL type TeamDeletePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of TeamDelete.
type teamDeleteTeamDeleteTeamDeletePayload struct {
	DeletedTeamID string `json:"deletedTeamID"`
}

// GetDeletedTeamID returns teamDeleteTeamDeleteTeamDeletePayload.DeletedTeamID, and is useful for accessing the field via an interface.
func (v *teamDeleteTeamDeleteTeamDeletePayload) GetDeletedTeamID() string { return v.DeletedTeamID }

// teamUpdateResponse is returned by teamUpdate on success.
type teamUpdateResponse struct {
	// Change the settings for a team.
	TeamUpdate teamUpdateTeamUpdateTeamUpdatePayload `json:"teamUpdate"`
}

// GetTeamUpdate returns teamUpdateResponse.TeamUpdate, and is useful for accessing the field via an interface.
func (v *teamUpdateResponse) GetTeamUpdate() teamUpdateTeamUpdateTeamUpdatePayload {
	return v.TeamUpdate
}

// teamUpdateTeamUpdateTeamUpdatePayload includes the requested fields of the GraphQL type TeamUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of TeamUpdate.
type teamUpdateTeamUpdateTeamUpdatePayload struct {
	Team teamUpdateTeamUpdateTeamUpdatePayloadTeam `json:"team"`
}

// GetTeam returns teamUpdateTeamUpdateTeamUpdatePayload.Team, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayload) GetTeam() teamUpdateTeamUpdateTeamUpdatePayloadTeam {
	return v.Team
}

// teamUpdateTeamUpdateTeamUpdatePayloadTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type teamUpdateTeamUpdateTeamUpdatePayloadTeam struct {
	TeamFields `json:"-"`
}

// GetId returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.Id, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetId() string { return v.TeamFields.Id }

// GetUuid returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.Uuid, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetUuid() string { return v.TeamFields.Uuid }

// GetName returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.Name, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetName() string { return v.TeamFields.Name }

// GetDescription returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.Description, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetDescription() string {
	return v.TeamFields.Description
}

// GetSlug returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.Slug, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetSlug() string { return v.TeamFields.Slug }

// GetPrivacy returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.Privacy, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetPrivacy() TeamPrivacy {
	return v.TeamFields.Privacy
}

// GetIsDefaultTeam returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetIsDefaultTeam() bool {
	return v.TeamFields.IsDefaultTeam
}

// GetDefaultMemberRole returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetDefaultMemberRole() TeamMemberRole {
	return v.TeamFields.DefaultMemberRole
}

// GetMembersCanCreatePipelines returns teamUpdateTeamUpdateTeamUpdatePayloadTeam.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) GetMembersCanCreatePipelines() bool {
	return v.TeamFields.MembersCanCreatePipelines
}

func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*teamUpdateTeamUpdateTeamUpdatePayloadTeam
		graphql.NoUnmarshalJSON
	}
	firstPass.teamUpdateTeamUpdateTeamUpdatePayloadTeam = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.TeamFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalteamUpdateTeamUpdateTeamUpdatePayloadTeam struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description string `json:"description"`

	Slug string `json:"slug"`

	Privacy TeamPrivacy `json:"privacy"`

	IsDefaultTeam bool `json:"isDefaultTeam"`

	DefaultMemberRole TeamMemberRole `json:"defaultMemberRole"`

	MembersCanCreatePipelines bool `json:"membersCanCreatePipelines"`
}

func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *teamUpdateTeamUpdateTeamUpdatePayloadTeam) __premarshalJSON() (*__premarshalteamUpdateTeamUpdateTeamUpdatePayloadTeam, error) {
	var retval __premarshalteamUpdateTeamUpdateTeamUpdatePayloadTeam

	retval.Id = v.TeamFields.Id
	retval.Uuid = v.TeamFields.Uuid
	retval.Name = v.TeamFields.Name
	retval.Description = v.TeamFields.Description
	retval.Slug = v.TeamFields.Slug
	retval.Privacy = v.TeamFields.Privacy
	retval.IsDefaultTeam = v.TeamFields.IsDefaultTeam
	retval.DefaultMemberRole = v.TeamFields.DefaultMemberRole
	retval.MembersCanCreatePipelines = v.TeamFields.MembersCanCreatePipelines
	return &retval, nil
}

// updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload includes the requested fields of the GraphQL type ClusterAgentTokenUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterAgentTokenUpdate.
type updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload struct {
	ClusterAgentToken updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken `json:"clusterAgentToken"`
}

// GetClusterAgentToken returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload.ClusterAgentToken, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload) GetClusterAgentToken() updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken {
	return v.ClusterAgentToken
}

// updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken includes the requested fields of the GraphQL type ClusterToken.
// The GraphQL type's documentation follows.
//
// A token used to connect an agent in cluster to Buildkite
type updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken struct {
	ClusterAgentTokenValues `json:"-"`
}

// GetCluster returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken.Cluster, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) GetCluster() ClusterAgentTokenValuesCluster {
	return v.ClusterAgentTokenValues.Cluster
}

// GetDescription returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken.Description, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) GetDescription() string {
	return v.ClusterAgentTokenValues.Description
}

// GetId returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken.Id, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) GetId() string {
	return v.ClusterAgentTokenValues.Id
}

// GetUuid returns updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken.Uuid, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) GetUuid() string {
	return v.ClusterAgentTokenValues.Uuid
}

func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken
		graphql.NoUnmarshalJSON
	}
	firstPass.updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterAgentTokenValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalupdateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken struct {
	Cluster ClusterAgentTokenValuesCluster `json:"cluster"`

	Description string `json:"description"`

	Id string `json:"id"`

	Uuid string `json:"uuid"`
}

func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken) __premarshalJSON() (*__premarshalupdateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken, error) {
	var retval __premarshalupdateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayloadClusterAgentTokenClusterToken

	retval.Cluster = v.ClusterAgentTokenValues.Cluster
	retval.Description = v.ClusterAgentTokenValues.Description
	retval.Id = v.ClusterAgentTokenValues.Id
	retval.Uuid = v.ClusterAgentTokenValues.Uuid
	return &retval, nil
}

// updateClusterAgentTokenResponse is returned by updateClusterAgentToken on success.
type updateClusterAgentTokenResponse struct {
	// Updates a cluster agent token
	ClusterAgentTokenUpdate updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload `json:"clusterAgentTokenUpdate"`
}

// GetClusterAgentTokenUpdate returns updateClusterAgentTokenResponse.ClusterAgentTokenUpdate, and is useful for accessing the field via an interface.
func (v *updateClusterAgentTokenResponse) GetClusterAgentTokenUpdate() updateClusterAgentTokenClusterAgentTokenUpdateClusterAgentTokenUpdatePayload {
	return v.ClusterAgentTokenUpdate
}

// updateClusterClusterUpdateClusterUpdatePayload includes the requested fields of the GraphQL type ClusterUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterUpdate.
type updateClusterClusterUpdateClusterUpdatePayload struct {
	// A unique identifier for the client performing the mutation.
	ClientMutationId string                                                `json:"clientMutationId"`
	Cluster          updateClusterClusterUpdateClusterUpdatePayloadCluster `json:"cluster"`
}

// GetClientMutationId returns updateClusterClusterUpdateClusterUpdatePayload.ClientMutationId, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayload) GetClientMutationId() string {
	return v.ClientMutationId
}

// GetCluster returns updateClusterClusterUpdateClusterUpdatePayload.Cluster, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayload) GetCluster() updateClusterClusterUpdateClusterUpdatePayloadCluster {
	return v.Cluster
}

// updateClusterClusterUpdateClusterUpdatePayloadCluster includes the requested fields of the GraphQL type Cluster.
type updateClusterClusterUpdateClusterUpdatePayloadCluster struct {
	ClusterFields `json:"-"`
}

// GetId returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Id, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetId() string {
	return v.ClusterFields.Id
}

// GetUuid returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Uuid, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetUuid() string {
	return v.ClusterFields.Uuid
}

// GetName returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Name, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetName() string {
	return v.ClusterFields.Name
}

// GetDescription returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Description, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetDescription() *string {
	return v.ClusterFields.Description
}

// GetEmoji returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Emoji, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetEmoji() *string {
	return v.ClusterFields.Emoji
}

// GetColor returns updateClusterClusterUpdateClusterUpdatePayloadCluster.Color, and is useful for accessing the field via an interface.
func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) GetColor() *string {
	return v.ClusterFields.Color
}

func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateClusterClusterUpdateClusterUpdatePayloadCluster
		graphql.NoUnmarshalJSON
	}
	firstPass.updateClusterClusterUpdateClusterUpdatePayloadCluster = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalupdateClusterClusterUpdateClusterUpdatePayloadCluster struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Name string `json:"name"`

	Description *string `json:"description"`

	Emoji *string `json:"emoji"`

	Color *string `json:"color"`
}

func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateClusterClusterUpdateClusterUpdatePayloadCluster) __premarshalJSON() (*__premarshalupdateClusterClusterUpdateClusterUpdatePayloadCluster, error) {
	var retval __premarshalupdateClusterClusterUpdateClusterUpdatePayloadCluster

	retval.Id = v.ClusterFields.Id
	retval.Uuid = v.ClusterFields.Uuid
	retval.Name = v.ClusterFields.Name
	retval.Description = v.ClusterFields.Description
	retval.Emoji = v.ClusterFields.Emoji
	retval.Color = v.ClusterFields.Color
	return &retval, nil
}

// updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload includes the requested fields of the GraphQL type ClusterQueueUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ClusterQueueUpdate.
type updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload struct {
	ClusterQueue updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue `json:"clusterQueue"`
}

// GetClusterQueue returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload.ClusterQueue, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload) GetClusterQueue() updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue {
	return v.ClusterQueue
}

// updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue includes the requested fields of the GraphQL type ClusterQueue.
type updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue struct {
	ClusterQueueValues `json:"-"`
}

// GetId returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Id, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetId() string {
	return v.ClusterQueueValues.Id
}

// GetUuid returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Uuid, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetUuid() string {
	return v.ClusterQueueValues.Uuid
}

// GetKey returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Key, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetKey() string {
	return v.ClusterQueueValues.Key
}

// GetDescription returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Description, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetDescription() *string {
	return v.ClusterQueueValues.Description
}

// GetCluster returns updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue.Cluster, and is useful for accessing the field via an interface.
func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) GetCluster() ClusterQueueValuesCluster {
	return v.ClusterQueueValues.Cluster
}

func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue
		graphql.NoUnmarshalJSON
	}
	firstPass.updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ClusterQueueValues)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalupdateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue struct {
	Id string `json:"id"`

	Uuid string `json:"uuid"`

	Key string `json:"key"`

	Description *string `json:"description"`

	Cluster ClusterQueueValuesCluster `json:"cluster"`
}

func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue) __premarshalJSON() (*__premarshalupdateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue, error) {
	var retval __premarshalupdateClusterQueueClusterQueueUpdateClusterQueueUpdatePayloadClusterQueue

	retval.Id = v.ClusterQueueValues.Id
	retval.Uuid = v.ClusterQueueValues.Uuid
	retval.Key = v.ClusterQueueValues.Key
	retval.Description = v.ClusterQueueValues.Description
	retval.Cluster = v.ClusterQueueValues.Cluster
	return &retval, nil
}

// updateClusterQueueResponse is returned by updateClusterQueue on success.
type updateClusterQueueResponse struct {
	// Updates a cluster queue.
	ClusterQueueUpdate updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload `json:"clusterQueueUpdate"`
}

// GetClusterQueueUpdate returns updateClusterQueueResponse.ClusterQueueUpdate, and is useful for accessing the field via an interface.
func (v *updateClusterQueueResponse) GetClusterQueueUpdate() updateClusterQueueClusterQueueUpdateClusterQueueUpdatePayload {
	return v.ClusterQueueUpdate
}

// updateClusterResponse is returned by updateCluster on success.
type updateClusterResponse struct {
	// Updates a cluster.
	ClusterUpdate updateClusterClusterUpdateClusterUpdatePayload `json:"clusterUpdate"`
}

// GetClusterUpdate returns updateClusterResponse.ClusterUpdate, and is useful for accessing the field via an interface.
func (v *updateClusterResponse) GetClusterUpdate() updateClusterClusterUpdateClusterUpdatePayload {
	return v.ClusterUpdate
}

// updatePipelinePipelineUpdatePipelineUpdatePayload includes the requested fields of the GraphQL type PipelineUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineUpdate.
type updatePipelinePipelineUpdatePipelineUpdatePayload struct {
	Pipeline updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline `json:"pipeline"`
}

// GetPipeline returns updatePipelinePipelineUpdatePipelineUpdatePayload.Pipeline, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayload) GetPipeline() updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline {
	return v.Pipeline
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline struct {
	Id string `json:"id"`
	// Whether existing builds can be rebuilt as new builds.
	AllowRebuilds bool `json:"allowRebuilds"`
	// A branch filter pattern to limit which pushed branches trigger builds on this pipeline.
	BranchConfiguration string `json:"branchConfiguration"`
	// When a new build is created on a branch, any previous builds that are running on the same branch will be automatically cancelled
	CancelIntermediateBuilds bool `json:"cancelIntermediateBuilds"`
	// Limit which branches build cancelling applies to, for example `!main` will ensure that the main branch won't have it's builds automatically cancelled.
	CancelIntermediateBuildsBranchFilter string                                                           `json:"cancelIntermediateBuildsBranchFilter"`
	Cluster                              updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster `json:"cluster"`
	// The default branch for this pipeline
	DefaultBranch string `json:"defaultBranch"`
	// The default timeout in minutes for all command steps in this pipeline. This can still be overridden in any command step
	DefaultTimeoutInMinutes int `json:"defaultTimeoutInMinutes"`
	// The maximum timeout in minutes for all command steps in this pipeline. Any command step without a timeout or with a timeout greater than this value will be set to this value.
	MaximumTimeoutInMinutes int `json:"maximumTimeoutInMinutes"`
	// The short description of the pipeline
	Description string `json:"description"`
	// The name of the pipeline
	Name string `json:"name"`
	// The repository for this pipeline
	Repository updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository `json:"repository"`
	// When a new build is created on a branch, any previous builds that haven't yet started on the same branch will be automatically marked as skipped.
	SkipIntermediateBuilds bool `json:"skipIntermediateBuilds"`
	// Limit which branches build skipping applies to, for example `!main` will ensure that the main branch won't have it's builds automatically skipped.
	SkipIntermediateBuildsBranchFilter string `json:"skipIntermediateBuildsBranchFilter"`
	// The slug of the pipeline
	Slug  string                                                         `json:"slug"`
	Steps updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps `json:"steps"`
	// Tags that have been given to this pipeline
	Tags []updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag `json:"tags"`
	// Teams associated with this pipeline
	Teams updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection `json:"teams"`
	// The URL to use in your repository settings for commit webhooks
	WebhookURL string `json:"webhookURL"`
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetId() string { return v.Id }

// GetAllowRebuilds returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.AllowRebuilds, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetAllowRebuilds() bool {
	return v.AllowRebuilds
}

// GetBranchConfiguration returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.BranchConfiguration, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetBranchConfiguration() string {
	return v.BranchConfiguration
}

// GetCancelIntermediateBuilds returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.CancelIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetCancelIntermediateBuilds() bool {
	return v.CancelIntermediateBuilds
}

// GetCancelIntermediateBuildsBranchFilter returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.CancelIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetCancelIntermediateBuildsBranchFilter() string {
	return v.CancelIntermediateBuildsBranchFilter
}

// GetCluster returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Cluster, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetCluster() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster {
	return v.Cluster
}

// GetDefaultBranch returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.DefaultBranch, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetDefaultBranch() string {
	return v.DefaultBranch
}

// GetDefaultTimeoutInMinutes returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.DefaultTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetDefaultTimeoutInMinutes() int {
	return v.DefaultTimeoutInMinutes
}

// GetMaximumTimeoutInMinutes returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.MaximumTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetMaximumTimeoutInMinutes() int {
	return v.MaximumTimeoutInMinutes
}

// GetDescription returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Description, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetDescription() string {
	return v.Description
}

// GetName returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Name, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetName() string { return v.Name }

// GetRepository returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Repository, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetRepository() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository {
	return v.Repository
}

// GetSkipIntermediateBuilds returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.SkipIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetSkipIntermediateBuilds() bool {
	return v.SkipIntermediateBuilds
}

// GetSkipIntermediateBuildsBranchFilter returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.SkipIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetSkipIntermediateBuildsBranchFilter() string {
	return v.SkipIntermediateBuildsBranchFilter
}

// GetSlug returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Slug, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetSlug() string { return v.Slug }

// GetSteps returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Steps, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetSteps() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps {
	return v.Steps
}

// GetTags returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Tags, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetTags() []updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag {
	return v.Tags
}

// GetTeams returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Teams, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetTeams() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection {
	return v.Teams
}

// GetWebhookURL returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.WebhookURL, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetWebhookURL() string {
	return v.WebhookURL
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster includes the requested fields of the GraphQL type Cluster.
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster struct {
	Id string `json:"id"`
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineCluster) GetId() string {
	return v.Id
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository associated with a pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository struct {
	// The git URL for this repository
	Url string `json:"url"`
}

// GetUrl returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository.Url, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineRepository) GetUrl() string {
	return v.Url
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps includes the requested fields of the GraphQL type PipelineSteps.
// The GraphQL type's documentation follows.
//
// Steps defined on a pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps struct {
	// A YAML representation of the pipeline steps
	Yaml string `json:"yaml"`
}

// GetYaml returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps.Yaml, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineSteps) GetYaml() string {
	return v.Yaml
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag includes the requested fields of the GraphQL type PipelineTag.
// The GraphQL type's documentation follows.
//
// A tag associated with a pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag struct {
	// The label for this tag
	Label string `json:"label"`
}

// GetLabel returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag.Label, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTagsPipelineTag) GetLabel() string {
	return v.Label
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection includes the requested fields of the GraphQL type TeamPipelineConnection.
// The GraphQL type's documentation follows.
//
// A collection of TeamPipeline records
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection struct {
	Edges []updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge `json:"edges"`
}

// GetEdges returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection.Edges, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnection) GetEdges() []updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge {
	return v.Edges
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge includes the requested fields of the GraphQL type TeamPipelineEdge.
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge struct {
	Node updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline `json:"node"`
}

// GetNode returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge.Node, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdge) GetNode() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline {
	return v.Node
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline includes the requested fields of the GraphQL type TeamPipeline.
// The GraphQL type's documentation follows.
//
// An pipeline that's been assigned to a team
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline struct {
	// The access level users have to this pipeline
	AccessLevel PipelineAccessLevels `json:"accessLevel"`
	Id          string               `json:"id"`
	// The team associated with this team member
	Team updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam `json:"team"`
}

// GetAccessLevel returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline.AccessLevel, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline) GetAccessLevel() PipelineAccessLevels {
	return v.AccessLevel
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline) GetId() string {
	return v.Id
}

// GetTeam returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline.Team, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipeline) GetTeam() updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam {
	return v.Team
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam struct {
	// A description of the team
	Description string `json:"description"`
	Id          string `json:"id"`
	// Add new organization members to this team by default
	IsDefaultTeam bool `json:"isDefaultTeam"`
	// New organization members will be granted this role on this team
	DefaultMemberRole TeamMemberRole `json:"defaultMemberRole"`
	// The name of the team
	Name string `json:"name"`
	// Whether or not team members can create new pipelines in this team
	MembersCanCreatePipelines bool `json:"membersCanCreatePipelines"`
	// The privacy setting for this team
	Privacy TeamPrivacy `json:"privacy"`
	// The slug of the team
	Slug string `json:"slug"`
	// The public UUID for this team
	Uuid string `json:"uuid"`
}

// GetDescription returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Description, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetDescription() string {
	return v.Description
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetId() string {
	return v.Id
}

// GetIsDefaultTeam returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetIsDefaultTeam() bool {
	return v.IsDefaultTeam
}

// GetDefaultMemberRole returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetDefaultMemberRole() TeamMemberRole {
	return v.DefaultMemberRole
}

// GetName returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Name, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetName() string {
	return v.Name
}

// GetMembersCanCreatePipelines returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetMembersCanCreatePipelines() bool {
	return v.MembersCanCreatePipelines
}

// GetPrivacy returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Privacy, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetPrivacy() TeamPrivacy {
	return v.Privacy
}

// GetSlug returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Slug, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetSlug() string {
	return v.Slug
}

// GetUuid returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam.Uuid, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipelineTeamsTeamPipelineConnectionEdgesTeamPipelineEdgeNodeTeamPipelineTeam) GetUuid() string {
	return v.Uuid
}

// updatePipelineResponse is returned by updatePipeline on success.
type updatePipelineResponse struct {
	// Change the settings for a pipeline.
	PipelineUpdate updatePipelinePipelineUpdatePipelineUpdatePayload `json:"pipelineUpdate"`
}

// GetPipelineUpdate returns updatePipelineResponse.PipelineUpdate, and is useful for accessing the field via an interface.
func (v *updatePipelineResponse) GetPipelineUpdate() updatePipelinePipelineUpdatePipelineUpdatePayload {
	return v.PipelineUpdate
}

// The query or mutation executed by archivePipeline.
const archivePipeline_Operation = `
mutation archivePipeline ($id: ID!) {
	pipelineArchive(input: {id:$id}) {
		clientMutationId
	}
}
`

func archivePipeline(
	client graphql.Client,
	id string,
) (*archivePipelineResponse, error) {
	req := &graphql.Request{
		OpName: "archivePipeline",
		Query:  archivePipeline_Operation,
		Variables: &__archivePipelineInput{
			Id: id,
		},
	}
	var err error

	var data archivePipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createAgentToken.
const createAgentToken_Operation = `
mutation createAgentToken ($organizationId: ID!, $description: String) {
	agentTokenCreate(input: {organizationID:$organizationId,description:$description}) {
		tokenValue
		agentTokenEdge {
			node {
				id
				description
				uuid
			}
		}
	}
}
`

func createAgentToken(
	client graphql.Client,
	organizationId string,
	description *string,
) (*createAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "createAgentToken",
		Query:  createAgentToken_Operation,
		Variables: &__createAgentTokenInput{
			OrganizationId: organizationId,
			Description:    description,
		},
	}
	var err error

	var data createAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createCluster.
const createCluster_Operation = `
mutation createCluster ($organizationId: ID!, $name: String!, $description: String, $emoji: String, $color: String) {
	clusterCreate(input: {organizationId:$organizationId,name:$name,description:$description,emoji:$emoji,color:$color}) {
		clientMutationId
		cluster {
			... ClusterFields
		}
	}
}
fragment ClusterFields on Cluster {
	id
	uuid
	name
	description
	emoji
	color
}
`

func createCluster(
	client graphql.Client,
	organizationId string,
	name string,
	description *string,
	emoji *string,
	color *string,
) (*createClusterResponse, error) {
	req := &graphql.Request{
		OpName: "createCluster",
		Query:  createCluster_Operation,
		Variables: &__createClusterInput{
			OrganizationId: organizationId,
			Name:           name,
			Description:    description,
			Emoji:          emoji,
			Color:          color,
		},
	}
	var err error

	var data createClusterResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createClusterAgentToken.
const createClusterAgentToken_Operation = `
mutation createClusterAgentToken ($organizationId: ID!, $clusterId: ID!, $description: String!) {
	clusterAgentTokenCreate(input: {organizationId:$organizationId,clusterId:$clusterId,description:$description}) {
		clusterAgentToken {
			... ClusterAgentTokenValues
		}
		tokenValue
	}
}
fragment ClusterAgentTokenValues on ClusterToken {
	cluster {
		id
		uuid
	}
	description
	id
	uuid
}
`

func createClusterAgentToken(
	client graphql.Client,
	organizationId string,
	clusterId string,
	description string,
) (*createClusterAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "createClusterAgentToken",
		Query:  createClusterAgentToken_Operation,
		Variables: &__createClusterAgentTokenInput{
			OrganizationId: organizationId,
			ClusterId:      clusterId,
			Description:    description,
		},
	}
	var err error

	var data createClusterAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createClusterQueue.
const createClusterQueue_Operation = `
mutation createClusterQueue ($organizationId: ID!, $clusterId: ID!, $key: String!, $description: String) {
	clusterQueueCreate(input: {organizationId:$organizationId,clusterId:$clusterId,key:$key,description:$description}) {
		clusterQueue {
			... ClusterQueueValues
		}
	}
}
fragment ClusterQueueValues on ClusterQueue {
	id
	uuid
	key
	description
	cluster {
		id
		uuid
	}
}
`

func createClusterQueue(
	client graphql.Client,
	organizationId string,
	clusterId string,
	key string,
	description *string,
) (*createClusterQueueResponse, error) {
	req := &graphql.Request{
		OpName: "createClusterQueue",
		Query:  createClusterQueue_Operation,
		Variables: &__createClusterQueueInput{
			OrganizationId: organizationId,
			ClusterId:      clusterId,
			Key:            key,
			Description:    description,
		},
	}
	var err error

	var data createClusterQueueResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteCluster.
const deleteCluster_Operation = `
mutation deleteCluster ($organizationId: ID!, $id: ID!) {
	clusterDelete(input: {organizationId:$organizationId,id:$id}) {
		clientMutationId
	}
}
`

func deleteCluster(
	client graphql.Client,
	organizationId string,
	id string,
) (*deleteClusterResponse, error) {
	req := &graphql.Request{
		OpName: "deleteCluster",
		Query:  deleteCluster_Operation,
		Variables: &__deleteClusterInput{
			OrganizationId: organizationId,
			Id:             id,
		},
	}
	var err error

	var data deleteClusterResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteClusterQueue.
const deleteClusterQueue_Operation = `
mutation deleteClusterQueue ($organizationId: ID!, $id: ID!) {
	clusterQueueDelete(input: {organizationId:$organizationId,id:$id}) {
		clientMutationId
	}
}
`

func deleteClusterQueue(
	client graphql.Client,
	organizationId string,
	id string,
) (*deleteClusterQueueResponse, error) {
	req := &graphql.Request{
		OpName: "deleteClusterQueue",
		Query:  deleteClusterQueue_Operation,
		Variables: &__deleteClusterQueueInput{
			OrganizationId: organizationId,
			Id:             id,
		},
	}
	var err error

	var data deleteClusterQueueResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getAgentToken.
const getAgentToken_Operation = `
query getAgentToken ($slug: ID!) {
	agentToken(slug: $slug) {
		id
		description
		uuid
	}
}
`

func getAgentToken(
	client graphql.Client,
	slug string,
) (*getAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "getAgentToken",
		Query:  getAgentToken_Operation,
		Variables: &__getAgentTokenInput{
			Slug: slug,
		},
	}
	var err error

	var data getAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getCluster.
const getCluster_Operation = `
query getCluster ($orgSlug: ID!, $id: ID!) {
	organization(slug: $orgSlug) {
		cluster(id: $id) {
			... ClusterFields
		}
	}
}
fragment ClusterFields on Cluster {
	id
	uuid
	name
	description
	emoji
	color
}
`

func getCluster(
	client graphql.Client,
	orgSlug string,
	id string,
) (*getClusterResponse, error) {
	req := &graphql.Request{
		OpName: "getCluster",
		Query:  getCluster_Operation,
		Variables: &__getClusterInput{
			OrgSlug: orgSlug,
			Id:      id,
		},
	}
	var err error

	var data getClusterResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getClusterAgentTokens.
const getClusterAgentTokens_Operation = `
query getClusterAgentTokens ($orgSlug: ID!, $id: ID!) {
	organization(slug: $orgSlug) {
		cluster(id: $id) {
			agentTokens(first: 50) {
				edges {
					node {
						... ClusterAgentTokenValues
					}
				}
			}
		}
	}
}
fragment ClusterAgentTokenValues on ClusterToken {
	cluster {
		id
		uuid
	}
	description
	id
	uuid
}
`

func getClusterAgentTokens(
	client graphql.Client,
	orgSlug string,
	id string,
) (*getClusterAgentTokensResponse, error) {
	req := &graphql.Request{
		OpName: "getClusterAgentTokens",
		Query:  getClusterAgentTokens_Operation,
		Variables: &__getClusterAgentTokensInput{
			OrgSlug: orgSlug,
			Id:      id,
		},
	}
	var err error

	var data getClusterAgentTokensResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getClusterByName.
const getClusterByName_Operation = `
query getClusterByName ($orgSlug: ID!, $cursor: String) {
	organization(slug: $orgSlug) {
		clusters(order: NAME, first: 50, after: $cursor) {
			pageInfo {
				endCursor
				hasNextPage
			}
			edges {
				node {
					... ClusterFields
				}
			}
		}
	}
}
fragment ClusterFields on Cluster {
	id
	uuid
	name
	description
	emoji
	color
}
`

func getClusterByName(
	client graphql.Client,
	orgSlug string,
	cursor *string,
) (*getClusterByNameResponse, error) {
	req := &graphql.Request{
		OpName: "getClusterByName",
		Query:  getClusterByName_Operation,
		Variables: &__getClusterByNameInput{
			OrgSlug: orgSlug,
			Cursor:  cursor,
		},
	}
	var err error

	var data getClusterByNameResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getClusterQueues.
const getClusterQueues_Operation = `
query getClusterQueues ($orgSlug: ID!, $id: ID!) {
	organization(slug: $orgSlug) {
		cluster(id: $id) {
			queues(first: 50) {
				edges {
					node {
						... ClusterQueueValues
					}
				}
			}
		}
	}
}
fragment ClusterQueueValues on ClusterQueue {
	id
	uuid
	key
	description
	cluster {
		id
		uuid
	}
}
`

func getClusterQueues(
	client graphql.Client,
	orgSlug string,
	id string,
) (*getClusterQueuesResponse, error) {
	req := &graphql.Request{
		OpName: "getClusterQueues",
		Query:  getClusterQueues_Operation,
		Variables: &__getClusterQueuesInput{
			OrgSlug: orgSlug,
			Id:      id,
		},
	}
	var err error

	var data getClusterQueuesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getOrganization.
const getOrganization_Operation = `
query getOrganization ($slug: ID!) {
	organization(slug: $slug) {
		allowedApiIpAddresses
		id
		uuid
	}
}
`

func getOrganization(
	client graphql.Client,
	slug string,
) (*getOrganizationResponse, error) {
	req := &graphql.Request{
		OpName: "getOrganization",
		Query:  getOrganization_Operation,
		Variables: &__getOrganizationInput{
			Slug: slug,
		},
	}
	var err error

	var data getOrganizationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getPipeline.
const getPipeline_Operation = `
query getPipeline ($slug: ID!) {
	pipeline(slug: $slug) {
		id
		defaultBranch
		description
		name
		repository {
			url
		}
		slug
		webhookURL
	}
}
`

func getPipeline(
	client graphql.Client,
	slug string,
) (*getPipelineResponse, error) {
	req := &graphql.Request{
		OpName: "getPipeline",
		Query:  getPipeline_Operation,
		Variables: &__getPipelineInput{
			Slug: slug,
		},
	}
	var err error

	var data getPipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getTeam.
const getTeam_Operation = `
query getTeam ($id: ID!) {
	node(id: $id) {
		__typename
		... on Team {
			... TeamFields
		}
	}
}
fragment TeamFields on Team {
	id
	uuid
	name
	description
	slug
	privacy
	isDefaultTeam
	defaultMemberRole
	membersCanCreatePipelines
}
`

func getTeam(
	client graphql.Client,
	id string,
) (*getTeamResponse, error) {
	req := &graphql.Request{
		OpName: "getTeam",
		Query:  getTeam_Operation,
		Variables: &__getTeamInput{
			Id: id,
		},
	}
	var err error

	var data getTeamResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by revokeAgentToken.
const revokeAgentToken_Operation = `
mutation revokeAgentToken ($id: ID!, $reason: String!) {
	agentTokenRevoke(input: {id:$id,reason:$reason}) {
		agentToken {
			id
			description
			uuid
		}
	}
}
`

func revokeAgentToken(
	client graphql.Client,
	id string,
	reason string,
) (*revokeAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "revokeAgentToken",
		Query:  revokeAgentToken_Operation,
		Variables: &__revokeAgentTokenInput{
			Id:     id,
			Reason: reason,
		},
	}
	var err error

	var data revokeAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by revokeClusterAgentToken.
const revokeClusterAgentToken_Operation = `
mutation revokeClusterAgentToken ($organizationId: ID!, $id: ID!) {
	clusterAgentTokenRevoke(input: {organizationId:$organizationId,id:$id}) {
		deletedClusterAgentTokenId
	}
}
`

func revokeClusterAgentToken(
	client graphql.Client,
	organizationId string,
	id string,
) (*revokeClusterAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "revokeClusterAgentToken",
		Query:  revokeClusterAgentToken_Operation,
		Variables: &__revokeClusterAgentTokenInput{
			OrganizationId: organizationId,
			Id:             id,
		},
	}
	var err error

	var data revokeClusterAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by setApiIpAddresses.
const setApiIpAddresses_Operation = `
mutation setApiIpAddresses ($organizationID: ID!, $ipAddresses: String!) {
	organizationApiIpAllowlistUpdate(input: {organizationID:$organizationID,ipAddresses:$ipAddresses}) {
		organization {
			allowedApiIpAddresses
		}
	}
}
`

func setApiIpAddresses(
	client graphql.Client,
	organizationID string,
	ipAddresses string,
) (*setApiIpAddressesResponse, error) {
	req := &graphql.Request{
		OpName: "setApiIpAddresses",
		Query:  setApiIpAddresses_Operation,
		Variables: &__setApiIpAddressesInput{
			OrganizationID: organizationID,
			IpAddresses:    ipAddresses,
		},
	}
	var err error

	var data setApiIpAddressesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by teamCreate.
const teamCreate_Operation = `
mutation teamCreate ($organizationID: ID!, $name: String!, $description: String, $privacy: TeamPrivacy!, $isDefaultTeam: Boolean!, $defaultMemberRole: TeamMemberRole!, $membersCanCreatePipelines: Boolean) {
	teamCreate(input: {organizationID:$organizationID,name:$name,description:$description,privacy:$privacy,isDefaultTeam:$isDefaultTeam,defaultMemberRole:$defaultMemberRole,membersCanCreatePipelines:$membersCanCreatePipelines}) {
		teamEdge {
			node {
				... TeamFields
			}
		}
	}
}
fragment TeamFields on Team {
	id
	uuid
	name
	description
	slug
	privacy
	isDefaultTeam
	defaultMemberRole
	membersCanCreatePipelines
}
`

func teamCreate(
	client graphql.Client,
	organizationID string,
	name string,
	description string,
	privacy TeamPrivacy,
	isDefaultTeam bool,
	defaultMemberRole TeamMemberRole,
	membersCanCreatePipelines bool,
) (*teamCreateResponse, error) {
	req := &graphql.Request{
		OpName: "teamCreate",
		Query:  teamCreate_Operation,
		Variables: &__teamCreateInput{
			OrganizationID:            organizationID,
			Name:                      name,
			Description:               description,
			Privacy:                   privacy,
			IsDefaultTeam:             isDefaultTeam,
			DefaultMemberRole:         defaultMemberRole,
			MembersCanCreatePipelines: membersCanCreatePipelines,
		},
	}
	var err error

	var data teamCreateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by teamDelete.
const teamDelete_Operation = `
mutation teamDelete ($id: ID!) {
	teamDelete(input: {id:$id}) {
		deletedTeamID
	}
}
`

func teamDelete(
	client graphql.Client,
	id string,
) (*teamDeleteResponse, error) {
	req := &graphql.Request{
		OpName: "teamDelete",
		Query:  teamDelete_Operation,
		Variables: &__teamDeleteInput{
			Id: id,
		},
	}
	var err error

	var data teamDeleteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by teamUpdate.
const teamUpdate_Operation = `
mutation teamUpdate ($id: ID!, $name: String!, $description: String, $privacy: TeamPrivacy!, $isDefaultTeam: Boolean!, $defaultMemberRole: TeamMemberRole!, $membersCanCreatePipelines: Boolean) {
	teamUpdate(input: {id:$id,name:$name,description:$description,privacy:$privacy,isDefaultTeam:$isDefaultTeam,defaultMemberRole:$defaultMemberRole,membersCanCreatePipelines:$membersCanCreatePipelines}) {
		team {
			... TeamFields
		}
	}
}
fragment TeamFields on Team {
	id
	uuid
	name
	description
	slug
	privacy
	isDefaultTeam
	defaultMemberRole
	membersCanCreatePipelines
}
`

func teamUpdate(
	client graphql.Client,
	id string,
	name string,
	description string,
	privacy TeamPrivacy,
	isDefaultTeam bool,
	defaultMemberRole TeamMemberRole,
	membersCanCreatePipelines bool,
) (*teamUpdateResponse, error) {
	req := &graphql.Request{
		OpName: "teamUpdate",
		Query:  teamUpdate_Operation,
		Variables: &__teamUpdateInput{
			Id:                        id,
			Name:                      name,
			Description:               description,
			Privacy:                   privacy,
			IsDefaultTeam:             isDefaultTeam,
			DefaultMemberRole:         defaultMemberRole,
			MembersCanCreatePipelines: membersCanCreatePipelines,
		},
	}
	var err error

	var data teamUpdateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateCluster.
const updateCluster_Operation = `
mutation updateCluster ($organizationId: ID!, $id: ID!, $name: String, $description: String, $emoji: String, $color: String) {
	clusterUpdate(input: {organizationId:$organizationId,id:$id,name:$name,description:$description,emoji:$emoji,color:$color}) {
		clientMutationId
		cluster {
			... ClusterFields
		}
	}
}
fragment ClusterFields on Cluster {
	id
	uuid
	name
	description
	emoji
	color
}
`

func updateCluster(
	client graphql.Client,
	organizationId string,
	id string,
	name string,
	description *string,
	emoji *string,
	color *string,
) (*updateClusterResponse, error) {
	req := &graphql.Request{
		OpName: "updateCluster",
		Query:  updateCluster_Operation,
		Variables: &__updateClusterInput{
			OrganizationId: organizationId,
			Id:             id,
			Name:           name,
			Description:    description,
			Emoji:          emoji,
			Color:          color,
		},
	}
	var err error

	var data updateClusterResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateClusterAgentToken.
const updateClusterAgentToken_Operation = `
mutation updateClusterAgentToken ($organizationId: ID!, $id: ID!, $description: String!) {
	clusterAgentTokenUpdate(input: {organizationId:$organizationId,id:$id,description:$description}) {
		clusterAgentToken {
			... ClusterAgentTokenValues
		}
	}
}
fragment ClusterAgentTokenValues on ClusterToken {
	cluster {
		id
		uuid
	}
	description
	id
	uuid
}
`

func updateClusterAgentToken(
	client graphql.Client,
	organizationId string,
	id string,
	description string,
) (*updateClusterAgentTokenResponse, error) {
	req := &graphql.Request{
		OpName: "updateClusterAgentToken",
		Query:  updateClusterAgentToken_Operation,
		Variables: &__updateClusterAgentTokenInput{
			OrganizationId: organizationId,
			Id:             id,
			Description:    description,
		},
	}
	var err error

	var data updateClusterAgentTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateClusterQueue.
const updateClusterQueue_Operation = `
mutation updateClusterQueue ($organizationId: ID!, $id: ID!, $description: String) {
	clusterQueueUpdate(input: {organizationId:$organizationId,id:$id,description:$description}) {
		clusterQueue {
			... ClusterQueueValues
		}
	}
}
fragment ClusterQueueValues on ClusterQueue {
	id
	uuid
	key
	description
	cluster {
		id
		uuid
	}
}
`

func updateClusterQueue(
	client graphql.Client,
	organizationId string,
	id string,
	description *string,
) (*updateClusterQueueResponse, error) {
	req := &graphql.Request{
		OpName: "updateClusterQueue",
		Query:  updateClusterQueue_Operation,
		Variables: &__updateClusterQueueInput{
			OrganizationId: organizationId,
			Id:             id,
			Description:    description,
		},
	}
	var err error

	var data updateClusterQueueResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updatePipeline.
const updatePipeline_Operation = `
mutation updatePipeline ($input: PipelineUpdateInput!) {
	pipelineUpdate(input: $input) {
		pipeline {
			id
			allowRebuilds
			branchConfiguration
			cancelIntermediateBuilds
			cancelIntermediateBuildsBranchFilter
			cluster {
				id
			}
			defaultBranch
			defaultTimeoutInMinutes
			maximumTimeoutInMinutes
			description
			name
			repository {
				url
			}
			skipIntermediateBuilds
			skipIntermediateBuildsBranchFilter
			slug
			steps {
				yaml
			}
			tags {
				label
			}
			teams(first: 50) {
				edges {
					node {
						accessLevel
						id
						team {
							description
							id
							isDefaultTeam
							defaultMemberRole
							name
							membersCanCreatePipelines
							privacy
							slug
							uuid
						}
					}
				}
			}
			webhookURL
		}
	}
}
`

func updatePipeline(
	client graphql.Client,
	input PipelineUpdateInput,
) (*updatePipelineResponse, error) {
	req := &graphql.Request{
		OpName: "updatePipeline",
		Query:  updatePipeline_Operation,
		Variables: &__updatePipelineInput{
			Input: input,
		},
	}
	var err error

	var data updatePipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}
