// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package buildkite

import (
	"github.com/Khan/genqlient/graphql"
)

// All the possible build retention periods, depending on your billing plan
type BuildRetentionPeriods string

const (
	// 30 days
	BuildRetentionPeriodsDays30 BuildRetentionPeriods = "DAYS_30"
	// 60 days
	BuildRetentionPeriodsDays60 BuildRetentionPeriods = "DAYS_60"
	// 90 days
	BuildRetentionPeriodsDays90 BuildRetentionPeriods = "DAYS_90"
	// 6 months
	BuildRetentionPeriodsMonths6 BuildRetentionPeriods = "MONTHS_6"
	// 12 months
	BuildRetentionPeriodsMonths12 BuildRetentionPeriods = "MONTHS_12"
	// 18 months
	BuildRetentionPeriodsMonths18 BuildRetentionPeriods = "MONTHS_18"
	// 2 years
	BuildRetentionPeriodsYears2 BuildRetentionPeriods = "YEARS_2"
)

// The roles a user can be within a team
type GTeamMemberRole string

const (
	// The user is a regular member of the team
	GTeamMemberRoleMember GTeamMemberRole = "MEMBER"
	// The user can manage pipelines and users within the team
	GTeamMemberRoleMaintainer GTeamMemberRole = "MAINTAINER"
)

// Whether a team is visible or secret within an organization
type GenqlientTeamPrivacy string

const (
	// Visible to all members of the organization
	GenqlientTeamPrivacyVisible GenqlientTeamPrivacy = "VISIBLE"
	// Visible to organization administrators and members
	GenqlientTeamPrivacySecret GenqlientTeamPrivacy = "SECRET"
)

// Repository information for a pipeline
type PipelineRepositoryInput struct {
	// Repository information for a pipeline
	Url string `json:"url"`
}

// GetUrl returns PipelineRepositoryInput.Url, and is useful for accessing the field via an interface.
func (v *PipelineRepositoryInput) GetUrl() string { return v.Url }

// Step definition for a pipeline
type PipelineStepsInput struct {
	// Step definition for a pipeline
	Yaml string `json:"yaml"`
}

// GetYaml returns PipelineStepsInput.Yaml, and is useful for accessing the field via an interface.
func (v *PipelineStepsInput) GetYaml() string { return v.Yaml }

// Tag associated with a pipeline
type PipelineTagInput struct {
	// Tag associated with a pipeline
	Label string `json:"label"`
}

// GetLabel returns PipelineTagInput.Label, and is useful for accessing the field via an interface.
func (v *PipelineTagInput) GetLabel() string { return v.Label }

// Autogenerated input type of PipelineUpdate
type PipelineUpdateInput struct {
	// Autogenerated input type of PipelineUpdate
	ClientMutationId string `json:"clientMutationId"`
	// Autogenerated input type of PipelineUpdate
	Id string `json:"id"`
	// Autogenerated input type of PipelineUpdate
	Name string `json:"name"`
	// Autogenerated input type of PipelineUpdate
	Description string `json:"description"`
	// Autogenerated input type of PipelineUpdate
	Emoji string `json:"emoji"`
	// Autogenerated input type of PipelineUpdate
	Color string `json:"color"`
	// Autogenerated input type of PipelineUpdate
	Visibility PipelineVisibility `json:"visibility"`
	// Autogenerated input type of PipelineUpdate
	Repository PipelineRepositoryInput `json:"repository"`
	// Autogenerated input type of PipelineUpdate
	Steps PipelineStepsInput `json:"steps"`
	// Autogenerated input type of PipelineUpdate
	DefaultBranch string `json:"defaultBranch"`
	// Autogenerated input type of PipelineUpdate
	NextBuildNumber int `json:"nextBuildNumber"`
	// Autogenerated input type of PipelineUpdate
	SkipIntermediateBuilds bool `json:"skipIntermediateBuilds"`
	// Autogenerated input type of PipelineUpdate
	SkipIntermediateBuildsBranchFilter string `json:"skipIntermediateBuildsBranchFilter"`
	// Autogenerated input type of PipelineUpdate
	CancelIntermediateBuilds bool `json:"cancelIntermediateBuilds"`
	// Autogenerated input type of PipelineUpdate
	CancelIntermediateBuildsBranchFilter string `json:"cancelIntermediateBuildsBranchFilter"`
	// Autogenerated input type of PipelineUpdate
	AllowRebuilds bool `json:"allowRebuilds"`
	// Autogenerated input type of PipelineUpdate
	DefaultTimeoutInMinutes int `json:"defaultTimeoutInMinutes"`
	// Autogenerated input type of PipelineUpdate
	MaximumTimeoutInMinutes int `json:"maximumTimeoutInMinutes"`
	// Autogenerated input type of PipelineUpdate
	BuildRetentionEnabled bool `json:"buildRetentionEnabled"`
	// Autogenerated input type of PipelineUpdate
	BuildRetentionPeriod BuildRetentionPeriods `json:"buildRetentionPeriod"`
	// Autogenerated input type of PipelineUpdate
	BuildRetentionNumber int `json:"buildRetentionNumber"`
	// Autogenerated input type of PipelineUpdate
	ClusterId string `json:"clusterId"`
	// Autogenerated input type of PipelineUpdate
	Archived bool `json:"archived"`
	// Autogenerated input type of PipelineUpdate
	Tags []PipelineTagInput `json:"tags"`
	// Autogenerated input type of PipelineUpdate
	BranchConfiguration string `json:"branchConfiguration"`
}

// GetClientMutationId returns PipelineUpdateInput.ClientMutationId, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetClientMutationId() string { return v.ClientMutationId }

// GetId returns PipelineUpdateInput.Id, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetId() string { return v.Id }

// GetName returns PipelineUpdateInput.Name, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetName() string { return v.Name }

// GetDescription returns PipelineUpdateInput.Description, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDescription() string { return v.Description }

// GetEmoji returns PipelineUpdateInput.Emoji, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetEmoji() string { return v.Emoji }

// GetColor returns PipelineUpdateInput.Color, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetColor() string { return v.Color }

// GetVisibility returns PipelineUpdateInput.Visibility, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetVisibility() PipelineVisibility { return v.Visibility }

// GetRepository returns PipelineUpdateInput.Repository, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetRepository() PipelineRepositoryInput { return v.Repository }

// GetSteps returns PipelineUpdateInput.Steps, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSteps() PipelineStepsInput { return v.Steps }

// GetDefaultBranch returns PipelineUpdateInput.DefaultBranch, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDefaultBranch() string { return v.DefaultBranch }

// GetNextBuildNumber returns PipelineUpdateInput.NextBuildNumber, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetNextBuildNumber() int { return v.NextBuildNumber }

// GetSkipIntermediateBuilds returns PipelineUpdateInput.SkipIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSkipIntermediateBuilds() bool { return v.SkipIntermediateBuilds }

// GetSkipIntermediateBuildsBranchFilter returns PipelineUpdateInput.SkipIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetSkipIntermediateBuildsBranchFilter() string {
	return v.SkipIntermediateBuildsBranchFilter
}

// GetCancelIntermediateBuilds returns PipelineUpdateInput.CancelIntermediateBuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetCancelIntermediateBuilds() bool { return v.CancelIntermediateBuilds }

// GetCancelIntermediateBuildsBranchFilter returns PipelineUpdateInput.CancelIntermediateBuildsBranchFilter, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetCancelIntermediateBuildsBranchFilter() string {
	return v.CancelIntermediateBuildsBranchFilter
}

// GetAllowRebuilds returns PipelineUpdateInput.AllowRebuilds, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetAllowRebuilds() bool { return v.AllowRebuilds }

// GetDefaultTimeoutInMinutes returns PipelineUpdateInput.DefaultTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetDefaultTimeoutInMinutes() int { return v.DefaultTimeoutInMinutes }

// GetMaximumTimeoutInMinutes returns PipelineUpdateInput.MaximumTimeoutInMinutes, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetMaximumTimeoutInMinutes() int { return v.MaximumTimeoutInMinutes }

// GetBuildRetentionEnabled returns PipelineUpdateInput.BuildRetentionEnabled, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBuildRetentionEnabled() bool { return v.BuildRetentionEnabled }

// GetBuildRetentionPeriod returns PipelineUpdateInput.BuildRetentionPeriod, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBuildRetentionPeriod() BuildRetentionPeriods {
	return v.BuildRetentionPeriod
}

// GetBuildRetentionNumber returns PipelineUpdateInput.BuildRetentionNumber, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBuildRetentionNumber() int { return v.BuildRetentionNumber }

// GetClusterId returns PipelineUpdateInput.ClusterId, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetClusterId() string { return v.ClusterId }

// GetArchived returns PipelineUpdateInput.Archived, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetArchived() bool { return v.Archived }

// GetTags returns PipelineUpdateInput.Tags, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetTags() []PipelineTagInput { return v.Tags }

// GetBranchConfiguration returns PipelineUpdateInput.BranchConfiguration, and is useful for accessing the field via an interface.
func (v *PipelineUpdateInput) GetBranchConfiguration() string { return v.BranchConfiguration }

// The visibility of the pipeline
type PipelineVisibility string

const (
	// The pipeline is public
	PipelineVisibilityPublic PipelineVisibility = "PUBLIC"
	// The pipeline is private
	PipelineVisibilityPrivate PipelineVisibility = "PRIVATE"
)

// __getOrganizationInput is used internally by genqlient
type __getOrganizationInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getOrganizationInput.Slug, and is useful for accessing the field via an interface.
func (v *__getOrganizationInput) GetSlug() string { return v.Slug }

// __getPipelineInput is used internally by genqlient
type __getPipelineInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getPipelineInput.Slug, and is useful for accessing the field via an interface.
func (v *__getPipelineInput) GetSlug() string { return v.Slug }

// __getTeamInput is used internally by genqlient
type __getTeamInput struct {
	Slug string `json:"slug"`
}

// GetSlug returns __getTeamInput.Slug, and is useful for accessing the field via an interface.
func (v *__getTeamInput) GetSlug() string { return v.Slug }

// __setApiIpAddressesInput is used internally by genqlient
type __setApiIpAddressesInput struct {
	OrganizationID string `json:"organizationID"`
	IpAddresses    string `json:"ipAddresses"`
}

// GetOrganizationID returns __setApiIpAddressesInput.OrganizationID, and is useful for accessing the field via an interface.
func (v *__setApiIpAddressesInput) GetOrganizationID() string { return v.OrganizationID }

// GetIpAddresses returns __setApiIpAddressesInput.IpAddresses, and is useful for accessing the field via an interface.
func (v *__setApiIpAddressesInput) GetIpAddresses() string { return v.IpAddresses }

// __updatePipelineInput is used internally by genqlient
type __updatePipelineInput struct {
	Input PipelineUpdateInput `json:"input"`
}

// GetInput returns __updatePipelineInput.Input, and is useful for accessing the field via an interface.
func (v *__updatePipelineInput) GetInput() PipelineUpdateInput { return v.Input }

// getOrganizationOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type getOrganizationOrganization struct {
	// A space-separated allowlist of IP addresses that can access the organization via the GraphQL or REST API
	AllowedApiIpAddresses string `json:"allowedApiIpAddresses"`
	Id                    string `json:"id"`
	// The public UUID for this organization
	Uuid string `json:"uuid"`
}

// GetAllowedApiIpAddresses returns getOrganizationOrganization.AllowedApiIpAddresses, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetAllowedApiIpAddresses() string {
	return v.AllowedApiIpAddresses
}

// GetId returns getOrganizationOrganization.Id, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetId() string { return v.Id }

// GetUuid returns getOrganizationOrganization.Uuid, and is useful for accessing the field via an interface.
func (v *getOrganizationOrganization) GetUuid() string { return v.Uuid }

// getOrganizationResponse is returned by getOrganization on success.
type getOrganizationResponse struct {
	// Find an organization
	Organization getOrganizationOrganization `json:"organization"`
}

// GetOrganization returns getOrganizationResponse.Organization, and is useful for accessing the field via an interface.
func (v *getOrganizationResponse) GetOrganization() getOrganizationOrganization {
	return v.Organization
}

// getPipelinePipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type getPipelinePipeline struct {
	Id string `json:"id"`
	// The default branch for this pipeline
	DefaultBranch string `json:"defaultBranch"`
	// The short description of the pipeline
	Description string `json:"description"`
	// The name of the pipeline
	Name string `json:"name"`
	// The repository for this pipeline
	Repository getPipelinePipelineRepository `json:"repository"`
	// The slug of the pipeline
	Slug string `json:"slug"`
	// The URL to use in your repository settings for commit webhooks
	WebhookURL string `json:"webhookURL"`
}

// GetId returns getPipelinePipeline.Id, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetId() string { return v.Id }

// GetDefaultBranch returns getPipelinePipeline.DefaultBranch, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetDefaultBranch() string { return v.DefaultBranch }

// GetDescription returns getPipelinePipeline.Description, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetDescription() string { return v.Description }

// GetName returns getPipelinePipeline.Name, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetName() string { return v.Name }

// GetRepository returns getPipelinePipeline.Repository, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetRepository() getPipelinePipelineRepository { return v.Repository }

// GetSlug returns getPipelinePipeline.Slug, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetSlug() string { return v.Slug }

// GetWebhookURL returns getPipelinePipeline.WebhookURL, and is useful for accessing the field via an interface.
func (v *getPipelinePipeline) GetWebhookURL() string { return v.WebhookURL }

// getPipelinePipelineRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository associated with a pipeline
type getPipelinePipelineRepository struct {
	// The git URL for this repository
	Url string `json:"url"`
}

// GetUrl returns getPipelinePipelineRepository.Url, and is useful for accessing the field via an interface.
func (v *getPipelinePipelineRepository) GetUrl() string { return v.Url }

// getPipelineResponse is returned by getPipeline on success.
type getPipelineResponse struct {
	// Find a pipeline
	Pipeline getPipelinePipeline `json:"pipeline"`
}

// GetPipeline returns getPipelineResponse.Pipeline, and is useful for accessing the field via an interface.
func (v *getPipelineResponse) GetPipeline() getPipelinePipeline { return v.Pipeline }

// getTeamResponse is returned by getTeam on success.
type getTeamResponse struct {
	// Find a team
	Team getTeamTeam `json:"team"`
}

// GetTeam returns getTeamResponse.Team, and is useful for accessing the field via an interface.
func (v *getTeamResponse) GetTeam() getTeamTeam { return v.Team }

// getTeamTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// An organization team
type getTeamTeam struct {
	// New organization members will be granted this role on this team
	DefaultMemberRole GTeamMemberRole `json:"defaultMemberRole"`
	// A description of the team
	Description string `json:"description"`
	Id          string `json:"id"`
	// Add new organization members to this team by default
	IsDefaultTeam bool `json:"isDefaultTeam"`
	// Whether or not team members can create new pipelines in this team
	MembersCanCreatePipelines bool `json:"membersCanCreatePipelines"`
	// The name of the team
	Name string `json:"name"`
	// The privacy setting for this team
	Privacy GenqlientTeamPrivacy `json:"privacy"`
	// The slug of the team
	Slug string `json:"slug"`
	// The public UUID for this team
	Uuid string `json:"uuid"`
}

// GetDefaultMemberRole returns getTeamTeam.DefaultMemberRole, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetDefaultMemberRole() GTeamMemberRole { return v.DefaultMemberRole }

// GetDescription returns getTeamTeam.Description, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetDescription() string { return v.Description }

// GetId returns getTeamTeam.Id, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetId() string { return v.Id }

// GetIsDefaultTeam returns getTeamTeam.IsDefaultTeam, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetIsDefaultTeam() bool { return v.IsDefaultTeam }

// GetMembersCanCreatePipelines returns getTeamTeam.MembersCanCreatePipelines, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetMembersCanCreatePipelines() bool { return v.MembersCanCreatePipelines }

// GetName returns getTeamTeam.Name, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetName() string { return v.Name }

// GetPrivacy returns getTeamTeam.Privacy, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetPrivacy() GenqlientTeamPrivacy { return v.Privacy }

// GetSlug returns getTeamTeam.Slug, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetSlug() string { return v.Slug }

// GetUuid returns getTeamTeam.Uuid, and is useful for accessing the field via an interface.
func (v *getTeamTeam) GetUuid() string { return v.Uuid }

// setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload includes the requested fields of the GraphQL type OrganizationAPIIPAllowlistUpdateMutationPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of OrganizationAPIIPAllowlistUpdateMutation.
type setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload struct {
	Organization setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization `json:"organization"`
}

// GetOrganization returns setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload.Organization, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload) GetOrganization() setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization {
	return v.Organization
}

// setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An organization
type setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization struct {
	// A space-separated allowlist of IP addresses that can access the organization via the GraphQL or REST API
	AllowedApiIpAddresses string `json:"allowedApiIpAddresses"`
}

// GetAllowedApiIpAddresses returns setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization.AllowedApiIpAddresses, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayloadOrganization) GetAllowedApiIpAddresses() string {
	return v.AllowedApiIpAddresses
}

// setApiIpAddressesResponse is returned by setApiIpAddresses on success.
type setApiIpAddressesResponse struct {
	// Sets an allowlist of IP addresses for API access to an organization. Please note that this is a beta feature and is not yet available to all organizations.
	OrganizationApiIpAllowlistUpdate setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload `json:"organizationApiIpAllowlistUpdate"`
}

// GetOrganizationApiIpAllowlistUpdate returns setApiIpAddressesResponse.OrganizationApiIpAllowlistUpdate, and is useful for accessing the field via an interface.
func (v *setApiIpAddressesResponse) GetOrganizationApiIpAllowlistUpdate() setApiIpAddressesOrganizationApiIpAllowlistUpdateOrganizationAPIIPAllowlistUpdateMutationPayload {
	return v.OrganizationApiIpAllowlistUpdate
}

// updatePipelinePipelineUpdatePipelineUpdatePayload includes the requested fields of the GraphQL type PipelineUpdatePayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of PipelineUpdate.
type updatePipelinePipelineUpdatePipelineUpdatePayload struct {
	Pipeline updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline `json:"pipeline"`
}

// GetPipeline returns updatePipelinePipelineUpdatePipelineUpdatePayload.Pipeline, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayload) GetPipeline() updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline {
	return v.Pipeline
}

// updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline includes the requested fields of the GraphQL type Pipeline.
// The GraphQL type's documentation follows.
//
// A pipeline
type updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline struct {
	Id string `json:"id"`
}

// GetId returns updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline.Id, and is useful for accessing the field via an interface.
func (v *updatePipelinePipelineUpdatePipelineUpdatePayloadPipeline) GetId() string { return v.Id }

// updatePipelineResponse is returned by updatePipeline on success.
type updatePipelineResponse struct {
	// Change the settings for a pipeline.
	PipelineUpdate updatePipelinePipelineUpdatePipelineUpdatePayload `json:"pipelineUpdate"`
}

// GetPipelineUpdate returns updatePipelineResponse.PipelineUpdate, and is useful for accessing the field via an interface.
func (v *updatePipelineResponse) GetPipelineUpdate() updatePipelinePipelineUpdatePipelineUpdatePayload {
	return v.PipelineUpdate
}

// The query or mutation executed by getOrganization.
const getOrganization_Operation = `
query getOrganization ($slug: ID!) {
	organization(slug: $slug) {
		allowedApiIpAddresses
		id
		uuid
	}
}
`

func getOrganization(
	client graphql.Client,
	slug string,
) (*getOrganizationResponse, error) {
	req := &graphql.Request{
		OpName: "getOrganization",
		Query:  getOrganization_Operation,
		Variables: &__getOrganizationInput{
			Slug: slug,
		},
	}
	var err error

	var data getOrganizationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getPipeline.
const getPipeline_Operation = `
query getPipeline ($slug: ID!) {
	pipeline(slug: $slug) {
		id
		defaultBranch
		description
		name
		repository {
			url
		}
		slug
		webhookURL
	}
}
`

func getPipeline(
	client graphql.Client,
	slug string,
) (*getPipelineResponse, error) {
	req := &graphql.Request{
		OpName: "getPipeline",
		Query:  getPipeline_Operation,
		Variables: &__getPipelineInput{
			Slug: slug,
		},
	}
	var err error

	var data getPipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getTeam.
const getTeam_Operation = `
query getTeam ($slug: ID!) {
	team(slug: $slug) {
		defaultMemberRole
		description
		id
		isDefaultTeam
		membersCanCreatePipelines
		name
		privacy
		slug
		uuid
	}
}
`

func getTeam(
	client graphql.Client,
	slug string,
) (*getTeamResponse, error) {
	req := &graphql.Request{
		OpName: "getTeam",
		Query:  getTeam_Operation,
		Variables: &__getTeamInput{
			Slug: slug,
		},
	}
	var err error

	var data getTeamResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by setApiIpAddresses.
const setApiIpAddresses_Operation = `
mutation setApiIpAddresses ($organizationID: ID!, $ipAddresses: String!) {
	organizationApiIpAllowlistUpdate(input: {organizationID:$organizationID,ipAddresses:$ipAddresses}) {
		organization {
			allowedApiIpAddresses
		}
	}
}
`

func setApiIpAddresses(
	client graphql.Client,
	organizationID string,
	ipAddresses string,
) (*setApiIpAddressesResponse, error) {
	req := &graphql.Request{
		OpName: "setApiIpAddresses",
		Query:  setApiIpAddresses_Operation,
		Variables: &__setApiIpAddressesInput{
			OrganizationID: organizationID,
			IpAddresses:    ipAddresses,
		},
	}
	var err error

	var data setApiIpAddressesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updatePipeline.
const updatePipeline_Operation = `
mutation updatePipeline ($input: PipelineUpdateInput!) {
	pipelineUpdate(input: $input) {
		pipeline {
			id
		}
	}
}
`

func updatePipeline(
	client graphql.Client,
	input PipelineUpdateInput,
) (*updatePipelineResponse, error) {
	req := &graphql.Request{
		OpName: "updatePipeline",
		Query:  updatePipeline_Operation,
		Variables: &__updatePipelineInput{
			Input: input,
		},
	}
	var err error

	var data updatePipelineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}
