fragment ClusterFields on Cluster {
    id
    uuid
    name
    # @genqlient(pointer: true)
    description
    # @genqlient(pointer: true)
    emoji
    # @genqlient(pointer: true)
    color
    defaultQueue {
        id
        uuid
        key
        description
    }
}

query getClusterByName(
    $orgSlug: ID!,
    # @genqlient(pointer: true)
    $cursor: String
) {
    organization(slug: $orgSlug) {
        clusters(order: NAME, first: 50, after: $cursor) {
            pageInfo {
                endCursor
                hasNextPage
            }
            edges {
                node {
                    ...ClusterFields
                }
            }
        }
    }
}

mutation createCluster(
    $organizationId: ID!
    $name: String!
    # @genqlient(pointer: true)
    $description: String
    # @genqlient(pointer: true)
    $emoji: String
    # @genqlient(pointer: true)
    $color: String
) {
    clusterCreate(
        input: { organizationId: $organizationId, name: $name, description: $description, emoji: $emoji, color: $color }
    ) {
        clientMutationId
        cluster {
            ...ClusterFields
        }
    }
}

mutation updateCluster(
    $organizationId: ID!
    $id: ID!
    $name: String
    # @genqlient(pointer: true)
    $description: String
    # @genqlient(pointer: true)
    $emoji: String
    # @genqlient(pointer: true)
    $color: String
) {
    clusterUpdate(
        input: {
            organizationId: $organizationId
            id: $id
            name: $name
            description: $description
            emoji: $emoji
            color: $color
        }
    ) {
        clientMutationId
        cluster {
            ...ClusterFields
        }
    }
}

mutation setClusterDefaultQueue($organizationId: ID!, $clusterId: ID!, $queueId: ID) {
    clusterUpdate(input: {organizationId: $organizationId, id: $clusterId, defaultQueueId: $queueId}) {
        cluster {
            ...ClusterFields
            defaultQueue {
                id
                uuid
            }
        }
    }
}

mutation removeClusterDefaultQueue($organizationId: ID!, $clusterId: ID!) {
    clusterUpdate(input: {organizationId: $organizationId, id: $clusterId, defaultQueueId: null}) {
        cluster {
            ...ClusterFields
            defaultQueue {
                id
                uuid
            }
        }
    }
}

mutation deleteCluster($organizationId: ID!, $id: ID!) {
    clusterDelete(input: { organizationId: $organizationId, id: $id }) {
        clientMutationId
    }
}
