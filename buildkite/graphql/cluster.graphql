fragment ClusterFields on Cluster {
    id
    uuid
    name
    description
    emoji
    color
}

query getCluster($orgSlug: ID!, $id: ID!) {
    organization(slug: $orgSlug) {
        cluster(id: $id) {
            ...ClusterFields
        }
    }
}

# @genqlient(for: "ClusterCreateInput.description", pointer: true)
# @genqlient(for: "ClusterCreateInput.emoji", pointer: true)
# @genqlient(for: "ClusterCreateInput.color", pointer: true)
mutation createCluster(
  $organizationId: ID!
  $name: String!
  $description: String
  $emoji: String
  $color: String
  ) {
    clusterCreate(
        input: { organizationId: $organizationId, name: $name, description: $description, emoji: $emoji, color: $color }
    ) {
        clientMutationId
        cluster {
            ...ClusterFields
        }
    }
}

# @genqlient(for: "ClusterUpdateInput.description", pointer: true)
# @genqlient(for: "ClusterUpdateInput.emoji", pointer: true)
# @genqlient(for: "ClusterUpdateInput.color", pointer: true)
mutation updateCluster(
    $organizationId: ID!
    $id: ID!
    $name: String
    $description: String
    $emoji: String
    $color: String
) {
    clusterUpdate(
        input: {
            organizationId: $organizationId
            id: $id
            name: $name
            description: $description
            emoji: $emoji
            color: $color
        }
    ) {
        clientMutationId
        cluster {
            ...ClusterFields
        }
    }
}

mutation deleteCluster($organizationId: ID!, $id: ID!) {
    clusterDelete(input: { organizationId: $organizationId, id: $id }) {
        clientMutationId
    }
}
