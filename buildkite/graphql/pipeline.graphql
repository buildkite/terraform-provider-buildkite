query getPipeline($slug: ID!) {
    pipeline(slug: $slug) {
        id
        defaultBranch
        description
        name
        repository {
            url
        }
        slug
        webhookURL
    }
}

# @genqlient(for: "PipelineUpdateInput.clusterId", pointer: true)
# @genqlient(for: "PipelineUpdateInput.visibility", omitempty: true)
# @genqlient(for: "PipelineUpdateInput.buildRetentionEnabled", omitempty: true)
# @genqlient(for: "PipelineUpdateInput.buildRetentionPeriod", omitempty: true)
# @genqlient(for: "PipelineUpdateInput.buildRetentionNumber", omitempty: true)
# @genqlient(for: "PipelineUpdateInput.archived", omitempty: true)
# @genqlient(for: "PipelineUpdateInput.nextBuildNumber", omitempty: true)
mutation updatePipeline(
    $input: PipelineUpdateInput!
) {
    pipelineUpdate(input: $input) {
        pipeline {
            id
            allowRebuilds
            cancelIntermediateBuilds
            cancelIntermediateBuildsBranchFilter
            cluster {
                id
            }
            defaultBranch
            defaultTimeoutInMinutes
            maximumTimeoutInMinutes
            description
            name
            repository {
                url
            }
            skipIntermediateBuilds
            skipIntermediateBuildsBranchFilter
            slug
            steps {
                yaml
            }
            tags {
                label
            }
            teams (first: 50) {
                edges {
                    node {
                        accessLevel
                        id
                        team {
                            description
                            id
                            isDefaultTeam
                            defaultMemberRole
                            name
                            membersCanCreatePipelines
                            privacy
                            slug
                            uuid
                        }
                    }
                }
            }
            webhookURL
        }
    }
}

mutation archivePipeline ($id: ID!) {
  pipelineArchive(input:{
    id: $id
  }) {
    clientMutationId
  }
}