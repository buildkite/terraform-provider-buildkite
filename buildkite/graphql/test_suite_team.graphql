fragment TeamSuiteFields on TeamSuite {
    id
    teamSuiteUuid: uuid #Handling different uuid types via impementation in node.gqaphql
    accessLevel
    team {
        id
    }
    suite {
        id
    }
}

mutation createTestSuiteTeam($teamId: ID!, $suiteId: ID!, $accessLevel: SuiteAccessLevels!) {
    teamSuiteCreate(input: {teamID: $teamId, suiteID: $suiteId, accessLevel: $accessLevel}) {
        suite {
            teams(order: NAME, first: 50) {
                edges {
                    node {
                        id
                        uuid
                        team {
                            id
                        }
                    }
                }
            }
        }
        teamSuite {
            ...TeamSuiteFields
        }
    }
}

mutation deleteTestSuiteTeam($id: ID!) {
    teamSuiteDelete(input: {id: $id, force: true}) {
        deletedTeamSuiteID
        team {
            id
        }
    }
}

mutation updateTestSuiteTeam($id: ID!, $accessLevel: SuiteAccessLevels!) {
    teamSuiteUpdate(input: {id: $id, accessLevel: $accessLevel}) {
        teamSuite {
            accessLevel
            id
            uuid
        }
    }
}
